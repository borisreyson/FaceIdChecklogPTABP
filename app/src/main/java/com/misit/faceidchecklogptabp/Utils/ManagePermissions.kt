package com.misit.faceidchecklogptabp.Utilsimport android.app.Activityimport android.app.AlertDialogimport android.content.pm.PackageManagerimport androidx.core.app.ActivityCompatimport androidx.core.content.ContextCompatimport es.dmoral.toasty.Toastyclass ManagePermissions(val activity: Activity, val list: List<String>, val code:Int){        // Check permissions at runtime        fun checkPermissions() {            if (isPermissionsGranted() != PackageManager.PERMISSION_GRANTED) {                showAlert()            } else {//                Toasty.info(activity,"Permissions already granted.").show()            }        }        // Check permissions status        private fun isPermissionsGranted(): Int {            // PERMISSION_GRANTED : Constant Value: 0            // PERMISSION_DENIED : Constant Value: -1            var counter = 0;            for (permission in list) {                counter += ContextCompat.checkSelfPermission(activity, permission)            }            return counter        }        // Find the first denied permission        private fun deniedPermission(): String {            for (permission in list) {                if (ContextCompat.checkSelfPermission(activity, permission)                    == PackageManager.PERMISSION_DENIED) return permission            }            return ""        }        // Show alert dialog to request permissions        private fun showAlert() {            val builder = AlertDialog.Builder(activity)            builder.setTitle("Membutuhkan Izin Aplikasi")            builder.setMessage("Aplikasi Ini Membutuhkan Izin Dari Anda")            builder.setPositiveButton("OK", { dialog, which -> requestPermissions() })            builder.setNeutralButton("Batal", null)            val dialog = builder.create()            dialog.show()        }        // Request the permissions at run time        private fun requestPermissions() {            val permission = deniedPermission()            if (ActivityCompat.shouldShowRequestPermissionRationale(activity, permission)) {                // Show an explanation asynchronously                Toasty.info(activity,"Should show an explanation.").show()                ActivityCompat.requestPermissions(activity, list.toTypedArray(), code)            } else {                ActivityCompat.requestPermissions(activity, list.toTypedArray(), code)            }        }        // Process permissions result        fun processPermissionsResult(requestCode: Int, permissions: Array<String>,                                     grantResults: IntArray): Boolean {            var result = 0            if (grantResults.isNotEmpty()) {                for (item in grantResults) {                    result += item                }            }            if (result == PackageManager.PERMISSION_GRANTED) return true            return false        }}