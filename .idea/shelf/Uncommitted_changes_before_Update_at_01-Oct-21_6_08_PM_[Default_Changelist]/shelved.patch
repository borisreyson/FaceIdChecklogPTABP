Index: app/src/main/res/layout/activity_masuk.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\nxmlns:tools=\"http://schemas.android.com/tools\"\r\nandroid:layout_width=\"match_parent\"\r\nandroid:layout_height=\"match_parent\"\r\ntools:context=\".Absen.v1.MasukActivity\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/R_Bottom\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\">\r\n        <Button\r\n            android:id=\"@+id/btn_active_camera\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Scan Ulang\"\r\n            android:visibility=\"gone\" />\r\n        <Button\r\n            android:id=\"@+id/btnBack\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Kembali\"\r\n            android:visibility=\"gone\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btn_detect\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Scan Wajah\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            tools:layout_editor_absoluteX=\"2dp\" />\r\n    </RelativeLayout>\r\n\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/relativeLayout\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/R_Bottom\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <com.wonderkiln.camerakit.CameraView\r\n            android:id=\"@+id/camera_view\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:adjustViewBounds=\"true\">\r\n\r\n        </com.wonderkiln.camerakit.CameraView>\r\n\r\n        <com.misit.faceidchecklogptabp.Helper.GraphicOverlay\r\n            android:id=\"@+id/graphic_overlay\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/btnToggle\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_margin=\"5dp\"\r\n            android:background=\"@drawable/bg_circle\"\r\n            android:padding=\"5dp\"\r\n            android:src=\"@drawable/ic_switch_camera_black_24dp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n    <com.google.android.gms.ads.AdView\r\n        android:id=\"@+id/adViewIndex\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:adSize=\"BANNER\"\r\n        app:adUnitId=\"@string/APP_ADMOB_ID_BANNER\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/relativeLayout\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\">\r\n\r\n    </com.google.android.gms.ads.AdView>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_masuk.xml	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/res/layout/activity_masuk.xml	(date 1630048541277)
@@ -14,20 +14,29 @@
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent">
-        <Button
+        <com.google.android.material.button.MaterialButton
+            style="@style/Widget.MaterialComponents.Button.UnelevatedButton"
+            android:background="@color/colorPrimaryDark"
+            android:layout_margin="5dp"
             android:id="@+id/btn_active_camera"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:text="Scan Ulang"
             android:visibility="gone" />
-        <Button
+        <com.google.android.material.button.MaterialButton
+            style="@style/Widget.MaterialComponents.Button.UnelevatedButton"
+            android:background="@color/colorPrimaryDark"
+            android:layout_margin="5dp"
             android:id="@+id/btnBack"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:text="Kembali"
             android:visibility="gone" />
 
-        <Button
+        <com.google.android.material.button.MaterialButton
+            style="@style/Widget.MaterialComponents.Button.UnelevatedButton"
+            android:background="@color/colorPrimaryDark"
+            android:layout_margin="5dp"
             android:id="@+id/btn_detect"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".LoginActivity\">\r\n\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"32dp\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:layout_marginEnd=\"32dp\"\r\n        android:layout_marginBottom=\"32dp\"\r\n        app:cardCornerRadius=\"5dp\"\r\n        app:cardElevation=\"10dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/adViewIndex\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@drawable/bg_header\"\r\n                android:padding=\"20dp\"\r\n                android:text=\"Masuk Ke Face-Id\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"20sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/tilUsername\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"10dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/InUsername\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"Nomor Induk Karyawan\"\r\n                    android:imeOptions=\"actionNext\"\r\n                    android:inputType=\"numberSigned\"\r\n                    android:maxLines=\"1\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/tilPassword\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"10dp\"\r\n                app:passwordToggleEnabled=\"true\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/InPassword\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:hint=\"Kata Sandi\"\r\n                    android:inputType=\"textPassword\"\r\n                    android:maxLines=\"1\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <Button\r\n                android:id=\"@+id/loginBtn\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"10dp\"\r\n                android:background=\"@drawable/btn_bg\"\r\n                android:text=\"Masuk\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"@color/white\" />\r\n        </LinearLayout>\r\n    </androidx.cardview.widget.CardView>\r\n\r\n    <com.google.android.gms.ads.AdView\r\n        android:id=\"@+id/adViewIndex\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:adSize=\"BANNER\"\r\n        app:adUnitId=\"@string/APP_ADMOB_ID_BANNER\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"></com.google.android.gms.ads.AdView>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_login.xml	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/res/layout/activity_login.xml	(date 1630037398429)
@@ -40,6 +40,7 @@
                 android:id="@+id/tilUsername"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                 android:layout_margin="10dp">
 
                 <com.google.android.material.textfield.TextInputEditText
@@ -53,6 +54,7 @@
             </com.google.android.material.textfield.TextInputLayout>
 
             <com.google.android.material.textfield.TextInputLayout
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                 android:id="@+id/tilPassword"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
@@ -68,13 +70,16 @@
                     android:maxLines="1" />
             </com.google.android.material.textfield.TextInputLayout>
 
-            <Button
+            <com.google.android.material.button.MaterialButton
+                style="@style/Widget.MaterialComponents.Button.UnelevatedButton"
                 android:id="@+id/loginBtn"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:layout_margin="10dp"
-                android:background="@drawable/btn_bg"
+                android:layout_gravity="center_horizontal"
+                android:background="@color/colorPrimaryDark"
                 android:text="Masuk"
+                android:gravity="center_horizontal|center_vertical"
                 android:textAllCaps="false"
                 android:textColor="@color/white" />
         </LinearLayout>
Index: app/release/output-metadata.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"version\": 2,\r\n  \"artifactType\": {\r\n    \"type\": \"APK\",\r\n    \"kind\": \"Directory\"\r\n  },\r\n  \"applicationId\": \"com.misit.faceidchecklogptabp\",\r\n  \"variantName\": \"processReleaseResources\",\r\n  \"elements\": [\r\n    {\r\n      \"type\": \"SINGLE\",\r\n      \"filters\": [],\r\n      \"versionCode\": 14,\r\n      \"versionName\": \"2.4\",\r\n      \"outputFile\": \"app-release.apk\"\r\n    }\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/release/output-metadata.json	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/release/output-metadata.json	(date 1633082045544)
@@ -10,8 +10,8 @@
     {
       "type": "SINGLE",
       "filters": [],
-      "versionCode": 14,
-      "versionName": "2.4",
+      "versionCode": 21,
+      "versionName": "3.1",
       "outputFile": "app-release.apk"
     }
   ]
Index: app/src/main/java/com/misit/faceidchecklogptabp/Response/MainResponse/FirstLoadResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp.Response.MainResponse\r\n\r\nimport com.google.gson.annotations.SerializedName\r\n\r\ndata class FirstLoadResponse(\r\n\r\n\t@field:SerializedName(\"area\")\r\n\tval area: String? = null,\r\n\r\n\t@field:SerializedName(\"hari\")\r\n\tval hari: String? = null,\r\n\r\n\t@field:SerializedName(\"roster\")\r\n\tval roster: Roster? = null,\r\n\r\n\t@field:SerializedName(\"detik\")\r\n\tval detik: String? = null,\r\n\r\n\t@field:SerializedName(\"jam\")\r\n\tval jam: String? = null,\r\n\r\n\t@field:SerializedName(\"presensi\")\r\n\tval presensi: List<PresensiItem?>? = null,\r\n\r\n\t@field:SerializedName(\"absensi\")\r\n\tval absensi: Absensi? = null,\r\n\r\n\t@field:SerializedName(\"tanggal\")\r\n\tval tanggal: String? = null,\r\n\r\n\t@field:SerializedName(\"menit\")\r\n\tval menit: String? = null\r\n)\r\n\r\ndata class Absensi(\r\n\r\n\t@field:SerializedName(\"app\")\r\n\tval app: String? = null,\r\n\r\n\t@field:SerializedName(\"nik\")\r\n\tval nik: String? = null,\r\n\r\n\t@field:SerializedName(\"phone_token\")\r\n\tval phoneToken: String? = null,\r\n\r\n\t@field:SerializedName(\"flag\")\r\n\tval flag: Int? = null,\r\n\r\n\t@field:SerializedName(\"app_version\")\r\n\tval appVersion: String? = null,\r\n\r\n\t@field:SerializedName(\"jam\")\r\n\tval jam: String? = null,\r\n\r\n\t@field:SerializedName(\"tgl\")\r\n\tval tgl: String? = null,\r\n\r\n\t@field:SerializedName(\"imei\")\r\n\tval imei: String? = null,\r\n\r\n\t@field:SerializedName(\"id\")\r\n\tval id: Int? = null\r\n)\r\n\r\ndata class PresensiItem(\r\n\r\n\t@field:SerializedName(\"nik\")\r\n\tval nik: String? = null,\r\n\r\n\t@field:SerializedName(\"pulang\")\r\n\tval pulang: String? = null,\r\n\r\n\t@field:SerializedName(\"jam\")\r\n\tval jam: String? = null,\r\n\r\n\t@field:SerializedName(\"masuk\")\r\n\tval masuk: String? = null,\r\n\r\n\t@field:SerializedName(\"tanggal\")\r\n\tval tanggal: String? = null,\r\n\r\n\t@field:SerializedName(\"id_roster\")\r\n\tval idRoster: Int? = null,\r\n\r\n\t@field:SerializedName(\"kode_jam\")\r\n\tval kodeJam: String? = null,\r\n\r\n\t@field:SerializedName(\"status\")\r\n\tval status: String? = null\r\n)\r\n\r\ndata class Roster(\r\n\r\n\t@field:SerializedName(\"nik\")\r\n\tval nik: String? = null,\r\n\r\n\t@field:SerializedName(\"pulang\")\r\n\tval pulang: String? = null,\r\n\r\n\t@field:SerializedName(\"masuk\")\r\n\tval masuk: String? = null,\r\n\r\n\t@field:SerializedName(\"tanggal\")\r\n\tval tanggal: String? = null,\r\n\r\n\t@field:SerializedName(\"id_roster\")\r\n\tval idRoster: Int? = null,\r\n\r\n\t@field:SerializedName(\"kode_jam\")\r\n\tval kodeJam: String? = null\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Response/MainResponse/FirstLoadResponse.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Response/MainResponse/FirstLoadResponse.kt	(date 1633070394653)
@@ -5,107 +5,107 @@
 data class FirstLoadResponse(
 
 	@field:SerializedName("area")
-	val area: String? = null,
+	var area: String? = null,
 
 	@field:SerializedName("hari")
-	val hari: String? = null,
+	var hari: String? = null,
 
 	@field:SerializedName("roster")
-	val roster: Roster? = null,
+	var roster: Roster? = null,
 
 	@field:SerializedName("detik")
-	val detik: String? = null,
+	var detik: String? = null,
 
 	@field:SerializedName("jam")
-	val jam: String? = null,
+	var jam: String? = null,
 
 	@field:SerializedName("presensi")
-	val presensi: List<PresensiItem?>? = null,
+	var presensi: List<PresensiItem>? = null,
 
 	@field:SerializedName("absensi")
-	val absensi: Absensi? = null,
+	var absensi: Absensi? = null,
 
 	@field:SerializedName("tanggal")
-	val tanggal: String? = null,
+	var tanggal: String? = null,
 
 	@field:SerializedName("menit")
-	val menit: String? = null
+	var menit: String? = null
 )
 
 data class Absensi(
 
 	@field:SerializedName("app")
-	val app: String? = null,
+	var app: String? = null,
 
 	@field:SerializedName("nik")
-	val nik: String? = null,
+	var nik: String? = null,
 
 	@field:SerializedName("phone_token")
-	val phoneToken: String? = null,
+	var phoneToken: String? = null,
 
 	@field:SerializedName("flag")
-	val flag: Int? = null,
+	var flag: Int? = null,
 
 	@field:SerializedName("app_version")
-	val appVersion: String? = null,
+	var appVersion: String? = null,
 
 	@field:SerializedName("jam")
-	val jam: String? = null,
+	var jam: String? = null,
 
 	@field:SerializedName("tgl")
-	val tgl: String? = null,
+	var tgl: String? = null,
 
 	@field:SerializedName("imei")
-	val imei: String? = null,
+	var imei: String? = null,
 
 	@field:SerializedName("id")
-	val id: Int? = null
+	var id: Int? = null
 )
 
 data class PresensiItem(
 
 	@field:SerializedName("nik")
-	val nik: String? = null,
+	var nik: String? = null,
 
 	@field:SerializedName("pulang")
-	val pulang: String? = null,
+	var pulang: String? = null,
 
 	@field:SerializedName("jam")
-	val jam: String? = null,
+	var jam: String? = null,
 
 	@field:SerializedName("masuk")
-	val masuk: String? = null,
+	var masuk: String? = null,
 
 	@field:SerializedName("tanggal")
-	val tanggal: String? = null,
+	var tanggal: String? = null,
 
 	@field:SerializedName("id_roster")
-	val idRoster: Int? = null,
+	var idRoster: Int? = null,
 
 	@field:SerializedName("kode_jam")
-	val kodeJam: String? = null,
+	var kodeJam: String? = null,
 
 	@field:SerializedName("status")
-	val status: String? = null
+	var status: String? = null
 )
 
 data class Roster(
 
 	@field:SerializedName("nik")
-	val nik: String? = null,
+	var nik: String? = null,
 
 	@field:SerializedName("pulang")
-	val pulang: String? = null,
+	var pulang: String? = null,
 
 	@field:SerializedName("masuk")
-	val masuk: String? = null,
+	var masuk: String? = null,
 
 	@field:SerializedName("tanggal")
-	val tanggal: String? = null,
+	var tanggal: String? = null,
 
 	@field:SerializedName("id_roster")
-	val idRoster: Int? = null,
+	var idRoster: Int? = null,
 
 	@field:SerializedName("kode_jam")
-	val kodeJam: String? = null
+	var kodeJam: String? = null
 )
Index: app/src/main/java/com/misit/faceidchecklogptabp/HomeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp\r\n\r\nimport android.Manifest\r\nimport android.annotation.SuppressLint\r\nimport android.app.DatePickerDialog\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.location.Location\r\nimport android.location.LocationListener\r\nimport android.location.LocationManager\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.os.Looper\r\nimport android.provider.Settings\r\nimport android.telephony.TelephonyManager\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.DatePicker\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.android.gms.ads.MobileAds\r\nimport com.google.android.gms.tasks.OnCompleteListener\r\nimport com.google.android.material.textfield.TextInputEditText\r\nimport com.google.firebase.messaging.FirebaseMessaging\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Absen.v1.*\r\nimport com.misit.faceidchecklogptabp.Adapter.Last3DaysAdapter\r\nimport com.misit.faceidchecklogptabp.Response.Absen.DirInfoResponse\r\nimport com.misit.faceidchecklogptabp.Response.AbsenLastResponse\r\nimport com.misit.faceidchecklogptabp.Response.AbsenTigaHariItem\r\nimport com.misit.faceidchecklogptabp.Response.MainResponse.FirstLoadResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PopupUtil\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport kotlinx.android.synthetic.main.activity_home.*\r\nimport kotlinx.android.synthetic.main.activity_home.tvJam\r\nimport kotlinx.android.synthetic.main.activity_home.tvNama\r\nimport kotlinx.android.synthetic.main.activity_home.tvNik\r\nimport kotlinx.android.synthetic.main.lupa_masuk.view.*\r\nimport kotlinx.android.synthetic.main.lupa_pulang.view.*\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass HomeActivity : AppCompatActivity(),View.OnClickListener {\r\n    lateinit var handler : Handler\r\n    lateinit var tm : TelephonyManager\r\n    private var IMEI :String?=null\r\n    private var csrf_token : String?=\"\"\r\n    private var jamSekarang : Int=0\r\n    private var menitSekarang : Int=0\r\n    private var detikSekarang : Int=0\r\n    var tipe :String?=null\r\n    private var app_version : String?=\"\"\r\n    private var mLocationManager : LocationManager?=null\r\n    private var mLocation : Location?= null\r\n    lateinit var viewPassword: View\r\n    lateinit var alertDialog: AlertDialog\r\n    private var android_token : String?=null\r\n    private var adapter: Last3DaysAdapter? = null\r\n    private var absenList: MutableList<AbsenTigaHariItem>? = null\r\n    lateinit var rvLast3Day :RecyclerView\r\n    private val updateClock = object :Runnable{\r\n        override fun run() {\r\n            doJob()\r\n            handler.postDelayed(this,1000)\r\n        }\r\n\r\n    }\r\n    @SuppressLint(\"MissingPermission\")\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_home)\r\n        tvJam.text =\"\"\r\n        androidToken()\r\n        var intPerm :Int= ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE)\r\n        if(intPerm== PackageManager.PERMISSION_GRANTED){\r\n            tm = getSystemService(Context.TELEPHONY_SERVICE) as TelephonyManager\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                IMEI = Settings.Secure.getString(this.getContentResolver(), Settings.Secure.ANDROID_ID)\r\n            } else {\r\n                IMEI = tm.getDeviceId()\r\n            }\r\n        }\r\n        else{\r\n            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.READ_PHONE_STATE),123)\r\n        }\r\n        PrefsUtil.initInstance(this)\r\n        if(PrefsUtil.getInstance().getBooleanState(PrefsUtil.IS_LOGGED_IN,false)){\r\n            NAMA = PrefsUtil.getInstance().getStringState(PrefsUtil.NAMA_LENGKAP,\"\")\r\n            NIK = PrefsUtil.getInstance().getStringState(PrefsUtil.NIK,\"\")\r\n            SHOW_ABSEN = PrefsUtil.getInstance().getStringState(PrefsUtil.SHOW_ABSEN,\"\")\r\n        }\r\n        tipe = intent.getStringExtra(TIPE)\r\n        if(tipe==\"terlambat\"){\r\n//            listAbsen()\r\n        }\r\n        tvNama.text= NAMA\r\n        tvNik.text= NIK\r\n        handler= Handler(Looper.getMainLooper())\r\n//        MobileAds.initialize(this) {}\r\n//        r = Runnable{\r\n//            doJob()\r\n//        }\r\n        absenList = ArrayList()\r\n        adapter = Last3DaysAdapter(this@HomeActivity,absenList!!,NIK,NAMA)\r\n        rvLast3Day = findViewById(R.id.rvLast3Day)\r\n        val linearLayoutManager = LinearLayoutManager(this@HomeActivity)\r\n        rvLast3Day.layoutManager = linearLayoutManager\r\n        rvLast3Day.adapter= adapter\r\n        btnNewMasuk.setOnClickListener(this)\r\n        btnNewPulang.setOnClickListener(this)\r\n        btnFloatHistory.setOnClickListener(this)\r\n        btnListAllAbsen.setOnClickListener(this)\r\n        lpAbsenMasuk.setOnClickListener(this)\r\n        lpAbsenPulang.setOnClickListener(this)\r\n    }\r\n\r\n    override fun onClick(v: View?) {\r\n        if(v?.id==R.id.btnNewMasuk){\r\n            val intent= Intent(this, MasukActivity::class.java)\r\n            intent.putExtra(MasukActivity.NIK, NIK)\r\n            startActivity(intent)\r\n        }else\r\n        if(v?.id==R.id.btnNewPulang){\r\n            val intent= Intent(this, PulangActivity::class.java)\r\n            intent.putExtra(PulangActivity.NIK, NIK)\r\n            startActivity(intent)\r\n        }else\r\n        if(v?.id==R.id.btnFloatHistory){\r\n            val intent= Intent(this, LihatAbsenActivity::class.java)\r\n            intent.putExtra(LihatAbsenActivity.NIK, NIK)\r\n            startActivity(intent)\r\n        }else\r\n        if(v?.id == R.id.lpAbsenMasuk){\r\n            showDialogLupaMasuk()\r\n        }\r\n        if(v?.id == R.id.lpAbsenPulang){\r\n            showDialogLupaPulang()\r\n        }else\r\n        if (v?.id==R.id.btnListAllAbsen){\r\n            listAbsen()\r\n        }else{\r\n            btnNewLupaAbsen.collapse()\r\n        }\r\n    }\r\n    fun listAbsen(){\r\n        val intent= Intent(this, ListAbsenActivity::class.java)\r\n        intent.putExtra(ListAbsenActivity.NIK, NIK)\r\n\r\n        startActivity(intent)\r\n    }\r\n    //    androidToken\r\n    fun androidToken(){\r\n        FirebaseMessaging.getInstance().isAutoInitEnabled = true\r\n        FirebaseMessaging.getInstance().token\r\n            .addOnCompleteListener(OnCompleteListener { task ->\r\n                if (!task.isSuccessful) {\r\n                    Toast.makeText(this@HomeActivity,\"Error : $task.exception\", Toast.LENGTH_SHORT).show()\r\n\r\n                    return@OnCompleteListener\r\n                }\r\n                // Get new Instance ID token\r\n                android_token = task.result\r\n            })\r\n    }\r\n    //    androidToken\r\n    override fun onResume() {\r\n//        absenList?.clear()\r\n        loadAbsenTigaHari()\r\n        cekLokasi()\r\n        handler.post(updateClock)\r\n        if(SHOW_ABSEN ==\"1\"){\r\n            btnListAllAbsen.visibility=View.VISIBLE\r\n        }else{\r\n            btnListAllAbsen.visibility=View.GONE\r\n        }\r\n        super.onResume()\r\n    }\r\n\r\n    override fun onPause() {\r\n        handler.removeCallbacks(updateClock)\r\n        super.onPause()\r\n    }\r\n\r\n    override fun onStop() {\r\n        handler.removeCallbacks(updateClock)\r\n        super.onStop()\r\n    }\r\n    fun doJob() {\r\n            if(detikSekarang!!.toInt()>=59){\r\n                if(menitSekarang!!.toInt()>=59){\r\n                    if(jamSekarang!!.toInt()>=23){\r\n                        jamSekarang==0\r\n                        menitSekarang=0\r\n                        detikSekarang=0\r\n                    }else{\r\n                        jamSekarang=jamSekarang+1\r\n                        menitSekarang=0\r\n                        detikSekarang=0\r\n                    }\r\n                }else{\r\n                    menitSekarang=menitSekarang+1\r\n                    detikSekarang=0\r\n                }\r\n            }else{\r\n                detikSekarang=detikSekarang+1\r\n            }\r\n            if(jamSekarang<10) {\r\n                if(menitSekarang<10){\r\n                    if(detikSekarang<10){\r\n                        tvJam.text = \"0\" + \"${jamSekarang} : 0\" + \"${menitSekarang} : 0\" + \"${detikSekarang}\"\r\n                    }else{\r\n                        tvJam.text = \"0\" + \"${jamSekarang} : 0\" + \"${menitSekarang} : ${detikSekarang}\"\r\n                    }\r\n                }else{\r\n                    if(detikSekarang<10){\r\n                        tvJam.text = \"0\" + \"${jamSekarang} : ${menitSekarang} : 0\" + \"${detikSekarang}\"\r\n                    }else{\r\n                        tvJam.text = \"0\" + \"${jamSekarang} : ${menitSekarang} : ${detikSekarang}\"\r\n                    }\r\n                }\r\n            }else{\r\n                if(menitSekarang<10){\r\n                    if(detikSekarang<10){\r\n                        tvJam.text = \"${jamSekarang} : 0\" + \"${menitSekarang} : 0\" + \"${detikSekarang}\"\r\n                    }else{\r\n                        tvJam.text = \"${jamSekarang} : 0\" + \"${menitSekarang} : ${detikSekarang}\"\r\n                    }\r\n                }else{\r\n                    if(detikSekarang<10){\r\n                        tvJam.text = \"${jamSekarang} : ${menitSekarang} : 0\" + \"${detikSekarang}\"\r\n                    }else{\r\n                        tvJam.text =  \"${jamSekarang} : ${menitSekarang} : ${detikSekarang}\"\r\n                    }\r\n                }\r\n            }\r\n            tvTanggal.text = TANGGAL\r\n//            handler.postDelayed(r,1000)\r\n        }\r\n    fun cekLokasi(){\r\n        tvJam.text =\"\"\r\n        val apiEndPoint = ApiClient.getClient(this@HomeActivity)?.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch {\r\n            val call = apiEndPoint?.tokenCorutine(NIK,\"faceId\",android_token)\r\n                if (call != null) {\r\n                    if(call.isSuccessful)\r\n                    {\r\n                        val respon = call.body()\r\n                        if(respon!=null){\r\n                            if(respon.jam!=null)\r\n                                jamSekarang = respon.jam!!.toInt()\r\n                            menitSekarang = respon.menit!!.toInt()\r\n                            detikSekarang = respon.detik!!.toInt()\r\n                            TANGGAL = \"${respon.hari}, ${respon.tanggal}\"\r\n                            cekFaceID()\r\n                        }else{\r\n                            cekLokasi()\r\n                        }\r\n                    }else{\r\n                        cekLokasi()\r\n                    }\r\n                }else{\r\n                    cekLokasi()\r\n                }\r\n        }\r\n\r\n\r\n    }\r\n    fun koneksiInActive(){\r\n        AlertDialog.Builder(this)\r\n            .setTitle(\"Maaf , Anda Harus Menggunakan Jaringan Wifi PT. ABP!\")\r\n            .setPositiveButton(\"OK, Keluar\",{\r\n                    _,\r\n                    _ ->\r\n                finish()\r\n            })\r\n            .setOnDismissListener({_ -> finish()  })\r\n            .show()\r\n    }\r\n    fun cekFaceID(){\r\n        val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch {\r\n            val call = apiEndPoint?.dirInfoCorutine(NIK!!)\r\n            if(call!=null){\r\n                if(call.isSuccessful){\r\n                    val respon = call.body()\r\n                    if(respon!=null){\r\n                        if(respon.folder!=null){\r\n                            if(respon.folder){\r\n//                        btnFaceFalse.visibility=View.GONE\r\n//                        btnFaceTrue.visibility=View.VISIBLE\r\n                                PopupUtil.dismissDialog()\r\n                                loadAbsen()\r\n//                        btnDaftarWajah.visibility=View.GONE\r\n                            }else{\r\n//                        btnFaceFalse.visibility=View.VISIBLE\r\n//                        btnFaceTrue.visibility=View.GONE\r\n                                PopupUtil.dismissDialog()\r\n                                val intent = Intent(this@HomeActivity, DaftarWajahActivity::class.java)\r\n                                startActivity(intent)\r\n                            }\r\n                        }else{\r\n                            cekFaceID()\r\n                        }\r\n\r\n                    }else{\r\n                        cekFaceID()\r\n                    }\r\n                }else{\r\n                    cekFaceID()\r\n                }\r\n            }else{\r\n                cekFaceID()\r\n            }\r\n        }\r\n    }\r\n    fun loadAbsen(){\r\n        val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch(Dispatchers.Main){\r\n            val call = apiEndPoint?.lastAbsenCorutine(NIK!!)\r\n            if(call!=null){\r\n                if(call.isSuccessful){\r\n                    val response= call.body()\r\n                    if(response!=null){\r\n                        if(response.lastNew!=null){\r\n                            if(response.lastNew==\"Masuk\"){\r\n                                btnNewPulang.isEnabled=true\r\n                                btnNewMasuk.isEnabled=true\r\n                                btnNewMasuk.visibility=View.GONE\r\n                                btnNewPulang.visibility=View.VISIBLE\r\n                                tvNewMasuk.visibility=View.VISIBLE\r\n                                if(response.presensiMasuk!=null){\r\n                                    tvNewMasuk.text = response.presensiMasuk!!.jam.toString()\r\n                                }\r\n                                tvNewPulang.visibility=View.GONE\r\n                            }else if(response.lastNew==\"Pulang\"){\r\n//                                chkMasuk.isChecked=true\r\n//                                chkPulang.isChecked=true\r\n                                btnNewPulang.isEnabled=true\r\n                                btnNewMasuk.isEnabled=true\r\n                                btnNewMasuk.visibility=View.VISIBLE\r\n                                btnNewPulang.visibility=View.GONE\r\n                                tvNewMasuk.visibility=View.GONE\r\n                                tvNewPulang.visibility=View.VISIBLE\r\n                                if(response.presensiMasuk!=null){\r\n                                    tvNewMasuk.text = response.presensiMasuk!!.jam.toString()\r\n                                }\r\n                                if(response.presensiPulang!=null){\r\n                                    tvNewPulang.text = response.presensiPulang!!.jam.toString()\r\n                                }\r\n\r\n                            }else{\r\n//                                chkMasuk.isChecked=false\r\n//                                chkPulang.isChecked=false\r\n                                btnNewMasuk.isEnabled=true\r\n                                btnNewPulang.isEnabled=true\r\n                                btnNewMasuk.visibility=View.VISIBLE\r\n                                btnNewPulang.visibility=View.VISIBLE\r\n                                tvNewMasuk.visibility=View.GONE\r\n                                tvNewPulang.visibility=View.GONE\r\n                            }\r\n                            if(btnNewMasuk.isEnabled==false){\r\n\r\n                            }\r\n                        }else{\r\n//                        chkMasuk.isChecked=false\r\n//                        chkPulang.isChecked=false\r\n                            btnNewMasuk.isEnabled=true\r\n                            btnNewPulang.isEnabled=true\r\n                            btnNewMasuk.visibility=View.VISIBLE\r\n                            btnNewPulang.visibility=View.GONE\r\n                        }\r\n                    }else{\r\n                        loadAbsen()\r\n                    }\r\n                }else{\r\n                    loadAbsen()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun loadAbsenTigaHari() {\r\n        val apiEndPoint = ApiClient.getClient(this@HomeActivity)?.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch(Dispatchers.Main)\r\n        {\r\n            val call = apiEndPoint?.absenTigaHari(NIK!!)\r\n            if(call!=null){\r\n                if(call.isSuccessful){\r\n                    val res = call.body()\r\n                    if(res!==null){\r\n                        if(res.absenTigaHari!=null){\r\n                            absenList?.addAll(res.absenTigaHari!!)\r\n                            adapter?.notifyDataSetChanged()\r\n                        }else{\r\n                            loadAbsenTigaHari()\r\n                        }\r\n                        Log.d(\"DATATIGAHARI\",res.toString())\r\n                    }else{\r\n                        loadAbsenTigaHari()\r\n                    }\r\n                }else{\r\n                    loadAbsenTigaHari()\r\n                }\r\n            }else{\r\n                loadAbsenTigaHari()\r\n            }\r\n\r\n        }\r\n    }\r\n    fun showDialogLupaMasuk(){\r\n        MobileAds.initialize(this) {}\r\n\r\n        viewPassword = LayoutInflater.from(this@HomeActivity).inflate(R.layout.lupa_masuk,null)\r\n        if(viewPassword.parent!=null){\r\n            (viewPassword.parent as ViewGroup).removeView(viewPassword)\r\n        }\r\n        viewPassword.tglLupaAbsenMasuk.setOnClickListener{\r\n            showDialogTgl(viewPassword.tglLupaAbsenMasuk)\r\n        }\r\n        viewPassword.btnLupaAbsenMasuk.setOnClickListener{\r\n            if(viewPassword.tglLupaAbsenMasuk.text!!.isNotEmpty()){\r\n                val intent= Intent(this, LupaMasukActivity::class.java)\r\n                intent.putExtra(LupaMasukActivity.TGL_LUPA_ABSEN, viewPassword.tglLupaAbsenMasuk.text.toString())\r\n                startActivity(intent)\r\n                alertDialog.dismiss()\r\n            }else{\r\n                viewPassword.tilTanggalLupaMasuk.error=\"Tidak Boleh Kosong\"\r\n            }\r\n        }\r\n\r\n        viewPassword.btnBatalLupaAbsenMasuk.setOnClickListener{\r\n            alertDialog.dismiss()\r\n        }\r\n        alertDialog = AlertDialog.Builder(this@HomeActivity)\r\n            .setView(viewPassword).create()\r\n        alertDialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n        alertDialog.show()\r\n    }\r\n    fun showDialogLupaPulang(){\r\n        viewPassword = LayoutInflater.from(this@HomeActivity).inflate(R.layout.lupa_pulang,null)\r\n        if(viewPassword.parent!=null){\r\n            (viewPassword.parent as ViewGroup).removeView(viewPassword)\r\n        }\r\n        viewPassword.tglLupaAbsenPulang.setOnClickListener{\r\n            showDialogTgl(viewPassword.tglLupaAbsenPulang)\r\n        }\r\n        viewPassword.btnLupaAbsenPulang.setOnClickListener{\r\n            if(viewPassword.tglLupaAbsenPulang.text!!.isNotEmpty()){\r\n                val intent= Intent(this, LupaPulangActivity::class.java)\r\n                intent.putExtra(LupaPulangActivity.TGL_LUPA_ABSEN, viewPassword.tglLupaAbsenPulang.text.toString())\r\n                startActivity(intent)\r\n                alertDialog.dismiss()\r\n            }else{\r\n                viewPassword.tilTanggalLupaPulang.error=\"Tidak Boleh Kosong\"\r\n            }\r\n        }\r\n\r\n        viewPassword.btnBatalLupaAbsenPulang.setOnClickListener{\r\n            alertDialog.dismiss()\r\n        }\r\n        alertDialog = AlertDialog.Builder(this@HomeActivity)\r\n            .setView(viewPassword).create()\r\n        alertDialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n        alertDialog.show()\r\n    }\r\n\r\n    fun showDialogTgl(inTgl: TextInputEditText){\r\n        val now = Calendar.getInstance()\r\n        val datePicker  = DatePickerDialog.OnDateSetListener{\r\n                view: DatePicker?, year: Int, month: Int, dayOfMonth: Int ->\r\n            now.set(Calendar.YEAR,year)\r\n            now.set(Calendar.MONTH,month)\r\n            now.set(Calendar.DAY_OF_MONTH,dayOfMonth)\r\n            inTgl.setText(SimpleDateFormat(\"dd MMMM yyyy\").format(now.time))\r\n        }\r\n\r\n        DatePickerDialog(this,\r\n            datePicker,\r\n            now.get(Calendar.YEAR),\r\n            now.get(Calendar.MONTH),\r\n            now.get(Calendar.DAY_OF_MONTH)\r\n        ).show()\r\n    }\r\n    companion object{\r\n        var TIPE = \"TIPE\"\r\n        var PENGGUNA = \"PENGGUNA\"\r\n        var KARYAWAN = \"KARYAWAN\"\r\n        var NIK = \"NIK\"\r\n        var NAMA = \"NAMA\"\r\n        var SHOW_ABSEN=\"SHOW_ABSEN\"\r\n        var PERSENTASE = \"PERSENTASE\"\r\n        var LAT = 0.0\r\n        var LNG = 0.0\r\n        var TANGGAL = \"Selasa, 30 Maret 2021\"\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/HomeActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/HomeActivity.kt	(date 1633069960353)
@@ -169,21 +169,30 @@
     }
     //    androidToken
     fun androidToken(){
-        FirebaseMessaging.getInstance().isAutoInitEnabled = true
-        FirebaseMessaging.getInstance().token
-            .addOnCompleteListener(OnCompleteListener { task ->
-                if (!task.isSuccessful) {
-                    Toast.makeText(this@HomeActivity,"Error : $task.exception", Toast.LENGTH_SHORT).show()
+        try {
+
+            FirebaseMessaging.getInstance().isAutoInitEnabled = true
+            FirebaseMessaging.getInstance().token
+                .addOnCompleteListener(OnCompleteListener { task ->
+                    if (!task.isSuccessful) {
+                        Toast.makeText(this@HomeActivity,"Error : $task.exception", Toast.LENGTH_SHORT).show()
 
-                    return@OnCompleteListener
-                }
-                // Get new Instance ID token
-                android_token = task.result
-            })
+                        return@OnCompleteListener
+                    }
+                    // Get new Instance ID token
+                    android_token = task.result
+                })
+        }catch (e:Exception){
+            Log.e("HomeError","Cek Token :${e.message}")
+            androidToken()
+        }catch (e:InterruptedException){
+            Log.e("HomeError","Cek Token :${e.message}")
+            androidToken()
+        }
     }
     //    androidToken
     override fun onResume() {
-//        absenList?.clear()
+        absenList?.clear()
         loadAbsenTigaHari()
         cekLokasi()
         handler.post(updateClock)
@@ -256,10 +265,10 @@
 //            handler.postDelayed(r,1000)
         }
     fun cekLokasi(){
-        tvJam.text =""
-        val apiEndPoint = ApiClient.getClient(this@HomeActivity)?.create(ApiEndPoint::class.java)
-        GlobalScope.launch {
-            val call = apiEndPoint?.tokenCorutine(NIK,"faceId",android_token)
+            tvJam.text =""
+            val apiEndPoint = ApiClient.getClient(this@HomeActivity)?.create(ApiEndPoint::class.java)
+            GlobalScope.launch {
+                val call = apiEndPoint?.tokenCorutine(NIK,"faceId",android_token)
                 if (call != null) {
                     if(call.isSuccessful)
                     {
@@ -280,9 +289,7 @@
                 }else{
                     cekLokasi()
                 }
-        }
-
-
+            }
     }
     fun koneksiInActive(){
         AlertDialog.Builder(this)
@@ -296,135 +303,140 @@
             .show()
     }
     fun cekFaceID(){
-        val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
-        GlobalScope.launch {
-            val call = apiEndPoint?.dirInfoCorutine(NIK!!)
-            if(call!=null){
-                if(call.isSuccessful){
-                    val respon = call.body()
-                    if(respon!=null){
-                        if(respon.folder!=null){
-                            if(respon.folder){
+            val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
+            GlobalScope.launch {
+                val call = apiEndPoint?.dirInfoCorutine(NIK!!)
+                if(call!=null){
+                    if(call.isSuccessful){
+                        val respon = call.body()
+                        if(respon!=null){
+                            if(respon.folder!=null){
+                                if(respon.folder){
 //                        btnFaceFalse.visibility=View.GONE
 //                        btnFaceTrue.visibility=View.VISIBLE
-                                PopupUtil.dismissDialog()
-                                loadAbsen()
+                                    PopupUtil.dismissDialog()
+                                    loadAbsen()
 //                        btnDaftarWajah.visibility=View.GONE
-                            }else{
+                                }else{
 //                        btnFaceFalse.visibility=View.VISIBLE
 //                        btnFaceTrue.visibility=View.GONE
-                                PopupUtil.dismissDialog()
-                                val intent = Intent(this@HomeActivity, DaftarWajahActivity::class.java)
-                                startActivity(intent)
-                            }
-                        }else{
-                            cekFaceID()
-                        }
+                                    PopupUtil.dismissDialog()
+                                    val intent = Intent(this@HomeActivity, DaftarWajahActivity::class.java)
+                                    startActivity(intent)
+                                }
+                            }else{
+                                cekFaceID()
+                            }
 
-                    }else{
-                        cekFaceID()
-                    }
-                }else{
-                    cekFaceID()
-                }
-            }else{
-                cekFaceID()
-            }
-        }
+                        }else{
+                            cekFaceID()
+                        }
+                    }else{
+                        cekFaceID()
+                    }
+                }else{
+                    cekFaceID()
+                }
+            }
+
     }
     fun loadAbsen(){
-        val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
-        GlobalScope.launch(Dispatchers.Main){
-            val call = apiEndPoint?.lastAbsenCorutine(NIK!!)
-            if(call!=null){
-                if(call.isSuccessful){
-                    val response= call.body()
-                    if(response!=null){
-                        if(response.lastNew!=null){
-                            if(response.lastNew=="Masuk"){
-                                btnNewPulang.isEnabled=true
-                                btnNewMasuk.isEnabled=true
-                                btnNewMasuk.visibility=View.GONE
-                                btnNewPulang.visibility=View.VISIBLE
-                                tvNewMasuk.visibility=View.VISIBLE
-                                if(response.presensiMasuk!=null){
-                                    tvNewMasuk.text = response.presensiMasuk!!.jam.toString()
-                                }
-                                tvNewPulang.visibility=View.GONE
-                            }else if(response.lastNew=="Pulang"){
+            val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
+            GlobalScope.launch(Dispatchers.Main){
+                val call = apiEndPoint?.lastAbsenCorutine(NIK!!)
+                if(call!=null){
+                    if(call.isSuccessful){
+                        val response= call.body()
+                        if(response!=null){
+                            if(response.lastNew!=null){
+                                if(response.lastNew=="Masuk"){
+                                    btnNewPulang.isEnabled=true
+                                    btnNewMasuk.isEnabled=true
+                                    btnNewMasuk.visibility=View.GONE
+                                    btnNewPulang.visibility=View.VISIBLE
+                                    tvNewMasuk.visibility=View.VISIBLE
+                                    if(response.presensiMasuk!=null){
+                                        tvNewMasuk.text = "${response.presensiMasuk?.jam}"
+                                    }
+                                    tvNewPulang.visibility=View.GONE
+                                }else if(response.lastNew=="Pulang"){
 //                                chkMasuk.isChecked=true
 //                                chkPulang.isChecked=true
-                                btnNewPulang.isEnabled=true
-                                btnNewMasuk.isEnabled=true
-                                btnNewMasuk.visibility=View.VISIBLE
-                                btnNewPulang.visibility=View.GONE
-                                tvNewMasuk.visibility=View.GONE
-                                tvNewPulang.visibility=View.VISIBLE
-                                if(response.presensiMasuk!=null){
-                                    tvNewMasuk.text = response.presensiMasuk!!.jam.toString()
-                                }
-                                if(response.presensiPulang!=null){
-                                    tvNewPulang.text = response.presensiPulang!!.jam.toString()
-                                }
+                                    btnNewPulang.isEnabled=true
+                                    btnNewMasuk.isEnabled=true
+                                    btnNewMasuk.visibility=View.VISIBLE
+                                    btnNewPulang.visibility=View.GONE
+                                    tvNewMasuk.visibility=View.GONE
+                                    tvNewPulang.visibility=View.VISIBLE
+                                    if(response.presensiMasuk!=null){
+                                        val presensiMasuk = response.presensiMasuk
+                                        if(presensiMasuk!=null){
+                                            tvNewMasuk.text = "${presensiMasuk?.jam}"
+                                        }
+                                    }
+                                    if(response.presensiPulang!=null){
+                                        tvNewPulang.text = "${response.presensiPulang?.jam}"
+                                    }
 
-                            }else{
+                                }else{
 //                                chkMasuk.isChecked=false
 //                                chkPulang.isChecked=false
-                                btnNewMasuk.isEnabled=true
-                                btnNewPulang.isEnabled=true
-                                btnNewMasuk.visibility=View.VISIBLE
-                                btnNewPulang.visibility=View.VISIBLE
-                                tvNewMasuk.visibility=View.GONE
-                                tvNewPulang.visibility=View.GONE
-                            }
-                            if(btnNewMasuk.isEnabled==false){
+                                    btnNewMasuk.isEnabled=true
+                                    btnNewPulang.isEnabled=true
+                                    btnNewMasuk.visibility=View.VISIBLE
+                                    btnNewPulang.visibility=View.VISIBLE
+                                    tvNewMasuk.visibility=View.GONE
+                                    tvNewPulang.visibility=View.GONE
+                                }
+                                if(btnNewMasuk.isEnabled==false){
 
-                            }
-                        }else{
+                                }
+                            }else{
 //                        chkMasuk.isChecked=false
 //                        chkPulang.isChecked=false
-                            btnNewMasuk.isEnabled=true
-                            btnNewPulang.isEnabled=true
-                            btnNewMasuk.visibility=View.VISIBLE
-                            btnNewPulang.visibility=View.GONE
-                        }
-                    }else{
-                        loadAbsen()
-                    }
-                }else{
-                    loadAbsen()
-                }
-            }
-        }
+                                btnNewMasuk.isEnabled=true
+                                btnNewPulang.isEnabled=true
+                                btnNewMasuk.visibility=View.VISIBLE
+                                btnNewPulang.visibility=View.GONE
+                            }
+                        }else{
+                            loadAbsen()
+                        }
+                    }else{
+                        loadAbsen()
+                    }
+                }
+            }
+
     }
 
     private fun loadAbsenTigaHari() {
-        val apiEndPoint = ApiClient.getClient(this@HomeActivity)?.create(ApiEndPoint::class.java)
-        GlobalScope.launch(Dispatchers.Main)
-        {
-            val call = apiEndPoint?.absenTigaHari(NIK!!)
-            if(call!=null){
-                if(call.isSuccessful){
-                    val res = call.body()
-                    if(res!==null){
-                        if(res.absenTigaHari!=null){
-                            absenList?.addAll(res.absenTigaHari!!)
-                            adapter?.notifyDataSetChanged()
-                        }else{
-                            loadAbsenTigaHari()
-                        }
-                        Log.d("DATATIGAHARI",res.toString())
-                    }else{
-                        loadAbsenTigaHari()
-                    }
-                }else{
-                    loadAbsenTigaHari()
-                }
-            }else{
-                loadAbsenTigaHari()
-            }
+            val apiEndPoint = ApiClient.getClient(this@HomeActivity)?.create(ApiEndPoint::class.java)
+            GlobalScope.launch(Dispatchers.Main)
+            {
+                val call = apiEndPoint?.absenTigaHari(NIK!!)
+                if(call!=null){
+                    if(call.isSuccessful){
+                        val res = call.body()
+                        if(res!==null){
+                            if(res.absenTigaHari!=null){
+                                absenList?.addAll(res.absenTigaHari!!)
+                                adapter?.notifyDataSetChanged()
+                            }else{
+                                loadAbsenTigaHari()
+                            }
+                            Log.d("DATATIGAHARI",res.toString())
+                        }else{
+                            loadAbsenTigaHari()
+                        }
+                    }else{
+                        loadAbsenTigaHari()
+                    }
+                }else{
+                    loadAbsenTigaHari()
+                }
 
-        }
+            }
     }
     fun showDialogLupaMasuk(){
         MobileAds.initialize(this) {}
Index: app/src/main/java/com/misit/faceidchecklogptabp/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp\r\n\r\nimport android.Manifest\r\nimport android.annotation.SuppressLint\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.pm.PackageInfo\r\nimport android.content.pm.PackageManager\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.provider.Settings\r\nimport android.telephony.TelephonyManager\r\nimport android.util.Log\r\nimport android.view.KeyEvent\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.google.android.gms.ads.AdListener\r\nimport com.google.android.gms.ads.AdRequest\r\nimport com.google.android.gms.ads.AdView\r\nimport com.google.android.gms.ads.MobileAds\r\nimport com.google.android.gms.tasks.OnCompleteListener\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\n//import com.google.firebase.iid.FirebaseInstanceId\r\nimport com.google.firebase.messaging.FirebaseMessaging\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Response.AbpResponse\r\nimport com.misit.faceidchecklogptabp.Response.CsrfTokenResponse\r\nimport com.misit.faceidchecklogptabp.Response.LoginResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PopupUtil\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_login.*\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\n\r\nclass LoginActivity : AppCompatActivity(),View.OnClickListener {\r\n\r\n    private var csrf_token : String?=\"\"\r\n    private var android_token : String?=\"\"\r\n    private var app_version : String?=\"\"\r\n    private var IMEI : String?=\"\"\r\n    lateinit var tm : TelephonyManager\r\n\r\n    private var mFirebaseAnalytics: FirebaseAnalytics? = null\r\n    @SuppressLint(\"MissingPermission\")\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_login)\r\n        var intPerm :Int= ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE)\r\n        if(intPerm==PackageManager.PERMISSION_GRANTED){\r\n            tm = getSystemService(Context.TELEPHONY_SERVICE) as TelephonyManager\r\n\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                IMEI = Settings.Secure.getString(this.getContentResolver(), Settings.Secure.ANDROID_ID)\r\n            } else {\r\n                IMEI = tm.getDeviceId()\r\n\r\n            }\r\n        }else{\r\n            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.READ_PHONE_STATE),123)\r\n        }\r\n//        Toasty.info(this,IMEI.toString()).show()\r\n        cekLokasi()\r\n        PrefsUtil.initInstance(this)\r\n        loginBtn.setOnClickListener(this)\r\n        InPassword.setOnKeyListener(View.OnKeyListener { v, keyCode, event ->\r\n            if (keyCode == KeyEvent.KEYCODE_ENTER) {\r\n                //Perform Code\r\n\r\n                if(isValidatedAll()) {\r\n                    loginSubmit(\r\n                        InUsername.text.toString().trim(),\r\n                        InPassword.text.toString().trim()\r\n                    )\r\n                }\r\n                return@OnKeyListener true\r\n            }\r\n            false\r\n        })\r\n    }\r\n    override fun onClick(v: View?) {\r\n        if(v?.id==R.id.loginBtn){\r\n            if(isValidatedAll()){\r\n                loginSubmit(InUsername.text.toString().trim(),InPassword.text.toString().trim())\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        cekLokasi()\r\n        androidToken()\r\n        versionApp()\r\n        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);\r\n        super.onResume()\r\n    }\r\n    fun cekLokasi(){\r\n        val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch {\r\n            val call = apiEndPoint?.cekLokasiCorrutine()\r\n            if(call!=null){\r\n                if(call.isSuccessful){\r\n                    getToken()\r\n                }else{\r\n                    cekLokasi()\r\n                }\r\n            }else{\r\n                koneksiInActive()\r\n            }\r\n        }\r\n    }\r\n\r\n    fun androidToken(){\r\n        FirebaseMessaging.getInstance().isAutoInitEnabled = true\r\n        FirebaseMessaging.getInstance().token\r\n            .addOnCompleteListener(OnCompleteListener { task ->\r\n                if (!task.isSuccessful) {\r\n                    Toast.makeText(this@LoginActivity,\"Error : $task.exception\", Toast.LENGTH_SHORT).show()\r\n\r\n                    return@OnCompleteListener\r\n                }\r\n                // Get new Instance ID token\r\n                android_token = task.result\r\n            })\r\n    }\r\n    private fun getToken() {\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch {\r\n            val call = apiEndPoint.getTokenCorutine(\"csrf_token\")\r\n            if(call!=null){\r\n                if(call.isSuccessful){\r\n                    if(call.body()!=null){\r\n                        csrf_token = call.body()?.csrfToken\r\n                    }\r\n                }else{\r\n                    getToken()\r\n                }\r\n            }else{\r\n                getToken()\r\n            }\r\n        }\r\n    }\r\n    fun versionApp(){\r\n        Use@ try {\r\n            val pInfo: PackageInfo = this.getPackageManager().getPackageInfo(packageName, 0)\r\n            app_version = pInfo.versionName\r\n        } catch (e: PackageManager.NameNotFoundException) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n    fun loginSubmit(userIn:String,passIn:String){\r\n        PopupUtil.showLoading(this@LoginActivity,\"Logging In\",\"Please Wait\")\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch {\r\n            val call = apiEndPoint.loginCheckloginCorutine(\r\n                userIn,\r\n                passIn,\r\n                csrf_token,\r\n                android_token,\r\n                app_version,\r\n                \"faceId\",\r\n                IMEI.toString()\r\n            )\r\n            if(call!=null){\r\n                if(call.isSuccessful){\r\n                    val usrResponse = call.body()\r\n                    if (usrResponse!=null){\r\n                        if (usrResponse.success!!){\r\n                            PopupUtil.dismissDialog()\r\n                            PrefsUtil.getInstance()\r\n                                .setBooleanState(PrefsUtil.IS_LOGGED_IN,\r\n                                    true)\r\n                            PrefsUtil.getInstance()\r\n                                .setStringState(PrefsUtil.NIK,\r\n                                    usrResponse.dataLogin?.nik)\r\n                            PrefsUtil.getInstance()\r\n                                .setStringState(PrefsUtil.NAMA_LENGKAP,\r\n                                    usrResponse.dataLogin?.nama)\r\n                            PrefsUtil.getInstance()\r\n                                .setStringState(PrefsUtil.SHOW_ABSEN,\r\n                                    usrResponse.dataLogin?.show_absen)\r\n                            Toasty.success(this@LoginActivity,\"Login Success \",Toasty.LENGTH_LONG).show()\r\n                            val intents = Intent(this@LoginActivity,HomeActivity::class.java)\r\n                            finish()\r\n                            startActivity(intents)\r\n                            PopupUtil.dismissDialog()\r\n\r\n                        }else{\r\n                            Toasty.error(this@LoginActivity,\"Username Or Password Wrong!\",Toasty.LENGTH_SHORT).show()\r\n                            clearForm()\r\n                            InUsername.requestFocus()\r\n                            PopupUtil.dismissDialog()\r\n                        }\r\n                    }else{\r\n                        Toasty.error(this@LoginActivity,\"Username Or Password Wrong!\",Toasty.LENGTH_SHORT).show()\r\n                        clearForm()\r\n                        InUsername.requestFocus()\r\n                        PopupUtil.dismissDialog()\r\n                    }\r\n                }else{\r\n                    Toasty.error(this@LoginActivity,\"Error While Loging...\",Toasty.LENGTH_SHORT).show()\r\n                    PopupUtil.dismissDialog()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private fun clearForm(){\r\n        InUsername.text=null;\r\n        InPassword.text=null;\r\n    }\r\n    private fun isValidatedAll()  :Boolean{\r\n\r\n        clearError()\r\n        if(InUsername.text!!.isEmpty()){\r\n            tilUsername.error=\"Please Input Someting\"\r\n            InUsername.requestFocus()\r\n            return false\r\n        }\r\n        if(InPassword.text!!.isEmpty()){\r\n            tilPassword.error=\"Please Input Someting\"\r\n            InPassword.requestFocus()\r\n            return false\r\n        }\r\n        PopupUtil.dismissDialog()\r\n        return true\r\n    }\r\n    fun koneksiInActive(){\r\n        AlertDialog.Builder(this)\r\n            .setTitle(\"Maaf , Anda Harus Menggunakan Jaringan Wifi PT. ABP!\")\r\n            .setPositiveButton(\"OK, Keluar\",{\r\n                    dialog,\r\n                    which ->\r\n                finish()\r\n            })\r\n            .setOnDismissListener({dialog -> finish()  })\r\n            .show()\r\n    }\r\n    private fun clearError() {\r\n        tilUsername.error=null\r\n        tilPassword.error=null\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/LoginActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/LoginActivity.kt	(date 1633069336847)
@@ -35,6 +35,7 @@
 import com.misit.faceidchecklogptabp.Utils.PrefsUtil
 import es.dmoral.toasty.Toasty
 import kotlinx.android.synthetic.main.activity_login.*
+import kotlinx.coroutines.Dispatchers
 import kotlinx.coroutines.GlobalScope
 import kotlinx.coroutines.launch
 import retrofit2.Call
@@ -104,18 +105,23 @@
         super.onResume()
     }
     fun cekLokasi(){
-        val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
-        GlobalScope.launch {
-            val call = apiEndPoint?.cekLokasiCorrutine()
-            if(call!=null){
-                if(call.isSuccessful){
-                    getToken()
-                }else{
-                    cekLokasi()
-                }
-            }else{
-                koneksiInActive()
+        try {
+
+            val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
+            GlobalScope.launch {
+                val call = apiEndPoint?.cekLokasiCorrutine()
+                if(call!=null){
+                    if(call.isSuccessful){
+                        getToken()
+                    }else{
+                        cekLokasi()
+                    }
+                }else{
+                    koneksiInActive()
+                }
             }
+        }catch (e:Exception){
+            Log.d("ErrorCekLokasi","${e.message}")
         }
     }
 
@@ -160,7 +166,7 @@
     fun loginSubmit(userIn:String,passIn:String){
         PopupUtil.showLoading(this@LoginActivity,"Logging In","Please Wait")
         val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
-        GlobalScope.launch {
+        GlobalScope.launch(Dispatchers.Main) {
             val call = apiEndPoint.loginCheckloginCorutine(
                 userIn,
                 passIn,
@@ -190,9 +196,9 @@
                                     usrResponse.dataLogin?.show_absen)
                             Toasty.success(this@LoginActivity,"Login Success ",Toasty.LENGTH_LONG).show()
                             val intents = Intent(this@LoginActivity,HomeActivity::class.java)
+                            this@LoginActivity.startActivity(intents)
+                            PopupUtil.dismissDialog()
                             finish()
-                            startActivity(intents)
-                            PopupUtil.dismissDialog()
 
                         }else{
                             Toasty.error(this@LoginActivity,"Username Or Password Wrong!",Toasty.LENGTH_SHORT).show()
Index: app/src/main/java/com/misit/faceidchecklogptabp/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp\r\n\r\nimport android.Manifest\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.pm.PackageInfo\r\nimport android.content.pm.PackageManager\r\nimport android.location.Location\r\nimport android.location.LocationListener\r\nimport android.location.LocationManager\r\nimport android.net.ConnectivityManager\r\nimport android.net.Uri\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.bumptech.glide.Glide\r\nimport com.google.android.gms.ads.AdListener\r\nimport com.google.android.gms.ads.AdRequest\r\nimport com.google.android.gms.ads.AdView\r\nimport com.google.android.gms.ads.MobileAds\r\nimport com.google.android.gms.tasks.OnCompleteListener\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\n//import com.google.firebase.iid.FirebaseInstanceId\r\nimport com.google.firebase.messaging.FirebaseMessaging\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Response.AbpResponse\r\nimport com.misit.faceidchecklogptabp.Response.AndroidTokenResponse\r\nimport com.misit.faceidchecklogptabp.Response.AppVersionResponse\r\nimport com.misit.faceidchecklogptabp.Response.MainResponse.FirstLoadResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_main.*\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\n\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n\r\n    private var app_version: String? = \"\"\r\n    lateinit var runnable: Runnable\r\n    lateinit var handler: Handler\r\n    private var android_token: String? = null\r\n    var tipe: String? = null\r\n    private var LAST_VERSION: Float? = null\r\n\r\n    //    lateinit var mAdView : AdView\r\n//    lateinit var  mFirebaseAnalytics: FirebaseAnalytics\r\n    var isWifiConn: Boolean = false\r\n    lateinit var url_base: ApiClient\r\n    private var mLocationManager: LocationManager? = null\r\n    private var mLocation: Location? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n            window.decorView.apply {\r\n                systemUiVisibility =\r\n                    View.SYSTEM_UI_FLAG_HIDE_NAVIGATION or View.SYSTEM_UI_FLAG_FULLSCREEN\r\n            }\r\n\r\n        }\r\n        handler = Handler()\r\n        PrefsUtil.initInstance(this)\r\n//        getGPS()\r\n//        updateProgress()\r\n        androidToken()\r\n        versionApp()\r\n\r\n        tipe = intent.getStringExtra(TIPE)\r\n        Glide.with(this).load(R.drawable.abp).into(imageView)\r\n\r\n        tvVersionCode.text = \" V.${app_version}\"\r\n        updateProgress()\r\n    }\r\n\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<out String>,\r\n        grantResults: IntArray\r\n    ) {\r\n        if (requestCode == 1) {\r\n            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                if (ActivityCompat.checkSelfPermission(\r\n                        this,\r\n                        Manifest.permission.ACCESS_FINE_LOCATION\r\n                    )\r\n                    != PackageManager.PERMISSION_GRANTED\r\n                    &&\r\n                    ActivityCompat.checkSelfPermission(\r\n                        this,\r\n                        Manifest.permission.ACCESS_COARSE_LOCATION\r\n                    )\r\n                    != PackageManager.PERMISSION_GRANTED\r\n                ) {\r\n                    return\r\n                } else {\r\n                    ActivityCompat.requestPermissions(\r\n                        this,\r\n                        arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\r\n                        1\r\n                    )\r\n                }\r\n//                mLocationManager!!.requestLocationUpdates(LocationManager.GPS_PROVIDER,\r\n//                    10,10f,this)\r\n            } else {\r\n                ActivityCompat.requestPermissions(\r\n                    this,\r\n                    arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\r\n                    1\r\n                )\r\n            }\r\n        }\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n    }\r\n\r\n    //    verifyStoragePermissions\r\n    private fun verifyStoragePermissions() {\r\n        val permission = ContextCompat.checkSelfPermission(\r\n            this,\r\n            Manifest.permission.READ_EXTERNAL_STORAGE\r\n        )\r\n        val permission1 = ContextCompat.checkSelfPermission(\r\n            this,\r\n            Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n        )\r\n        val permission2 = ContextCompat.checkSelfPermission(\r\n            this,\r\n            Manifest.permission.READ_PHONE_STATE\r\n        )\r\n\r\n        if (permission != PackageManager.PERMISSION_GRANTED) {\r\n            Log.i(\"FaceId\", \"READ_EXTERNAL_STORAGE Permission to record denied\")\r\n            ActivityCompat.requestPermissions(\r\n                this,\r\n                arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE),\r\n                11\r\n            )\r\n//            finish()\r\n        } else {\r\n            updateProgress()\r\n        }\r\n        if (permission1 != PackageManager.PERMISSION_GRANTED) {\r\n            Log.i(\"FaceId\", \"WRITE_EXTERNAL_STORAGE Permission to record denied\")\r\n            ActivityCompat.requestPermissions(\r\n                this,\r\n                arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE),\r\n                12\r\n            )\r\n//            finish()\r\n        } else {\r\n            updateProgress()\r\n        }\r\n        if (permission2 != PackageManager.PERMISSION_GRANTED) {\r\n            Log.i(\"FaceId\", \"READ_PHONE_STATE Permission to record denied\")\r\n            ActivityCompat.requestPermissions(\r\n                this,\r\n                arrayOf(Manifest.permission.READ_PHONE_STATE),\r\n                13\r\n            )\r\n//            finish()\r\n        } else {\r\n            updateProgress()\r\n        }\r\n    }\r\n//verifyStoragePermissions\r\n\r\n    //versionApp\r\n    fun versionApp() {\r\n        try {\r\n            val pInfo: PackageInfo = this.getPackageManager().getPackageInfo(packageName, 0)\r\n            app_version = pInfo.versionName\r\n            LAST_VERSION = pInfo.versionName.toFloat()\r\n        } catch (e: PackageManager.NameNotFoundException) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n//    versionApp\r\n\r\n    //    checkVersion\r\n    fun checkVersion() {\r\n\r\n        val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)\r\n        GlobalScope.launch {\r\n            val call = apiEndPoint?.getAppVersionCorutine(\"face\")\r\n            if(call!=null){\r\n                if(call.isSuccessful){\r\n                    val response = call.body()\r\n                    if(response!=null){\r\n                        if (response.version != null) {\r\n                            LAST_VERSION = response.version?.toFloat()\r\n                            var currentVersion = app_version?.toFloat()\r\n                            if (currentVersion!! < LAST_VERSION!!) {\r\n                                updateAplication(response.url!!)\r\n                            } else {\r\n                                updateProgress()\r\n                            }\r\n                        } else {\r\n                            updateProgress()\r\n                        }\r\n                    }else{\r\n                        checkVersion()\r\n                    }\r\n                }else{\r\n                    checkVersion()\r\n                }\r\n            }else{\r\n                checkVersion()\r\n            }\r\n        }\r\n    }\r\n//    checkVersion\r\n\r\n    fun updateProgress() {\r\n        runnable = Runnable {\r\n            var besar = progressHorizontal.progress\r\n            progressHorizontal.progress = besar + 10\r\n            if (besar < 40) {\r\n//                verifyStoragePermissions()\r\n                updateProgress()\r\n            } else if (besar < 100) {\r\n                updateProgress()\r\n            } else if (besar == 100) {\r\n                handler.removeCallbacks(runnable)\r\n                loadFirst()\r\n            }\r\n        }\r\n        handler.postDelayed(runnable, 100)\r\n    }\r\n\r\n    fun loadFirst() {\r\n        Log.v(\"FaceId\", android_token)\r\n        if (PrefsUtil.getInstance().getBooleanState(PrefsUtil.IS_LOGGED_IN, false)) {\r\n            var nik = PrefsUtil.getInstance().getStringState(PrefsUtil.NIK, \"\")\r\n            val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)\r\n            GlobalScope.launch {\r\n                val call = apiEndPoint?.tokenCorutine(nik, \"faceId\", android_token)\r\n                if (call != null) {\r\n                    if (call.isSuccessful) {\r\n                        val response = call.body()\r\n                        if (response != null) {\r\n                            Log.v(\"FaceId\", \"Data\" + response.toString())\r\n                            if (response.absensi == null) {\r\n                                loadPage(\"Login\")\r\n                            } else {\r\n                                if (response.absensi.phoneToken == android_token) {\r\n                                    loadPage(\"Index\")\r\n                                } else {\r\n                                    loadPage(\"Index\")\r\n                                }\r\n\r\n                            }\r\n                        } else {\r\n                            loadFirst()\r\n                        }\r\n                    } else {\r\n                        loadFirst()\r\n                    }\r\n                } else {\r\n                    loadFirst()\r\n                }\r\n            }\r\n        } else {\r\n            loadPage(\"Login\")\r\n        }\r\n    }\r\n\r\n    //    androidToken\r\n    fun androidToken() {\r\n        FirebaseMessaging.getInstance().isAutoInitEnabled = true\r\n        FirebaseMessaging.getInstance().token\r\n            .addOnCompleteListener(OnCompleteListener { task ->\r\n                if (!task.isSuccessful) {\r\n                    Toast.makeText(this@MainActivity, \"Error : $task.exception\", Toast.LENGTH_SHORT)\r\n                        .show()\r\n\r\n                    return@OnCompleteListener\r\n                }\r\n                // Get new Instance ID token\r\n                android_token = task.result\r\n            })\r\n    }\r\n//    androidToken\r\n\r\n    //    updateAplication\r\n    fun updateAplication(uriString: String) {\r\n        AlertDialog.Builder(this)\r\n            .setTitle(\"Pambaharuan , Aplikasi Versi \" + LAST_VERSION + \" Telah Tersedia.\")\r\n            .setPositiveButton(\"Ya, Perbaharui\", { _,\r\n                                                   _ ->\r\n                var intent = Intent(Intent.ACTION_VIEW);\r\n                intent.setData(Uri.parse(uriString));\r\n                startActivity(intent);\r\n            })\r\n            .setNegativeButton(\"Tidak, Keluar\", { _, _ ->\r\n                finish()\r\n            })\r\n            .setOnDismissListener({ _ -> finish() })\r\n            .show()\r\n    }\r\n//    updateAplication\r\n\r\n    //    koneksiInActive\r\n    fun koneksiInActive() {\r\n        AlertDialog.Builder(this)\r\n            .setTitle(\"Maaf , Anda Harus Menggunakan Jaringan Wifi PT. ABP!\")\r\n            .setPositiveButton(\"OK, Keluar\", { _,\r\n                                               _ ->\r\n                finish()\r\n            })\r\n            .setOnDismissListener({ _ -> finish() })\r\n            .show()\r\n    }\r\n//    koneksiInActive\r\n\r\n\r\n    //    loadPage\r\n    fun loadPage(pageName: String) {\r\n        var intent: Intent? = null\r\n        if (pageName == \"Login\") {\r\n            PrefsUtil.getInstance().setBooleanState(\r\n                PrefsUtil.IS_LOGGED_IN, false\r\n            )\r\n            intent = Intent(this@MainActivity, LoginActivity::class.java)\r\n            startActivity(intent)\r\n            finish()\r\n        } else if (pageName == \"Index\") {\r\n            intent = Intent(this@MainActivity, HomeActivity::class.java)\r\n            intent.putExtra(IndexActivity.TIPE, tipe)\r\n            startActivity(intent)\r\n            finish()\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n    }\r\n//    loadPage\r\n\r\n    companion object {\r\n        var TIPE = \"TIPE\"\r\n        //        var LAST_VERSION = null\r\n        var NIK = \"NIK\"\r\n        var NAMA = \"NAMA\"\r\n        var LAT = 0.0\r\n        var LNG = 0.0\r\n        var NotifNik = \"NotifNik\"\r\n        private const val DEBUG_TAG = \"NetworkStatusExample\"\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/MainActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/MainActivity.kt	(date 1633082157098)
@@ -1,14 +1,9 @@
 package com.misit.faceidchecklogptabp
 
 import android.Manifest
-import android.content.Context
 import android.content.Intent
 import android.content.pm.PackageInfo
 import android.content.pm.PackageManager
-import android.location.Location
-import android.location.LocationListener
-import android.location.LocationManager
-import android.net.ConnectivityManager
 import android.net.Uri
 import android.os.Build
 import android.os.Bundle
@@ -21,28 +16,16 @@
 import androidx.core.app.ActivityCompat
 import androidx.core.content.ContextCompat
 import com.bumptech.glide.Glide
-import com.google.android.gms.ads.AdListener
-import com.google.android.gms.ads.AdRequest
-import com.google.android.gms.ads.AdView
-import com.google.android.gms.ads.MobileAds
 import com.google.android.gms.tasks.OnCompleteListener
-import com.google.firebase.analytics.FirebaseAnalytics
-//import com.google.firebase.iid.FirebaseInstanceId
 import com.google.firebase.messaging.FirebaseMessaging
 import com.misit.abpenergy.api.ApiClient
 import com.misit.abpenergy.api.ApiEndPoint
-import com.misit.faceidchecklogptabp.Response.AbpResponse
-import com.misit.faceidchecklogptabp.Response.AndroidTokenResponse
-import com.misit.faceidchecklogptabp.Response.AppVersionResponse
-import com.misit.faceidchecklogptabp.Response.MainResponse.FirstLoadResponse
 import com.misit.faceidchecklogptabp.Utils.PrefsUtil
-import es.dmoral.toasty.Toasty
 import kotlinx.android.synthetic.main.activity_main.*
+import kotlinx.coroutines.Dispatchers
 import kotlinx.coroutines.GlobalScope
+import kotlinx.coroutines.async
 import kotlinx.coroutines.launch
-import retrofit2.Call
-import retrofit2.Callback
-import retrofit2.Response
 
 
 class MainActivity : AppCompatActivity() {
@@ -54,13 +37,6 @@
     var tipe: String? = null
     private var LAST_VERSION: Float? = null
 
-    //    lateinit var mAdView : AdView
-//    lateinit var  mFirebaseAnalytics: FirebaseAnalytics
-    var isWifiConn: Boolean = false
-    lateinit var url_base: ApiClient
-    private var mLocationManager: LocationManager? = null
-    private var mLocation: Location? = null
-
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_main)
@@ -74,8 +50,6 @@
         }
         handler = Handler()
         PrefsUtil.initInstance(this)
-//        getGPS()
-//        updateProgress()
         androidToken()
         versionApp()
 
@@ -193,7 +167,7 @@
     fun checkVersion() {
 
         val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
-        GlobalScope.launch {
+        GlobalScope.launch(Dispatchers.Main) {
             val call = apiEndPoint?.getAppVersionCorutine("face")
             if(call!=null){
                 if(call.isSuccessful){
@@ -241,37 +215,41 @@
     }
 
     fun loadFirst() {
-        Log.v("FaceId", android_token)
         if (PrefsUtil.getInstance().getBooleanState(PrefsUtil.IS_LOGGED_IN, false)) {
+            GlobalScope.launch {
             var nik = PrefsUtil.getInstance().getStringState(PrefsUtil.NIK, "")
-            val apiEndPoint = ApiClient.getClient(this)?.create(ApiEndPoint::class.java)
-            GlobalScope.launch {
-                val call = apiEndPoint?.tokenCorutine(nik, "faceId", android_token)
-                if (call != null) {
-                    if (call.isSuccessful) {
-                        val response = call.body()
-                        if (response != null) {
-                            Log.v("FaceId", "Data" + response.toString())
-                            if (response.absensi == null) {
-                                loadPage("Login")
-                            } else {
-                                if (response.absensi.phoneToken == android_token) {
-                                    loadPage("Index")
-                                } else {
-                                    loadPage("Index")
-                                }
+            val apiEndPoint = ApiClient.getClient(this@MainActivity)?.create(ApiEndPoint::class.java)
+                    val corotine = async { apiEndPoint?.tokenCorutine(nik, "faceId", android_token) }
+                val call = corotine.await()
+                    if (call != null) {
+                        if (call.isSuccessful) {
+                            val response = call.body()
+                            if (response != null) {
+                                Log.d("FaceId", "Data ${response}" )
+                                if (response.absensi == null) {
+                                    loadPage("Login")
+                                } else {
+                                    response.absensi.let {
+                                        var absensi = response.absensi
+                                        if (absensi!!.phoneToken == android_token) {
+                                            loadPage("Index")
+                                        } else {
+                                            loadPage("Index")
+                                        }
+                                    }
 
-                            }
-                        } else {
-                            loadFirst()
-                        }
-                    } else {
-                        loadFirst()
-                    }
-                } else {
-                    loadFirst()
-                }
+                                }
+                            } else {
+                                loadFirst()
+                            }
+                        } else {
+                            loadFirst()
+                        }
+                    } else {
+                        loadFirst()
+                    }
             }
+
         } else {
             loadPage("Login")
         }
@@ -285,7 +263,6 @@
                 if (!task.isSuccessful) {
                     Toast.makeText(this@MainActivity, "Error : $task.exception", Toast.LENGTH_SHORT)
                         .show()
-
                     return@OnCompleteListener
                 }
                 // Get new Instance ID token
@@ -298,12 +275,12 @@
     fun updateAplication(uriString: String) {
         AlertDialog.Builder(this)
             .setTitle("Pambaharuan , Aplikasi Versi " + LAST_VERSION + " Telah Tersedia.")
-            .setPositiveButton("Ya, Perbaharui", { _,
+            .setPositiveButton("Ya, Perbaharui") { _,
                                                    _ ->
                 var intent = Intent(Intent.ACTION_VIEW);
                 intent.setData(Uri.parse(uriString));
                 startActivity(intent);
-            })
+            }
             .setNegativeButton("Tidak, Keluar", { _, _ ->
                 finish()
             })
@@ -341,11 +318,7 @@
             intent.putExtra(IndexActivity.TIPE, tipe)
             startActivity(intent)
             finish()
-        } else {
-
         }
-
-
     }
 //    loadPage
 
Index: app/src/main/java/com/misit/faceidchecklogptabp/IntroActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp\r\rimport android.Manifest\rimport android.app.Activity\rimport android.content.Context\rimport android.content.Intent\rimport android.content.pm.PackageManager\rimport android.graphics.Color\rimport android.os.Build\rimport androidx.appcompat.app.AppCompatActivity\rimport android.os.Bundle\rimport android.util.Log\rimport android.view.ViewGroup.LayoutParams.WRAP_CONTENT\rimport android.widget.LinearLayout\rimport android.widget.TextView\rimport androidx.appcompat.app.AlertDialog\rimport androidx.core.view.get\rimport androidx.viewpager2.widget.ViewPager2\rimport com.misit.abpenergy.IntroFragment.IntroSlide\rimport com.misit.abpenergy.IntroFragment.IntroSliderAdapter\rimport com.misit.faceidchecklogptabp.Utils.ManagePermissions\rimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\rimport kotlinx.android.synthetic.main.activity_intro.*\r\rclass IntroActivity : AppCompatActivity() {\r    private var adapter:IntroSliderAdapter?=null\r    private var listTex:List<IntroSlide>?=null\r    lateinit var activity: Activity\r    private val requestPermissionCode= 13\r    private val listPermission = listOf(\r        Manifest.permission.READ_PHONE_STATE,\r        Manifest.permission.CAMERA,\r        Manifest.permission.WRITE_EXTERNAL_STORAGE,\r        Manifest.permission.RECORD_AUDIO\r    )\r    private lateinit var managePermissions: ManagePermissions\r    override fun onCreate(savedInstanceState: Bundle?) {\r        super.onCreate(savedInstanceState)\r        setContentView(R.layout.activity_intro)\r        activity= this\r        managePermissions = ManagePermissions(this@IntroActivity,listPermission,requestPermissionCode)\r        PrefsUtil.initInstance(activity)\r        if(PrefsUtil.getInstance().getBooleanState(\"INTRO_APP\",false)){\r            startActivity(Intent(activity,MainActivity::class.java))\r            finish()\r        }\r        listTex = listOf(IntroSlide(\r            \"Selamat Datang\",\r            \"Aplikasi Ini Membutuhkan Izin Untuk Penggunaan Internet, lihat sambungan Wi-Fi, Penyimpanan Internal dan External untuk menyimpan data atau foto sementara sebelum di upload ke server\",\r            \"Mohon Untuk Mengizinkan Penggunaan Internet , Penyimpanan Internal dan Penyimpanan External supaya aplikasi ini berjalan dengan baik\"\r        ),\r            IntroSlide(\"Persyaratan\",\r                \"Aplikasi Ini Membutuhkan Izin Untuk Penggunaan Camera, Audio , Video untuk pengambilan gambar, Mikrofon, memodifikasi atau menghapus konten penyimpanan USB Anda, membaca konten penyimpanan USB Anda\",\r                \"Mohon Untuk Mengizinkan Penggunaan Camera, Audio , Video untuk pengambilan gambar\"\r            )\r        ,\r            IntroSlide(\r                \"Persyaratan\",\r                \"Aplikasi Ini Membutuhkan Izin Untuk Penggunaan baca identitas dan status ponsel, terima data dari internet, lihat koneksi jaringan, akses jaringan penuh, cegah perangkat agar tidak tidur\",\r                \"Mohon Untuk Mengizinkan Penggunaan Internet , Penyimpanan Internal dan Penyimpanan External supaya aplikasi ini berjalan dengan baik\"\r            )\r        )\r\r        adapter = IntroSliderAdapter(listTex!!)\r        viewPager.adapter = adapter\r        btnSkip.setOnClickListener {\r            if(viewPager.currentItem+1 < adapter!!.itemCount) {\r                skipIntro()\r            }else{\r                startActivity(Intent(activity,HomeActivity::class.java))\r                finish()\r            }\r        }\r        setupIndicator()\r        setCurrentIndicator(0)\r        viewPager.registerOnPageChangeCallback(object :ViewPager2.OnPageChangeCallback(){\r            override fun onPageSelected(position:Int){\r                super.onPageSelected(position)\r                if(viewPager.currentItem+1 >= adapter!!.itemCount) {\r                    btnNext.text =\"Setujui\"\r                }\r                setCurrentIndicator(position)\r            }\r        })\r\r        btnNext.setOnClickListener {\r            if(viewPager.currentItem+1 < adapter!!.itemCount){\r                viewPager.currentItem +=1\r            }else{\r                btnNext.text =\"Setujui\"\r                val INTRO_APP = PrefsUtil.getInstance().setBooleanState(\"INTRO_APP\",true)\r\r                if(INTRO_APP){\r                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)\r                        managePermissions.checkPermissions()\r                    }\r            }\r        }\r    }\r\r    override fun onRequestPermissionsResult(\r        requestCode: Int,\r        permissions: Array<String>,\r        grantResults: IntArray\r    ) {\r        when (requestCode) {\r            requestPermissionCode -> {\r                val isPermissionsGranted = managePermissions\r                    .processPermissionsResult(requestCode, permissions, grantResults)\r\r                if (isPermissionsGranted) {\r                    startActivity(Intent(this@IntroActivity, HomeActivity::class.java))\r                    finish()\r                } else {\r                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r                        managePermissions.checkPermissions()\r                    }\r                }\r                return\r            }\r        }\r        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r    }\r    private fun skipIntro() {\r        AlertDialog.Builder(this@IntroActivity)\r            .setTitle(\"Aplikasi ini Tidak Bisa Digunakan Jika Izin Tidak Diberikan\")\r            .setPositiveButton(\"Oke, Tutup\", { dialog,\r                                                  which ->\r                finish()\r            })\r            .setNegativeButton(\"Batal\",\r                { dialog,\r                  which ->\r                    dialog.dismiss()\r                })\r            .show()\r    }\r    private fun setupIndicator(){\r        val indicator = arrayOfNulls<TextView>(adapter!!.itemCount)\r        val layoutParams : LinearLayout.LayoutParams = LinearLayout.LayoutParams(WRAP_CONTENT,WRAP_CONTENT)\r        layoutParams.setMargins(0,0,0,0)\r        for (i in indicator.indices){\r            indicator[i] = TextView(applicationContext)\r\r                indicator[i].apply {\r                    this?.setTextColor(Color.GRAY)\r                    this?.textSize = 30.toFloat()\r                    this?.text= \"-\"\r                    this?.layoutParams= layoutParams\r                }\r\r            indicatorContainer.addView(indicator[i])\r        }\r\r    }\r    private fun setCurrentIndicator(position:Int){\r        val childCount = indicatorContainer.childCount\r        for (i in 0 until childCount){\r            val indicatortext = indicatorContainer[i] as TextView\r            if(i == position){\r                indicatortext.setTextColor(Color.BLACK)\r                indicatortext.setTextSize(50.toFloat())\r            }else{\r                indicatortext.setTextSize(30.toFloat())\r                indicatortext.setTextColor(Color.GRAY)\r            }\r        }\r    }\r}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/IntroActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/IntroActivity.kt	(date 1630036708464)
@@ -67,7 +67,7 @@
             if(viewPager.currentItem+1 < adapter!!.itemCount) {                 skipIntro()             }else{-                startActivity(Intent(activity,HomeActivity::class.java))+                startActivity(Intent(activity,MainActivity::class.java))                 finish()             }         }@@ -109,7 +109,7 @@
                     .processPermissionsResult(requestCode, permissions, grantResults)                  if (isPermissionsGranted) {-                    startActivity(Intent(this@IntroActivity, HomeActivity::class.java))+                    startActivity(Intent(this@IntroActivity, MainActivity::class.java))                     finish()                 } else {                     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    ext.kotlin_version = '1.3.61'\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.3'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.0.0'\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url \"https://jitpack.io\" }\r\n        maven { url 'https://dl.bintray.com/camerakit/camerakit-android-snapshots' }\r\n\r\n    }\r\n}\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\nconfigurations.all {\r\n    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ build.gradle	(date 1633051285847)
@@ -5,11 +5,12 @@
     repositories {
         google()
         jcenter()
+        maven { url "https://jitpack.io" }
     }
     dependencies {
         classpath 'com.android.tools.build:gradle:4.1.3'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
-        classpath 'com.google.gms:google-services:4.3.3'
+        classpath 'com.google.gms:google-services:4.3.10'
         classpath 'com.google.firebase:firebase-crashlytics-gradle:2.0.0'
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
Index: app/src/main/java/com/misit/faceidchecklogptabp/Api/ApiClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.abpenergy.api\r\n\r\nimport android.content.Context\r\nimport com.franmontiel.persistentcookiejar.BuildConfig\r\nimport com.franmontiel.persistentcookiejar.ClearableCookieJar\r\nimport com.franmontiel.persistentcookiejar.PersistentCookieJar\r\nimport com.franmontiel.persistentcookiejar.cache.SetCookieCache\r\nimport com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Protocol\r\nimport okhttp3.logging.HttpLoggingInterceptor\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport java.util.*\r\n\r\nobject ApiClient{\r\n    private var BASE_URL= \"http://10.10.3.13\"\r\n//    private var BASE_URL= \"https://abpjobsite.com\"\r\n    private var retrofit : Retrofit? = null\r\n//    fun loadURL(base_url:String){\r\n////        BASE_URL = base_url\r\n//    }\r\n    fun getClient(context: Context?):Retrofit?{\r\n        if (retrofit==null){\r\n            retrofit = Retrofit.Builder()\r\n                .baseUrl(BASE_URL)\r\n                .client(getHeader(context))\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build()\r\n        }\r\n        return retrofit\r\n    }\r\n\r\n    private fun getHeader(context: Context?): OkHttpClient {\r\n        val interceptor = HttpLoggingInterceptor()\r\n        interceptor.level = HttpLoggingInterceptor.Level.BODY\r\n        val cookieJar: ClearableCookieJar = PersistentCookieJar(SetCookieCache(),SharedPrefsCookiePersistor(context))\r\n        var okhttpClient = OkHttpClient.Builder()\r\n//        if(BuildConfig.DEBUG)\r\n//        {\r\n            okhttpClient\r\n                .addInterceptor(interceptor)\r\n//        }\r\n        return okhttpClient\r\n            .cookieJar(cookieJar)\r\n            .retryOnConnectionFailure(true)\r\n            .build()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Api/ApiClient.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Api/ApiClient.kt	(date 1633080242268)
@@ -14,36 +14,32 @@
 import java.util.*
 
 object ApiClient{
-    private var BASE_URL= "http://10.10.3.13"
+    private var BASE_URL= "http://10.10.3.13:8765/"
 //    private var BASE_URL= "https://abpjobsite.com"
     private var retrofit : Retrofit? = null
-//    fun loadURL(base_url:String){
-////        BASE_URL = base_url
-//    }
-    fun getClient(context: Context?):Retrofit?{
-        if (retrofit==null){
-            retrofit = Retrofit.Builder()
-                .baseUrl(BASE_URL)
-                .client(getHeader(context))
-                .addConverterFactory(GsonConverterFactory.create())
-                .build()
-        }
-        return retrofit
-    }
+        fun getClient(context: Context?):Retrofit?{
+            if (retrofit==null){
+                retrofit = Retrofit.Builder()
+                    .baseUrl(BASE_URL)
+                    .client(getHeader(context))
+                    .addConverterFactory(GsonConverterFactory.create())
+                    .build()
+            }
+            return retrofit
+        }
 
-    private fun getHeader(context: Context?): OkHttpClient {
-        val interceptor = HttpLoggingInterceptor()
-        interceptor.level = HttpLoggingInterceptor.Level.BODY
-        val cookieJar: ClearableCookieJar = PersistentCookieJar(SetCookieCache(),SharedPrefsCookiePersistor(context))
-        var okhttpClient = OkHttpClient.Builder()
-//        if(BuildConfig.DEBUG)
-//        {
-            okhttpClient
+        private fun getHeader(context: Context?): OkHttpClient {
+            val interceptor = HttpLoggingInterceptor()
+            interceptor.level = HttpLoggingInterceptor.Level.BODY
+            val cookieJar: ClearableCookieJar = PersistentCookieJar(
+                SetCookieCache(), SharedPrefsCookiePersistor(
+                    context
+                )
+            )
+            return OkHttpClient.Builder()
                 .addInterceptor(interceptor)
-//        }
-        return okhttpClient
-            .cookieJar(cookieJar)
-            .retryOnConnectionFailure(true)
-            .build()
-    }
+                .cookieJar(cookieJar)
+                .retryOnConnectionFailure(true)
+                .build()
+        }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_pulang.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Absen.v1.PulangActivity\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/R_Bottom\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\">\r\n        <Button\r\n            android:id=\"@+id/btn_active_camera\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Scan Ulang\"\r\n            android:visibility=\"gone\" />\r\n        <Button\r\n            android:id=\"@+id/btnBack\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Kembali\"\r\n            android:visibility=\"gone\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btn_detect\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Scan Wajah\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            tools:layout_editor_absoluteX=\"2dp\" />\r\n    </RelativeLayout>\r\n\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/relativeLayout2\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/R_Bottom\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <com.wonderkiln.camerakit.CameraView\r\n            android:id=\"@+id/camera_view\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:adjustViewBounds=\"true\">\r\n\r\n        </com.wonderkiln.camerakit.CameraView>\r\n\r\n        <com.misit.faceidchecklogptabp.Helper.GraphicOverlay\r\n            android:id=\"@+id/graphic_overlay\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/btnToggle\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_margin=\"5dp\"\r\n            android:background=\"@drawable/bg_circle\"\r\n            android:padding=\"5dp\"\r\n            android:src=\"@drawable/ic_switch_camera_black_24dp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n    </RelativeLayout>\r\n\r\n    <com.google.android.gms.ads.AdView\r\n        android:id=\"@+id/adViewIndex\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:adSize=\"BANNER\"\r\n        app:adUnitId=\"@string/APP_ADMOB_ID_BANNER\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/relativeLayout2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\">\r\n\r\n    </com.google.android.gms.ads.AdView>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_pulang.xml	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/res/layout/activity_pulang.xml	(date 1630048541270)
@@ -14,20 +14,29 @@
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent">
-        <Button
+        <com.google.android.material.button.MaterialButton
+            style="@style/Widget.MaterialComponents.Button.UnelevatedButton"
+            android:background="@color/colorPrimaryDark"
+            android:layout_margin="5dp"
             android:id="@+id/btn_active_camera"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:text="Scan Ulang"
             android:visibility="gone" />
-        <Button
+        <com.google.android.material.button.MaterialButton
+            style="@style/Widget.MaterialComponents.Button.UnelevatedButton"
+            android:background="@color/colorPrimaryDark"
+            android:layout_margin="5dp"
             android:id="@+id/btnBack"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:text="Kembali"
             android:visibility="gone" />
 
-        <Button
+        <com.google.android.material.button.MaterialButton
+            style="@style/Widget.MaterialComponents.Button.UnelevatedButton"
+            android:background="@color/colorPrimaryDark"
+            android:layout_margin="5dp"
             android:id="@+id/btn_detect"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
Index: app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/MasukActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp.Absen.v1\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.ContextWrapper\r\nimport android.graphics.Bitmap\r\nimport android.graphics.PointF\r\nimport android.location.Location\r\nimport android.location.LocationManager\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.google.android.gms.ads.AdListener\r\nimport com.google.android.gms.ads.AdRequest\r\nimport com.google.android.gms.ads.AdView\r\nimport com.google.android.gms.ads.MobileAds\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\nimport com.google.mlkit.vision.common.InputImage\r\nimport com.google.mlkit.vision.face.*\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Helper.RectOverlay\r\nimport com.misit.faceidchecklogptabp.R\r\nimport com.misit.faceidchecklogptabp.Response.ImageResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport com.wonderkiln.camerakit.*\r\nimport dmax.dialog.SpotsDialog\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_masuk.*\r\nimport kotlinx.android.synthetic.main.activity_masuk.btnBack\r\nimport kotlinx.android.synthetic.main.activity_masuk.btnToggle\r\nimport kotlinx.android.synthetic.main.activity_masuk.btn_active_camera\r\nimport kotlinx.android.synthetic.main.activity_masuk.btn_detect\r\nimport kotlinx.android.synthetic.main.activity_masuk.camera_view\r\nimport kotlinx.android.synthetic.main.activity_masuk.graphic_overlay\r\nimport kotlinx.android.synthetic.main.activity_pulang.*\r\nimport okhttp3.MediaType\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.io.IOException\r\nimport java.io.OutputStream\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass MasukActivity : AppCompatActivity() {\r\n\r\n    lateinit var waitingDialog: AlertDialog\r\n    private var bitmap:Bitmap?=null\r\n    private var niknya:String?=null\r\n    lateinit var  rectOverlay:RectOverlay\r\n    lateinit var mouthPos:MutableList<PointF>\r\n//    private var mLocationManager : LocationManager?=null\r\n//    private var mLocation : Location?= null\r\n//    private var mFirebaseAnalytics: FirebaseAnalytics? = null\r\n    lateinit var leftEyPos:MutableList<PointF>\r\n    lateinit var leftEarPos:PointF\r\n    lateinit var rightEarPos:PointF\r\n    lateinit var mAdView : AdView\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_masuk)\r\n//        SystemUtils.fullscreen(window,actionBar!!)\r\n        PrefsUtil.initInstance(this)\r\n        LAT = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LAT,\"\")\r\n        LNG = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LNG,\"\")\r\n\r\n//        Toasty.info(this,\"Lat : ${LAT}, Lng : ${LNG}\",Toasty.LENGTH_LONG).show()\r\n\r\n        mouthPos = ArrayList()\r\n        leftEyPos = ArrayList()\r\n\r\n        waitingDialog = SpotsDialog.Builder().setContext(this)\r\n            .setMessage(\"Please Wait...\")\r\n            .setCancelable(false)\r\n            .build()\r\n//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n//            getWindow().setFlags(\r\n//                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,\r\n//                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS)\r\n//        }\r\n        btn_detect.setOnClickListener{\r\n            camera_view.captureImage()\r\n            btn_detect.isEnabled=false\r\n            btn_detect.isClickable=false\r\n            //btnSave.visibility= View.GONE\r\n        }\r\n\r\n        btn_active_camera.setOnClickListener {\r\n            btn_detect.isEnabled=true\r\n            btn_detect.isClickable=true\r\n            camera_view.start()\r\n            graphic_overlay.clear()\r\n            btn_active_camera.visibility=View.GONE\r\n            btn_detect.visibility=View.VISIBLE\r\n        }\r\n\r\n        niknya = intent.getStringExtra(NIK)\r\n        btnToggle.setOnClickListener {\r\n//            if(camera_view.isFacingBack) {\r\n//                btnToggle.text=\"Camera Belakang\"\r\n//            }else{\r\n//                btnToggle.text=\"Camera Depan\"\r\n//            }\r\n            camera_view.toggleFacing()\r\n        }\r\n\r\n        btnBack.setOnClickListener {\r\n            onBackPressed()\r\n        }\r\n\r\n        camera_view.addCameraKitListener(object: CameraKitEventListener {\r\n            override fun onVideo(p0: CameraKitVideo?) {\r\n\r\n            }\r\n\r\n            override fun onEvent(p0: CameraKitEvent?) {\r\n            }\r\n\r\n            override fun onImage(p0: CameraKitImage?) {\r\n\r\n                waitingDialog.show()\r\n\r\n                bitmap = p0!!.bitmap\r\n                var bitmap1 = Bitmap.createScaledBitmap(bitmap!!,camera_view.width,camera_view.height,false)\r\n\r\n                camera_view.stop()\r\n                runFaceDetectorNew(bitmap1)\r\n            }\r\n\r\n            override fun onError(p0: CameraKitError?) {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    override fun onResume() {\r\n        super.onResume()\r\n        camera_view.start()\r\n        MobileAds.initialize(this) {}\r\n\r\n        mAdView = findViewById(R.id.adViewIndex)\r\n        val adRequest = AdRequest.Builder().build()\r\n        mAdView.loadAd(adRequest)\r\n\r\n        mAdView.adListener = object: AdListener() {\r\n            override fun onAdLoaded() {\r\n                // Code to be executed when an ad finishes loading.\r\n            }\r\n\r\n            override fun onAdFailedToLoad(errorCode : Int) {\r\n                Log.d(\"errorCode\",errorCode.toString())\r\n                // Code to be executed when an ad request fails.\r\n            }\r\n\r\n            override fun onAdOpened() {\r\n                // Code to be executed when an ad opens an overlay that\r\n                // covers the screen.\r\n            }\r\n\r\n            override fun onAdClicked() {\r\n                // Code to be executed when the user clicks on an ad.\r\n            }\r\n\r\n            override fun onAdLeftApplication() {\r\n                // Code to be executed when the user has left the app.\r\n            }\r\n\r\n            override fun onAdClosed() {\r\n                // Code to be executed when the user is about to return\r\n                // to the app after tapping on an ad.\r\n            }\r\n        }\r\n\r\n//        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);\r\n        if(camera_view.isFacingBack){\r\n            camera_view.toggleFacing()\r\n//            btnToggle.text=\"Camera Belakang\"\r\n        }else{\r\n//            btnToggle.text=\"Camera Depan\"\r\n        }\r\n    }\r\n    override fun onPause() {\r\n        super.onPause()\r\n        camera_view.stop()\r\n    }\r\n    private fun saveImageToInternalStorage(bitmap: Bitmap?,id:Int): Uri {\r\n\r\n        var waktu = Date()\r\n        val cal = Calendar.getInstance()\r\n        cal.time = waktu\r\n        val simpleFormat = SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault())\r\n        var tgl = \"${simpleFormat.format(cal.time)}\"\r\n        var jam = \"${cal.get(Calendar.HOUR_OF_DAY)}${cal.get(Calendar.MINUTE)}${cal.get(Calendar.SECOND)}\"\r\n        var pukul = \"${cal.get(Calendar.HOUR_OF_DAY)}:${cal.get(Calendar.MINUTE)}:${cal.get(Calendar.SECOND)}\"\r\n        val wrapper = ContextWrapper(applicationContext)\r\n        var file = wrapper.getDir(\"images\", Context.MODE_PRIVATE)\r\n        file = File(file, niknya+\"_Masuk_${tgl}__${jam}.jpg\")\r\n        try {\r\n            // Get the file output stream\r\n            val stream: OutputStream = FileOutputStream(file)\r\n            //var uri = Uri.parse(file.absolutePath)\r\n            // Compress bitmap\r\n            bitmap!!.compress(Bitmap.CompressFormat.JPEG, 20, stream)\r\n            // Flush the stream\r\n            stream.flush()\r\n            // Close stream\r\n            stream.close()\r\n        } catch (e: IOException){ // Catch the exception\r\n            e.printStackTrace()\r\n        }\r\n        var uri = Uri.parse(file.absolutePath)\r\n        var fileUri = RequestBody.create(MediaType.parse(\"image/*\"),file)\r\n        //Log.d(\"fileUri\",fileUri.toString())\r\n        var niK = RequestBody.create(MultipartBody.FORM, niknya!!)\r\n        var tanggal = RequestBody.create(MultipartBody.FORM, tgl)\r\n        var jam_absen = RequestBody.create(MultipartBody.FORM, pukul)\r\n        var status_absen = RequestBody.create(MultipartBody.FORM, \"Masuk\")\r\n        var idnya = RequestBody.create(MultipartBody.FORM, id.toString())\r\n        var lupa_absen = RequestBody.create(MultipartBody.FORM,\"\")\r\n        var lat = RequestBody.create(MultipartBody.FORM, LAT)\r\n        var lng = RequestBody.create(MultipartBody.FORM, LNG)\r\n        var fileToUpload = MultipartBody.Part.createFormData(\"fileToUpload\",file.name,fileUri)\r\n\r\n        //API\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        val call = apiEndPoint.uploadImage(\r\n            fileToUpload,\r\n            niK,\r\n            tanggal,\r\n            jam_absen,\r\n            status_absen,\r\n            idnya,lupa_absen,lat,lng)\r\n        call.enqueue(object : Callback<ImageResponse?> {\r\n            override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {\r\n                Toasty.info(this@MasukActivity,\"$t\", Toasty.LENGTH_SHORT).show()\r\n            }\r\n            override fun onResponse(\r\n                call: Call<ImageResponse?>,\r\n                response: Response<ImageResponse?>\r\n            ) {\r\n                val imageResponse = response.body()\r\n                if (imageResponse != null) {\r\n                    if(imageResponse.tidak_dikenal!=null){\r\n                        if(imageResponse.tidak_dikenal){\r\n                            file.delete()\r\n                            btn_detect.visibility=View.VISIBLE\r\n                            btnBack.visibility=View.GONE\r\n                            waitingDialog.dismiss()\r\n                            camera_view.start()\r\n                            graphic_overlay.clear()\r\n                            Toasty.info(this@MasukActivity,\"Wajah Tidak Dikenal!\", Toasty.LENGTH_SHORT).show()\r\n                        }else{\r\n                            file.delete()\r\n                            btn_detect.visibility=View.GONE\r\n                            btnBack.visibility=View.VISIBLE\r\n                            waitingDialog.dismiss()\r\n                            Toasty.info(this@MasukActivity,\"Wajah di kenali, Absen di daftar!\", Toasty.LENGTH_SHORT).show()\r\n                        }\r\n                    }else{\r\n                        file.delete()\r\n                        btn_detect.visibility=View.VISIBLE\r\n                        btnBack.visibility=View.GONE\r\n                        waitingDialog.dismiss()\r\n                        camera_view.start()\r\n                        graphic_overlay.clear()\r\n                        Toasty.info(this@MasukActivity,\"Wajah Tidak Dikenal!\", Toasty.LENGTH_SHORT).show()\r\n                    }\r\n\r\n                   }\r\n            }\r\n        })\r\n        //API\r\n        return uri\r\n    }\r\n\r\n    private fun runFaceDetectorNew(bitmap: Bitmap?) {\r\n        val image = InputImage.fromBitmap(bitmap, 0)\r\n        val realTimeOpts = FaceDetectorOptions.Builder()\r\n            .setContourMode(FaceDetectorOptions.CONTOUR_MODE_ALL)\r\n            .build()\r\n        val detector = FaceDetection.getClient(realTimeOpts)\r\n\r\n        val result = detector.process(image!!)\r\n            .addOnSuccessListener { result ->\r\n                // Task completed successfully\r\n                // ...\r\n                progressResult(result)\r\n\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Task failed with an exception\r\n                // ...\r\n                Toast.makeText(this@MasukActivity,e.message, Toast.LENGTH_SHORT).show()\r\n            }\r\n    }\r\n\r\n//    fun runFaceDetector(bitmap: Bitmap?){\r\n//        val image = FirebaseVisionImage.fromBitmap(bitmap!!)\r\n//\r\n//        val options  = FirebaseVisionFaceDetectorOptions.Builder()\r\n//            .setPerformanceMode(\r\n//                FirebaseVisionFaceDetectorOptions.ACCURATE)\r\n//            .setLandmarkMode(FirebaseVisionFaceDetectorOptions.ALL_LANDMARKS)\r\n//            .setClassificationMode(\r\n//                FirebaseVisionFaceDetectorOptions.ALL_CLASSIFICATIONS)\r\n//            .setContourMode(FirebaseVisionFaceDetectorOptions.ALL_CONTOURS)\r\n//            .enableTracking()\r\n//            .build()\r\n//        val detector = FirebaseVision.getInstance().getVisionFaceDetector(options)\r\n//\r\n//        detector.detectInImage(image)\r\n//            .addOnSuccessListener {\r\n////                    result -> progressResult(result)\r\n//            }\r\n//            .addOnFailureListener{\r\n//                    e -> Toast.makeText(this@MasukActivity,e.message, Toast.LENGTH_SHORT).show()\r\n//            }\r\n//\r\n//    }\r\nfun progressResult(result:List<Face>){\r\n    var count=0\r\n    var id=0\r\n    var smileProb=0f\r\n    mouthPos.clear()\r\n    leftEyPos.clear()\r\n    for (face in result){\r\n\r\n        val bounds = face.boundingBox\r\n        val rotY = face.headEulerAngleY // Head is rotated to the right rotY degrees\r\n        val rotZ = face.headEulerAngleZ // Head is tilted sideways rotZ degrees\r\n\r\n        // If landmark detection was enabled (mouth, ears, eyes, cheeks, and\r\n        // nose available):\r\n        val leftEar = face.getLandmark(FaceLandmark.LEFT_EAR)\r\n        val rightEar = face.getLandmark(FaceLandmark.LEFT_EAR)\r\n        leftEar?.let {\r\n            leftEarPos = leftEar.position\r\n        }\r\n        rightEar?.let {\r\n            rightEarPos = rightEar.position\r\n        }\r\n        val mouth_bottom = face.getLandmark(FaceContour.UPPER_LIP_BOTTOM)\r\n        mouth_bottom?.let {\r\n            //mouth_bottomPos = mouth_bottom!!.position!!\r\n\r\n        }\r\n        // If contour detection was enabled:\r\n        val leftEyeContour = face.getContour(FaceContour.LEFT_EYE).points\r\n        leftEyeContour.let {\r\n            leftEyPos.addAll(it)\r\n        }\r\n        val rightEyeContour = face.getContour(FaceContour.RIGHT_CHEEK).points\r\n        val upperLipBottomContour = face.getContour(FaceContour.UPPER_LIP_BOTTOM).points\r\n        upperLipBottomContour.let {\r\n            mouthPos.addAll(it)\r\n        }\r\n        // If classification was enabled:\r\n        if (face.smilingProbability != null) {\r\n            smileProb = face.smilingProbability\r\n        }\r\n        if (face.rightEyeOpenProbability !=null) {\r\n            val rightEyeOpenProb = face.rightEyeOpenProbability\r\n        }\r\n\r\n        // If face tracking was enabled:\r\n        if (face.trackingId !=null) {\r\n            id = face.trackingId\r\n//                saveImageToInternalStorage(bitmap,id)\r\n        }\r\n        rectOverlay = RectOverlay(graphic_overlay,bounds)\r\n\r\n        count++\r\n    }\r\n    if(count>0){\r\n        //btnSave.visibility= View.VISIBLE\r\n        //btnSave.visibility= View.VISIBLE\r\n\r\n        waitingDialog.dismiss()\r\n        if(mouthPos.isNotEmpty()){\r\n            saveImageToInternalStorage(bitmap,id)\r\n            graphic_overlay.add(rectOverlay)\r\n//                Toasty.info(this@PulangActivity,\" LEFT: ${leftEarPos.toString()} \" +\r\n//                        \"|\" +\r\n//                        \" RIGHT: ${rightEarPos.toString()}\", Toasty.LENGTH_SHORT).show()\r\n//                Toasty.info(this@PulangActivity,\" ${leftEarPos.toString()}\", Toasty.LENGTH_SHORT).show()\r\n\r\n//                Toast.makeText(this@PulangActivity,String.format(\" ${leftEarPos}\"),Toast.LENGTH_LONG).show()\r\n        }else{\r\n            Toasty.error(this@MasukActivity,\r\n                \"Wajah Tidak Terdeteksi! \" +\r\n                        \"Harap Membuka Masker atau \" +\r\n                        \"Pelindung Wajah dan \" +\r\n                        \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                .show()\r\n\r\n            btn_active_camera.visibility=View.VISIBLE\r\n            btn_detect.visibility=View.GONE\r\n            waitingDialog.dismiss()\r\n        }\r\n\r\n        //Toast.makeText(this,\"$uri\",Toast.LENGTH_SHORT).show()\r\n    }else{\r\n        waitingDialog.dismiss()\r\n        Toasty.error(this,\r\n            \"Wajah Tidak Terdeteksi! \" +\r\n                    \"Harap Membuka Masker atau \" +\r\n                    \"Pelindung Wajah dan \" +\r\n                    \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n            .show()\r\n\r\n        btn_active_camera.visibility=View.VISIBLE\r\n        btn_detect.visibility=View.GONE\r\n//            Toasty.info(this@PulangActivity,\"Wajah Tidak Terdeteksi\", Toasty.LENGTH_SHORT).show()\r\n    }\r\n\r\n}\r\n\r\n    companion object{\r\n        var NIK = \"NIK\"\r\n        var LAT = \"0\"\r\n        var LNG = \"0\"\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/MasukActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/MasukActivity.kt	(date 1633075831289)
@@ -38,6 +38,7 @@
 import kotlinx.android.synthetic.main.activity_masuk.graphic_overlay
 import kotlinx.android.synthetic.main.activity_pulang.*
 import okhttp3.MediaType
+import okhttp3.MediaType.Companion.toMediaTypeOrNull
 import okhttp3.MultipartBody
 import okhttp3.RequestBody
 import retrofit2.Call
@@ -75,8 +76,6 @@
         LNG = PrefsUtil.getInstance()
             .getStringState(PrefsUtil.CURRENT_LNG,"")
 
-//        Toasty.info(this,"Lat : ${LAT}, Lng : ${LNG}",Toasty.LENGTH_LONG).show()
-
         mouthPos = ArrayList()
         leftEyPos = ArrayList()
 
@@ -84,16 +83,10 @@
             .setMessage("Please Wait...")
             .setCancelable(false)
             .build()
-//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
-//            getWindow().setFlags(
-//                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,
-//                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS)
-//        }
         btn_detect.setOnClickListener{
             camera_view.captureImage()
             btn_detect.isEnabled=false
             btn_detect.isClickable=false
-            //btnSave.visibility= View.GONE
         }
 
         btn_active_camera.setOnClickListener {
@@ -107,11 +100,6 @@
 
         niknya = intent.getStringExtra(NIK)
         btnToggle.setOnClickListener {
-//            if(camera_view.isFacingBack) {
-//                btnToggle.text="Camera Belakang"
-//            }else{
-//                btnToggle.text="Camera Depan"
-//            }
             camera_view.toggleFacing()
         }
 
@@ -160,34 +148,24 @@
 
             override fun onAdFailedToLoad(errorCode : Int) {
                 Log.d("errorCode",errorCode.toString())
-                // Code to be executed when an ad request fails.
             }
 
             override fun onAdOpened() {
-                // Code to be executed when an ad opens an overlay that
-                // covers the screen.
             }
 
             override fun onAdClicked() {
-                // Code to be executed when the user clicks on an ad.
             }
 
             override fun onAdLeftApplication() {
-                // Code to be executed when the user has left the app.
             }
 
             override fun onAdClosed() {
-                // Code to be executed when the user is about to return
-                // to the app after tapping on an ad.
             }
         }
 
-//        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);
         if(camera_view.isFacingBack){
             camera_view.toggleFacing()
-//            btnToggle.text="Camera Belakang"
         }else{
-//            btnToggle.text="Camera Depan"
         }
     }
     override fun onPause() {
@@ -220,7 +198,7 @@
             e.printStackTrace()
         }
         var uri = Uri.parse(file.absolutePath)
-        var fileUri = RequestBody.create(MediaType.parse("image/*"),file)
+        var fileUri = RequestBody.create("image/*".toMediaTypeOrNull(),file)
         //Log.d("fileUri",fileUri.toString())
         var niK = RequestBody.create(MultipartBody.FORM, niknya!!)
         var tanggal = RequestBody.create(MultipartBody.FORM, tgl)
@@ -231,55 +209,53 @@
         var lat = RequestBody.create(MultipartBody.FORM, LAT)
         var lng = RequestBody.create(MultipartBody.FORM, LNG)
         var fileToUpload = MultipartBody.Part.createFormData("fileToUpload",file.name,fileUri)
-
-        //API
-        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
-        val call = apiEndPoint.uploadImage(
-            fileToUpload,
-            niK,
-            tanggal,
-            jam_absen,
-            status_absen,
-            idnya,lupa_absen,lat,lng)
-        call.enqueue(object : Callback<ImageResponse?> {
-            override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {
-                Toasty.info(this@MasukActivity,"$t", Toasty.LENGTH_SHORT).show()
-            }
-            override fun onResponse(
-                call: Call<ImageResponse?>,
-                response: Response<ImageResponse?>
-            ) {
-                val imageResponse = response.body()
-                if (imageResponse != null) {
-                    if(imageResponse.tidak_dikenal!=null){
-                        if(imageResponse.tidak_dikenal){
-                            file.delete()
-                            btn_detect.visibility=View.VISIBLE
-                            btnBack.visibility=View.GONE
-                            waitingDialog.dismiss()
-                            camera_view.start()
-                            graphic_overlay.clear()
-                            Toasty.info(this@MasukActivity,"Wajah Tidak Dikenal!", Toasty.LENGTH_SHORT).show()
-                        }else{
-                            file.delete()
-                            btn_detect.visibility=View.GONE
-                            btnBack.visibility=View.VISIBLE
-                            waitingDialog.dismiss()
-                            Toasty.info(this@MasukActivity,"Wajah di kenali, Absen di daftar!", Toasty.LENGTH_SHORT).show()
-                        }
-                    }else{
-                        file.delete()
-                        btn_detect.visibility=View.VISIBLE
-                        btnBack.visibility=View.GONE
-                        waitingDialog.dismiss()
-                        camera_view.start()
-                        graphic_overlay.clear()
-                        Toasty.info(this@MasukActivity,"Wajah Tidak Dikenal!", Toasty.LENGTH_SHORT).show()
-                    }
-
-                   }
-            }
-        })
+            //API
+            val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
+            val call = apiEndPoint.uploadImage(
+                fileToUpload,
+                niK,
+                tanggal,
+                jam_absen,
+                status_absen,
+                idnya,lupa_absen,lat,lng)
+            call.enqueue(object : Callback<ImageResponse?> {
+                override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {
+                    Toasty.info(this@MasukActivity,"$t", Toasty.LENGTH_SHORT).show()
+                }
+                override fun onResponse(
+                    call: Call<ImageResponse?>,
+                    response: Response<ImageResponse?>
+                ) {
+                    val imageResponse = response.body()
+                    if (imageResponse != null) {
+                        if(imageResponse.tidak_dikenal!=null){
+                            if(imageResponse.tidak_dikenal){
+                                file.delete()
+                                btn_detect.visibility=View.VISIBLE
+                                btnBack.visibility=View.GONE
+                                waitingDialog.dismiss()
+                                camera_view.start()
+                                graphic_overlay.clear()
+                                Toasty.info(this@MasukActivity,"Wajah Tidak Dikenal!", Toasty.LENGTH_SHORT).show()
+                            }else{
+                                file.delete()
+                                btn_detect.visibility=View.GONE
+                                btnBack.visibility=View.VISIBLE
+                                waitingDialog.dismiss()
+                                Toasty.info(this@MasukActivity,"Wajah di kenali, Absen di daftar!", Toasty.LENGTH_SHORT).show()
+                            }
+                        }else{
+                            file.delete()
+                            btn_detect.visibility=View.VISIBLE
+                            btnBack.visibility=View.GONE
+                            waitingDialog.dismiss()
+                            camera_view.start()
+                            graphic_overlay.clear()
+                            Toasty.info(this@MasukActivity,"Wajah Tidak Dikenal!", Toasty.LENGTH_SHORT).show()
+                        }
+                    }
+                }
+            })
         //API
         return uri
     }
@@ -305,29 +281,6 @@
             }
     }
 
-//    fun runFaceDetector(bitmap: Bitmap?){
-//        val image = FirebaseVisionImage.fromBitmap(bitmap!!)
-//
-//        val options  = FirebaseVisionFaceDetectorOptions.Builder()
-//            .setPerformanceMode(
-//                FirebaseVisionFaceDetectorOptions.ACCURATE)
-//            .setLandmarkMode(FirebaseVisionFaceDetectorOptions.ALL_LANDMARKS)
-//            .setClassificationMode(
-//                FirebaseVisionFaceDetectorOptions.ALL_CLASSIFICATIONS)
-//            .setContourMode(FirebaseVisionFaceDetectorOptions.ALL_CONTOURS)
-//            .enableTracking()
-//            .build()
-//        val detector = FirebaseVision.getInstance().getVisionFaceDetector(options)
-//
-//        detector.detectInImage(image)
-//            .addOnSuccessListener {
-////                    result -> progressResult(result)
-//            }
-//            .addOnFailureListener{
-//                    e -> Toast.makeText(this@MasukActivity,e.message, Toast.LENGTH_SHORT).show()
-//            }
-//
-//    }
 fun progressResult(result:List<Face>){
     var count=0
     var id=0
Index: app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/AbsenMapActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp.Absen.v1\r\n\r\nimport android.Manifest\r\nimport android.content.pm.PackageManager\r\nimport android.os.Bundle\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.fragment.app.FragmentActivity\r\nimport com.google.android.gms.maps.CameraUpdateFactory\r\nimport com.google.android.gms.maps.GoogleMap\r\nimport com.google.android.gms.maps.OnMapReadyCallback\r\nimport com.google.android.gms.maps.SupportMapFragment\r\nimport com.google.android.gms.maps.model.LatLng\r\nimport com.google.android.gms.maps.model.MarkerOptions\r\nimport com.google.gson.Gson\r\nimport com.misit.faceidchecklogptabp.R\r\n\r\nclass AbsenMapActivity : FragmentActivity(), OnMapReadyCallback {\r\n\r\n    private var mMap : GoogleMap?= null\r\n    private var lat = 0.0\r\n    private var lng = 0.0\r\n    private var nama = \"\"\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_absen_map)\r\n        val mapFragment = supportFragmentManager.findFragmentById(R.id.map) as SupportMapFragment\r\n\r\n        mapFragment?.getMapAsync(this)\r\n\r\n        lat = intent.getDoubleExtra(KEY_LAT,0.0)\r\n        lng = intent.getDoubleExtra(KEY_LNG,0.0)\r\n        nama = intent.getStringExtra(NAMA)\r\n\r\n    }\r\n\r\n    override fun onMapReady(googleMap: GoogleMap?) {\r\n        mMap = googleMap\r\n        val userLocation = LatLng(lat,lng)\r\n        mMap?.addMarker(MarkerOptions().position(userLocation).title(nama))\r\n        mMap?.moveCamera(CameraUpdateFactory.newLatLngZoom(userLocation,15f))\r\n        if(ActivityCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACCESS_FINE_LOCATION)!=\r\n            PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION)\r\n            != PackageManager.PERMISSION_GRANTED){ return }\r\n        mMap?.isMyLocationEnabled = true\r\n\r\n        val gson= Gson()\r\n//        val listOfObject = object : TypeToken<List<StoreItem?>?>() {}.type\r\n    }\r\n\r\n    companion object{\r\n        val KEY_LAT = \"key_lat\"\r\n        val KEY_LNG = \"key_lng\"\r\n        val NAMA = \"NAMA\"\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/AbsenMapActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/AbsenMapActivity.kt	(date 1633075861570)
@@ -43,7 +43,7 @@
             PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this,
                 Manifest.permission.ACCESS_COARSE_LOCATION)
             != PackageManager.PERMISSION_GRANTED){ return }
-        mMap?.isMyLocationEnabled = true
+//        mMap?.isMyLocationEnabled = true
 
         val gson= Gson()
 //        val listOfObject = object : TypeToken<List<StoreItem?>?>() {}.type
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\napply plugin: 'kotlin-android'\r\n\r\napply plugin: 'kotlin-android-extensions'\r\n\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.2\"\r\n    defaultConfig {\r\n        applicationId \"com.misit.faceidchecklogptabp\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 29\r\n        versionCode 16\r\n        versionName \"2.6\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    dataBinding {\r\n        enabled = true\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'androidx.core:core-ktx:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'androidx.viewpager2:viewpager2:1.0.0'\r\n//    implementation 'com.google.firebase:firebase-ml-vision:24.1.0'\r\n\r\n//    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n//    implementation 'com.google.firebase:firebase-analytics:17.4.4'\r\n    implementation 'com.wonderkiln:camerakit:0.13.1'\r\n    implementation 'com.google.firebase:firebase-auth:19.3.0'\r\n    implementation 'com.google.firebase:firebase-core:17.4.4'\r\n//    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'\r\n    implementation 'com.google.mlkit:face-detection:16.1.2'\r\n    implementation 'com.google.android.gms:play-services-mlkit-face-detection:16.2.0'\r\n\r\n\r\n    implementation 'com.github.d-max:spots-dialog:1.1@aar'\r\n\r\n//    implementation 'com.google.firebase:firebase-ml-vision-face-model:20.0.1'\r\n    // Custom model\r\n//    implementation 'com.google.firebase:firebase-ml-model-interpreter:22.0.3'\r\n    // AutoML model\r\n//    implementation 'com.google.firebase:firebase-ml-vision-automl:18.0.5'\r\n\r\n\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'\r\n    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.9.0'\r\n\r\n    implementation 'com.squareup.retrofit2:retrofit:2.6.0'\r\n\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'\r\n\r\n    def nav_version = \"2.3.0-alpha03\"\r\n\r\n    // Kotlin\r\n    implementation \"androidx.navigation:navigation-fragment-ktx:$nav_version\"\r\n    implementation \"androidx.navigation:navigation-ui-ktx:$nav_version\"\r\n\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n\r\n    implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc01\"\r\n    implementation \"androidx.recyclerview:recyclerview:1.1.0\"\r\n    implementation 'com.github.GrenderG:Toasty:1.4.2'\r\n\r\n    implementation 'com.mikhaellopez:circularimageview:4.2.0'\r\n    implementation 'joda-time:joda-time:2.9.9'\r\n    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'\r\n    implementation 'commons-codec:commons-codec:1.10'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n//    implementation group: 'com.camerakit', name: 'camerakit', version: '1.0.0-Snapshot', changing: true\r\n    implementation 'com.google.firebase:firebase-messaging:20.1.7'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'\r\n    implementation 'com.google.android.gms:play-services-ads:19.3.0'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    implementation 'com.google.android.gms:play-services-location:18.0.0'\r\n    implementation 'com.camerakit:camerakit:1.0.0-beta3.11'\r\n    implementation 'com.camerakit:jpegkit:0.1.0'\r\n    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'\r\n\r\n\r\n    implementation 'com.facebook.shimmer:shimmer:0.5.0'\r\n    implementation 'com.google.zxing:core:3.2.1'\r\n    implementation 'com.journeyapps:zxing-android-embedded:3.2.0@aar'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-vision:20.1.1'\r\n    implementation 'com.google.android.gms:play-services-vision-common:19.1.1'\r\n    implementation platform('com.google.firebase:firebase-bom:28.3.0')\r\n\r\n    implementation 'com.google.firebase:firebase-analytics-ktx'\r\n\r\n    ext {\r\n        play_services_version = \"15.0.1\"\r\n        support_version = \"27.1.1\"\r\n    }\r\n    implementation \"com.android.support:appcompat-v7:$support_version\"\r\n    implementation \"com.android.support:design:$support_version\"\r\n\r\n// Google Drive\r\n//    implementation \"com.google.android.gms:play-services-auth:$play_services_version\"\r\n//    implementation \"com.google.android.gms:play-services-drive:$play_services_version\"\r\n    implementation 'com.squareup.okio:okio:1.14.0'\r\n//    implementation 'com.google.api-client:google-api-client:1.23.0'\r\n//    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'\r\n//    implementation 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'\r\n    implementation 'me.dm7.barcodescanner:zxing:1.9'\r\n    implementation \"com.theartofdev.edmodo:android-image-cropper:2.8.+\"\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'com.google.android.material:material:1.5.0-alpha02'\r\n    implementation 'com.getbase:floatingactionbutton:1.10.1'\r\n    implementation 'com.facebook.shimmer:shimmer:0.5.0'\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/build.gradle	(date 1633075679728)
@@ -14,14 +14,19 @@
         applicationId "com.misit.faceidchecklogptabp"
         minSdkVersion 21
         targetSdkVersion 29
-        versionCode 16
-        versionName "2.6"
+        versionCode 21
+        versionName "3.1"
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+        multiDexEnabled true
     }
     buildTypes {
         release {
-            minifyEnabled false
+            minifyEnabled true
+            shrinkResources true
             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+            ndk {
+                debugSymbolLevel 'SYMBOL_TABLE'
+            }
         }
     }
 
@@ -35,6 +40,8 @@
     kotlinOptions {
         jvmTarget = '1.8'
     }
+    ndkVersion '23.0.7599858'
+
 }
 
 dependencies {
@@ -68,12 +75,18 @@
 //    implementation 'com.google.firebase:firebase-ml-vision-automl:18.0.5'
 
 
-    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
-    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.9.0'
+//    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
+//    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.9.0'
 
-    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
+    // define a BOM and its version
+    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))
 
-    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
+    // define any required OkHttp artifacts without version
+    implementation("com.squareup.okhttp3:okhttp")
+    implementation("com.squareup.okhttp3:logging-interceptor")
+
+    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
+    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
 
     def nav_version = "2.3.0-alpha03"
 
Index: app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/LupaMasukActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp.Absen.v1\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.ContextWrapper\r\nimport android.graphics.Bitmap\r\nimport android.graphics.PointF\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.google.mlkit.vision.common.InputImage\r\nimport com.google.mlkit.vision.face.*\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Helper.RectOverlay\r\nimport com.misit.faceidchecklogptabp.R\r\nimport com.misit.faceidchecklogptabp.Response.ImageResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport com.wonderkiln.camerakit.*\r\nimport dmax.dialog.SpotsDialog\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_lupa_masuk.*\r\nimport okhttp3.MediaType\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.io.IOException\r\nimport java.io.OutputStream\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass LupaMasukActivity : AppCompatActivity() {\r\n\r\n    lateinit var waitingDialog: AlertDialog\r\n    private var bitmap: Bitmap?=null\r\n    private var niknya:String?=null\r\n    private var tglLupaAbsen:String?=null\r\n    lateinit var  rectOverlay: RectOverlay\r\n    lateinit var mouthPos:MutableList<PointF>\r\n    lateinit var leftEarPos: PointF\r\n    lateinit var leftEyPos:MutableList<PointF>\r\n    lateinit var rightEarPos: PointF\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_lupa_masuk)\r\n        PrefsUtil.initInstance(this)\r\n        LAT = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LAT,\"\")\r\n        LNG = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LNG,\"\")\r\n\r\n//        Toasty.info(this,\"Lat : ${MasukActivity.LAT}, Lng : ${MasukActivity.LNG}\",Toasty.LENGTH_LONG).show()\r\n\r\n        mouthPos = ArrayList()\r\n        leftEyPos = ArrayList()\r\n        waitingDialog = SpotsDialog.Builder().setContext(this)\r\n            .setMessage(\"Please Wait...\")\r\n            .setCancelable(false)\r\n            .build()\r\n        btn_detect.setOnClickListener{\r\n            camera_view.captureImage()\r\n            btn_detect.isEnabled=false\r\n            btn_detect.isClickable=false\r\n            //btnSave.visibility= View.GONE\r\n\r\n        }\r\n        btn_active_camera.setOnClickListener {\r\n            btn_detect.isEnabled=true\r\n            btn_detect.isClickable=true\r\n            camera_view.start()\r\n            graphic_overlay.clear()\r\n            btn_active_camera.visibility=View.GONE\r\n            btn_detect.visibility= View.VISIBLE\r\n        }\r\n\r\n        PrefsUtil.initInstance(this)\r\n        if(PrefsUtil.getInstance().getBooleanState(PrefsUtil.IS_LOGGED_IN,true)) {\r\n            niknya = PrefsUtil.getInstance().getStringState(PrefsUtil.NIK,\"\")\r\n        }\r\n        tglLupaAbsen = intent.getStringExtra(TGL_LUPA_ABSEN)\r\n\r\n        btnToggle.setOnClickListener {\r\n            //            if(camera_view.isFacingBack) {\r\n//                btnToggle.text=\"Camera Belakang\"\r\n//            }else{\r\n//                btnToggle.text=\"Camera Depan\"\r\n//            }\r\n            camera_view.toggleFacing()\r\n        }\r\n        btnBack.setOnClickListener {\r\n            onBackPressed()\r\n        }\r\n        camera_view.addCameraKitListener(object: CameraKitEventListener {\r\n            override fun onVideo(p0: CameraKitVideo?) {\r\n\r\n            }\r\n\r\n            override fun onEvent(p0: CameraKitEvent?) {\r\n            }\r\n\r\n            override fun onImage(p0: CameraKitImage?) {\r\n\r\n                waitingDialog.show()\r\n\r\n                bitmap = p0!!.bitmap\r\n                var bitmap1 = Bitmap.createScaledBitmap(bitmap!!,camera_view.width,camera_view.height,false)\r\n\r\n                camera_view.stop()\r\n                runFaceDetectorNew(bitmap1)\r\n            }\r\n\r\n            override fun onError(p0: CameraKitError?) {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    override fun onResume() {\r\n        super.onResume()\r\n        camera_view.start()\r\n        if(camera_view.isFacingBack){\r\n            camera_view.toggleFacing()\r\n//            btnToggle.text=\"Camera Belakang\"\r\n        }else{\r\n//            btnToggle.text=\"Camera Depan\"\r\n        }\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        camera_view.stop()\r\n    }\r\n    private fun saveImageToInternalStorage(bitmap: Bitmap?,id:Int): Uri {\r\n        var waktu = Date()\r\n        val cal = Calendar.getInstance()\r\n        cal.time = waktu\r\n        val simpleFormat = SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault())\r\n        var tgl = \"${simpleFormat.format(cal.time)}\"\r\n        var jam = \"${cal.get(Calendar.HOUR_OF_DAY)}${cal.get(Calendar.MINUTE)}${cal.get(Calendar.SECOND)}\"\r\n        var pukul = \"${cal.get(Calendar.HOUR_OF_DAY)}:${cal.get(Calendar.MINUTE)}:${cal.get(Calendar.SECOND)}\"\r\n        val wrapper = ContextWrapper(applicationContext)\r\n        var file = wrapper.getDir(\"images\", Context.MODE_PRIVATE)\r\n        file = File(file, niknya+\"_Masuk_${tgl}__${jam}.jpg\")\r\n        try {\r\n            // Get the file output stream\r\n            val stream: OutputStream = FileOutputStream(file)\r\n            //var uri = Uri.parse(file.absolutePath)\r\n            // Compress bitmap\r\n            bitmap!!.compress(Bitmap.CompressFormat.JPEG, 20, stream)\r\n            // Flush the stream\r\n            stream.flush()\r\n            // Close stream\r\n            stream.close()\r\n        } catch (e: IOException){ // Catch the exception\r\n            e.printStackTrace()\r\n        }\r\n        var uri = Uri.parse(file.absolutePath)\r\n        var fileUri = RequestBody.create(MediaType.parse(\"image/*\"),file)\r\n        //Log.d(\"fileUri\",fileUri.toString())\r\n        var niK = RequestBody.create(MultipartBody.FORM, niknya!!)\r\n        var tanggal = RequestBody.create(MultipartBody.FORM, tglLupaAbsen!!)\r\n        var jam_absen = RequestBody.create(MultipartBody.FORM, pukul)\r\n        var status_absen = RequestBody.create(MultipartBody.FORM, \"Masuk\")\r\n        var idnya = RequestBody.create(MultipartBody.FORM, id.toString())\r\n        var lat = RequestBody.create(MultipartBody.FORM, LAT)\r\n        var lng = RequestBody.create(MultipartBody.FORM, LNG)\r\n        var lupa_absen = RequestBody.create(MultipartBody.FORM,\"Lupa Absen Masuk\")\r\n        var fileToUpload = MultipartBody.Part.createFormData(\"fileToUpload\",file.name,fileUri)\r\n\r\n\r\n        //API\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        val call = apiEndPoint.uploadImage(\r\n            fileToUpload,\r\n            niK,\r\n            tanggal,\r\n            jam_absen,\r\n            status_absen,\r\n            idnya,lupa_absen,lat,lng)\r\n        call.enqueue(object : Callback<ImageResponse?> {\r\n            override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {\r\n                Toasty.info(this@LupaMasukActivity,\"$t\", Toasty.LENGTH_SHORT).show()\r\n            }\r\n            override fun onResponse(\r\n                call: Call<ImageResponse?>,\r\n                response: Response<ImageResponse?>\r\n            ) {\r\n                val imageResponse = response.body()\r\n                if (imageResponse != null) {\r\n                    if(imageResponse.tidak_dikenal!=null) {\r\n                        if (imageResponse.tidak_dikenal) {\r\n                            Log.d(\"TIDAK\",imageResponse.tidak_dikenal.toString())\r\n                            file.delete()\r\n                            btn_detect.visibility = View.VISIBLE\r\n                            btnBack.visibility = View.GONE\r\n                            waitingDialog.dismiss()\r\n                            camera_view.start()\r\n                            graphic_overlay.clear()\r\n                            Toasty.info(\r\n                                this@LupaMasukActivity,\r\n                                \"Wajah Tidak Dikenal!\",\r\n                                Toasty.LENGTH_SHORT\r\n                            ).show()\r\n                        } else {\r\n                            Log.d(\"TIDAK\",imageResponse.tidak_dikenal.toString())\r\n                            file.delete()\r\n                            btn_detect.visibility = View.GONE\r\n                            btnBack.visibility = View.VISIBLE\r\n                            waitingDialog.dismiss()\r\n                            Toasty.info(\r\n                                this@LupaMasukActivity,\r\n                                \"Wajah di kenali, Absen di daftar!\",\r\n                                Toasty.LENGTH_SHORT\r\n                            ).show()\r\n                        }\r\n                    }else{\r\n                        Log.d(\"TIDAK\",imageResponse.tidak_dikenal.toString())\r\n                        file.delete()\r\n                        btn_detect.visibility = View.VISIBLE\r\n                        btnBack.visibility = View.GONE\r\n                        waitingDialog.dismiss()\r\n                        camera_view.start()\r\n                        graphic_overlay.clear()\r\n                        Toasty.info(\r\n                            this@LupaMasukActivity,\r\n                            \"Wajah Tidak Dikenal!\",\r\n                            Toasty.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        //API\r\n        return uri\r\n    }\r\n    private fun runFaceDetectorNew(bitmap: Bitmap?) {\r\n        val image = InputImage.fromBitmap(bitmap, 0)\r\n        val realTimeOpts = FaceDetectorOptions.Builder()\r\n            .setContourMode(FaceDetectorOptions.CONTOUR_MODE_ALL)\r\n            .build()\r\n        val detector = FaceDetection.getClient(realTimeOpts)\r\n\r\n        val result = detector.process(image!!)\r\n            .addOnSuccessListener { result ->\r\n                // Task completed successfully\r\n                // ...\r\n                progressResult(result)\r\n\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Task failed with an exception\r\n                // ...\r\n                Toast.makeText(this@LupaMasukActivity,e.message, Toast.LENGTH_SHORT).show()\r\n            }\r\n    }\r\n    fun progressResult(result:List<Face>){\r\n        var count=0\r\n        var id=0\r\n        for (face in result){\r\n            val bounds = face.boundingBox\r\n\r\n            val leftEar = face.getLandmark(FaceLandmark.LEFT_EAR)\r\n            leftEar?.let {\r\n                //val leftEarPos = leftEar.position\r\n            }\r\n\r\n            if (face.smilingProbability != null) {\r\n            }\r\n            if (face.rightEyeOpenProbability != null) {\r\n            }\r\n            val upperLipBottomContour = face.getContour(FaceContour.UPPER_LIP_BOTTOM).points\r\n\r\n            upperLipBottomContour.let {\r\n                mouthPos.addAll(it)\r\n            }\r\n\r\n            if (face.trackingId!= null) {\r\n                id=face.trackingId\r\n            }\r\n\r\n            rectOverlay = RectOverlay(graphic_overlay,bounds)\r\n//            graphic_overlay.add(rectOverlay)\r\n            count++\r\n        }\r\n        if(count>0){\r\n            //btnSave.visibility= View.VISIBLE\r\n            //Toast.makeText(this,\"$uri\",Toast.LENGTH_SHORT).show()\r\n            waitingDialog.dismiss()\r\n            if(mouthPos.isNotEmpty()){\r\n                saveImageToInternalStorage(bitmap,id)\r\n                graphic_overlay.add(rectOverlay)\r\n//                Toast.makeText(this@PulangActivity,String.format(\" ${mouth_bottomPos}\"),Toast.LENGTH_LONG).show()\r\n            }else{\r\n                Toasty.error(this@LupaMasukActivity,\r\n                    \"Wajah Tidak Terdeteksi! \" +\r\n                            \"Harap Membuka Masker atau \" +\r\n                            \"Pelindung Wajah dan \" +\r\n                            \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                    .show()\r\n                btn_active_camera.visibility=View.VISIBLE\r\n                btn_detect.visibility=View.GONE\r\n                waitingDialog.dismiss()\r\n\r\n\r\n            }\r\n        }else{\r\n            waitingDialog.dismiss()\r\n            Toasty.error(this@LupaMasukActivity,\r\n                \"Wajah Tidak Terdeteksi! \" +\r\n                        \"Harap Membuka Masker atau \" +\r\n                        \"Pelindung Wajah dan \" +\r\n                        \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                .show()\r\n//            waitingDialog.dismiss()\r\n            btn_active_camera.visibility=View.VISIBLE\r\n            btn_detect.visibility=View.GONE\r\n//            Toasty.info(this@MasukActivity,\"Wajah Tidak Terdeteksi\", Toasty.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    companion object{\r\n        var NIK = \"NIK\"\r\n        var TGL_LUPA_ABSEN = \"TGL_LUPA_ABSEN\"\r\n        var LAT = \"\"\r\n        var LNG = \"\"\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/LupaMasukActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/LupaMasukActivity.kt	(date 1633075774990)
@@ -24,6 +24,7 @@
 import es.dmoral.toasty.Toasty
 import kotlinx.android.synthetic.main.activity_lupa_masuk.*
 import okhttp3.MediaType
+import okhttp3.MediaType.Companion.toMediaTypeOrNull
 import okhttp3.MultipartBody
 import okhttp3.RequestBody
 import retrofit2.Call
@@ -163,7 +164,7 @@
             e.printStackTrace()
         }
         var uri = Uri.parse(file.absolutePath)
-        var fileUri = RequestBody.create(MediaType.parse("image/*"),file)
+        var fileUri = RequestBody.create("image/*".toMediaTypeOrNull(),file)
         //Log.d("fileUri",fileUri.toString())
         var niK = RequestBody.create(MultipartBody.FORM, niknya!!)
         var tanggal = RequestBody.create(MultipartBody.FORM, tglLupaAbsen!!)
Index: app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/PulangActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp.Absen.v1\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.ContextWrapper\r\nimport android.graphics.Bitmap\r\nimport android.graphics.Point\r\nimport android.graphics.PointF\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.google.android.gms.ads.AdListener\r\nimport com.google.android.gms.ads.AdRequest\r\nimport com.google.android.gms.ads.AdView\r\nimport com.google.android.gms.ads.MobileAds\r\nimport com.google.android.gms.vision.face.Landmark.RIGHT_EAR\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\nimport com.google.mlkit.vision.common.InputImage\r\nimport com.google.mlkit.vision.face.*\r\nimport com.google.mlkit.vision.face.FaceLandmark.LEFT_EAR\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Helper.RectOverlay\r\nimport com.misit.faceidchecklogptabp.R\r\nimport com.misit.faceidchecklogptabp.Response.ImageResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport com.wonderkiln.camerakit.*\r\nimport dmax.dialog.SpotsDialog\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_pulang.*\r\nimport okhttp3.MediaType\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.io.IOException\r\nimport java.io.OutputStream\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass PulangActivity : AppCompatActivity() {\r\n\r\n    lateinit var waitingDialog: AlertDialog\r\n    private var bitmap:Bitmap?=null\r\n    private var niknya:String?=null\r\n    lateinit var mouthPos:MutableList<PointF>\r\n    lateinit var leftEyPos:MutableList<PointF>\r\n\r\n    lateinit var  rectOverlay:RectOverlay\r\n    lateinit var leftEarPos:PointF\r\n    lateinit var rightEarPos:PointF\r\n    private var mFirebaseAnalytics: FirebaseAnalytics? = null\r\n\r\n    lateinit var mAdView : AdView\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_pulang)\r\n//        SystemUtils.fullscreen(window,actionBar!!)\r\n        PrefsUtil.initInstance(this)\r\n        LAT = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LAT,\"\")\r\n        LNG = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LNG,\"\")\r\n\r\n//        Toasty.info(this,\"Lat : ${MasukActivity.LAT}, Lng : ${MasukActivity.LNG}\",Toasty.LENGTH_LONG).show()\r\n\r\n        waitingDialog = SpotsDialog.Builder().setContext(this)\r\n            .setMessage(\"Please Wait...\")\r\n            .setCancelable(false)\r\n            .build()\r\n        mouthPos = ArrayList()\r\n        leftEyPos=ArrayList()\r\n//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n////            getWindow().setFlags(\r\n////                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,\r\n////                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS)\r\n//            window.decorView.apply {\r\n//                // Hide both the navigation bar and the status bar.\r\n//                // SYSTEM_UI_FLAG_FULLSCREEN is only available on Android 4.1 and higher, but as\r\n//                // a general rule, you should design your app to hide the status bar whenever you\r\n//                // hide the navigation bar.\r\n//                systemUiVisibility = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\r\n////                or View.SYSTEM_UI_FLAG_FULLSCREEN\r\n//            }\r\n//\r\n//        }\r\n        niknya = intent.getStringExtra(NIK)\r\n        btn_detect.setOnClickListener{\r\n            camera_view.captureImage()\r\n            btn_detect.isEnabled=false\r\n            btn_detect.isClickable=false\r\n        }\r\n        btn_active_camera.setOnClickListener {\r\n            btn_detect.isEnabled=true\r\n            btn_detect.isClickable=true\r\n            camera_view.start()\r\n            graphic_overlay.clear()\r\n            btn_active_camera.visibility=View.GONE\r\n            btn_detect.visibility=View.VISIBLE\r\n\r\n        }\r\n        btnToggle.setOnClickListener {\r\n//            if(camera_view.isFacingBack) {\r\n//                btnToggle.text=\"Camera Belakang\"\r\n//            }else{\r\n//                btnToggle.text=\"Camera Depan\"\r\n//            }\r\n            camera_view.toggleFacing()\r\n        }\r\n\r\n        btnBack.setOnClickListener {\r\n            onBackPressed()\r\n        }\r\n        camera_view.addCameraKitListener(object: CameraKitEventListener {\r\n            override fun onVideo(p0: CameraKitVideo?) {\r\n\r\n            }\r\n\r\n            override fun onEvent(p0: CameraKitEvent?) {\r\n            }\r\n\r\n            override fun onImage(p0: CameraKitImage?) {\r\n\r\n                 waitingDialog.show()\r\n\r\n                bitmap = p0!!.bitmap\r\n                var bitmap1 = Bitmap.createScaledBitmap(bitmap!!,camera_view.width,camera_view.height,false)\r\n\r\n                camera_view.stop()\r\n                runFaceDetector(bitmap1)\r\n            }\r\n\r\n            override fun onError(p0: CameraKitError?) {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        camera_view.start()\r\n        MobileAds.initialize(this) {}\r\n\r\n        mAdView = findViewById(R.id.adViewIndex)\r\n        val adRequest = AdRequest.Builder().build()\r\n        mAdView.loadAd(adRequest)\r\n\r\n        mAdView.adListener = object: AdListener() {\r\n            override fun onAdLoaded() {\r\n                // Code to be executed when an ad finishes loading.\r\n            }\r\n\r\n            override fun onAdFailedToLoad(errorCode : Int) {\r\n                Log.d(\"errorCode\",errorCode.toString())\r\n                // Code to be executed when an ad request fails.\r\n            }\r\n\r\n            override fun onAdOpened() {\r\n                // Code to be executed when an ad opens an overlay that\r\n                // covers the screen.\r\n            }\r\n\r\n            override fun onAdClicked() {\r\n                // Code to be executed when the user clicks on an ad.\r\n            }\r\n\r\n            override fun onAdLeftApplication() {\r\n                // Code to be executed when the user has left the app.\r\n            }\r\n\r\n            override fun onAdClosed() {\r\n                // Code to be executed when the user is about to return\r\n                // to the app after tapping on an ad.\r\n            }\r\n        }\r\n\r\n//        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);\r\n        if(camera_view.isFacingBack){\r\n            camera_view.toggleFacing()\r\n//            btnToggle.text=\"Camera Belakang\"\r\n        }else{\r\n//            btnToggle.text=\"Camera Depan\"\r\n        }\r\n    }\r\n    override fun onPause() {\r\n        super.onPause()\r\n        camera_view.stop()\r\n    }\r\n    private fun saveImageToInternalStorage(bitmap: Bitmap?,id:Int): Uri {\r\n        var waktu = Date()\r\n        val cal = Calendar.getInstance()\r\n        cal.time = waktu\r\n        val simpleFormat = SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault())\r\n        var tgl = \"${simpleFormat.format(cal.time)}\"\r\n        var jam = \"${cal.get(Calendar.HOUR_OF_DAY)}${cal.get(Calendar.MINUTE)}${cal.get(Calendar.SECOND)}\"\r\n        var pukul = \"${cal.get(Calendar.HOUR_OF_DAY)}:${cal.get(Calendar.MINUTE)}:${cal.get(Calendar.SECOND)}\"\r\n        val wrapper = ContextWrapper(applicationContext)\r\n        var file = wrapper.getDir(\"images\", Context.MODE_PRIVATE)\r\n        file = File(file, niknya+\"_Pulang_${tgl}__${jam}.jpg\")\r\n        try {\r\n            // Get the file output stream\r\n            val stream: OutputStream = FileOutputStream(file)\r\n            //var uri = Uri.parse(file.absolutePath)\r\n            // Compress bitmap\r\n            bitmap!!.compress(Bitmap.CompressFormat.JPEG, 20, stream)\r\n            // Flush the stream\r\n            stream.flush()\r\n            // Close stream\r\n            stream.close()\r\n        } catch (e: IOException){ // Catch the exception\r\n            e.printStackTrace()\r\n        }\r\n        var uri = Uri.parse(file.absolutePath)\r\n        var fileUri = RequestBody.create(MediaType.parse(\"image/*\"),file)\r\n        //Log.d(\"fileUri\",fileUri.toString())\r\n        var fileToUpload = MultipartBody.Part.createFormData(\"fileToUpload\",file.name,fileUri)\r\n        var niK = RequestBody.create(MultipartBody.FORM, niknya!!)\r\n        var tanggal = RequestBody.create(MultipartBody.FORM, tgl!!)\r\n        var jam_absen = RequestBody.create(MultipartBody.FORM, pukul!!)\r\n        var status_absen = RequestBody.create(MultipartBody.FORM, \"Pulang\")\r\n        var lat = RequestBody.create(MultipartBody.FORM, LAT)\r\n        var lng = RequestBody.create(MultipartBody.FORM, LNG)\r\n        var lupa_absen = RequestBody.create(MultipartBody.FORM,\"\")\r\n        var face_id = RequestBody.create(MultipartBody.FORM, id.toString())\r\n        //API\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        val call = apiEndPoint.uploadImage(\r\n            fileToUpload,\r\n            niK,\r\n            tanggal,\r\n            jam_absen,\r\n            status_absen,\r\n            face_id,lupa_absen,lat,lng)\r\n        call?.enqueue(object : Callback<ImageResponse?> {\r\n            override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {\r\n\r\n            }\r\n            override fun onResponse(\r\n                call: Call<ImageResponse?>,\r\n                response: Response<ImageResponse?>\r\n            ) {\r\n                val imageResponse = response.body()\r\n                if (imageResponse != null) {\r\n                    Log.d(\"Tidak dikenal\",imageResponse.tidak_dikenal.toString())\r\n                    if(imageResponse.tidak_dikenal!=null) {\r\n                        if (imageResponse.tidak_dikenal) {\r\n                            file.delete()\r\n                            btn_detect.visibility = View.VISIBLE\r\n                            btnBack.visibility = View.GONE\r\n                            waitingDialog.dismiss()\r\n                            camera_view.start()\r\n                            graphic_overlay.clear()\r\n                            Toasty.info(\r\n                                this@PulangActivity,\r\n                                \"Wajah Tidak Dikenal!\",\r\n                                Toasty.LENGTH_SHORT\r\n                            ).show()\r\n                        } else {\r\n                            file.delete()\r\n                            btn_detect.visibility = View.GONE\r\n                            btnBack.visibility = View.VISIBLE\r\n                            waitingDialog.dismiss()\r\n                            Toasty.info(\r\n                                this@PulangActivity,\r\n                                \"Wajah di kenali, Absen di daftar!\",\r\n                                Toasty.LENGTH_SHORT\r\n                            ).show()\r\n                        }\r\n                    }else{\r\n                        file.delete()\r\n                        btn_detect.visibility=View.VISIBLE\r\n                        btnBack.visibility=View.GONE\r\n                        waitingDialog.dismiss()\r\n                        camera_view.start()\r\n                        graphic_overlay.clear()\r\n                        Toasty.info(this@PulangActivity,\"Wajah Tidak Dikenal!\", Toasty.LENGTH_SHORT).show()\r\n\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        //API\r\n        return uri\r\n    }\r\n\r\n    fun runFaceDetector(bitmap: Bitmap?){\r\n        val image =InputImage.fromBitmap(bitmap, 0)\r\n        val realTimeOpts = FaceDetectorOptions.Builder()\r\n            .setContourMode(FaceDetectorOptions.CONTOUR_MODE_ALL)\r\n            .build()\r\n        val detector = FaceDetection.getClient(realTimeOpts)\r\n\r\n        val result = detector.process(image)\r\n            .addOnSuccessListener { result ->\r\n                // Task completed successfully\r\n                // ...\r\n                progressResult(result)\r\n\r\n            }\r\n            .addOnFailureListener {\r\n                    e -> Toast.makeText(this@PulangActivity,e.message, Toast.LENGTH_SHORT).show()\r\n            }\r\n\r\n    }\r\n    fun progressResult(result:List<Face>){\r\n        var count=0\r\n        var id=0\r\n        var smileProb=0f\r\n        mouthPos.clear()\r\n        leftEyPos.clear()\r\n        for (face in result){\r\n\r\n            val bounds = face.boundingBox\r\n            val rotY = face.headEulerAngleY // Head is rotated to the right rotY degrees\r\n            val rotZ = face.headEulerAngleZ // Head is tilted sideways rotZ degrees\r\n\r\n            // If landmark detection was enabled (mouth, ears, eyes, cheeks, and\r\n            // nose available):\r\n            val leftEar = face.getLandmark(FaceLandmark.LEFT_EAR)\r\n            val rightEar = face.getLandmark(FaceLandmark.LEFT_EAR)\r\n            leftEar?.let {\r\n                leftEarPos = leftEar.position\r\n            }\r\n            rightEar?.let {\r\n                rightEarPos = rightEar.position\r\n            }\r\n            val mouth_bottom = face.getLandmark(FaceContour.UPPER_LIP_BOTTOM)\r\n            mouth_bottom?.let {\r\n              //mouth_bottomPos = mouth_bottom!!.position!!\r\n\r\n            }\r\n            // If contour detection was enabled:\r\n            val leftEyeContour = face.getContour(FaceContour.LEFT_EYE).points\r\n            leftEyeContour.let {\r\n                leftEyPos.addAll(it)\r\n            }\r\n            val rightEyeContour = face.getContour(FaceContour.RIGHT_CHEEK).points\r\n            val upperLipBottomContour = face.getContour(FaceContour.UPPER_LIP_BOTTOM).points\r\n            upperLipBottomContour.let {\r\n                mouthPos.addAll(it)\r\n            }\r\n            // If classification was enabled:\r\n            if (face.smilingProbability != null) {\r\n                smileProb = face.smilingProbability\r\n            }\r\n            if (face.rightEyeOpenProbability !=null) {\r\n                val rightEyeOpenProb = face.rightEyeOpenProbability\r\n            }\r\n\r\n            // If face tracking was enabled:\r\n            if (face.trackingId !=null) {\r\n                id = face.trackingId\r\n//                saveImageToInternalStorage(bitmap,id)\r\n            }\r\n            rectOverlay = RectOverlay(graphic_overlay,bounds)\r\n\r\n            count++\r\n        }\r\n        if(count>0){\r\n            //btnSave.visibility= View.VISIBLE\r\n            //btnSave.visibility= View.VISIBLE\r\n\r\n            waitingDialog.dismiss()\r\n            if(mouthPos.isNotEmpty()){\r\n                saveImageToInternalStorage(bitmap,id)\r\n                graphic_overlay.add(rectOverlay)\r\n//                Toasty.info(this@PulangActivity,\" LEFT: ${leftEarPos.toString()} \" +\r\n//                        \"|\" +\r\n//                        \" RIGHT: ${rightEarPos.toString()}\", Toasty.LENGTH_SHORT).show()\r\n//                Toasty.info(this@PulangActivity,\" ${leftEarPos.toString()}\", Toasty.LENGTH_SHORT).show()\r\n\r\n//                Toast.makeText(this@PulangActivity,String.format(\" ${leftEarPos}\"),Toast.LENGTH_LONG).show()\r\n            }else{\r\n                Toasty.error(this@PulangActivity,\r\n                    \"Wajah Tidak Terdeteksi! \" +\r\n                        \"Harap Membuka Masker atau \" +\r\n                        \"Pelindung Wajah dan \" +\r\n                        \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                    .show()\r\n\r\n                btn_active_camera.visibility=View.VISIBLE\r\n                btn_detect.visibility=View.GONE\r\n                waitingDialog.dismiss()\r\n            }\r\n\r\n            //Toast.makeText(this,\"$uri\",Toast.LENGTH_SHORT).show()\r\n        }else{\r\n            waitingDialog.dismiss()\r\n            Toasty.error(this@PulangActivity,\r\n                \"Wajah Tidak Terdeteksi! \" +\r\n                        \"Harap Membuka Masker atau \" +\r\n                        \"Pelindung Wajah dan \" +\r\n                        \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                .show()\r\n\r\n            btn_active_camera.visibility=View.VISIBLE\r\n            btn_detect.visibility=View.GONE\r\n//            Toasty.info(this@PulangActivity,\"Wajah Tidak Terdeteksi\", Toasty.LENGTH_SHORT).show()\r\n        }\r\n\r\n    }\r\n\r\n    companion object{\r\n        var NIK = \"NIK\"\r\n        var LAT = \"\"\r\n        var LNG = \"\"\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/PulangActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/PulangActivity.kt	(date 1633075831297)
@@ -32,6 +32,7 @@
 import es.dmoral.toasty.Toasty
 import kotlinx.android.synthetic.main.activity_pulang.*
 import okhttp3.MediaType
+import okhttp3.MediaType.Companion.toMediaTypeOrNull
 import okhttp3.MultipartBody
 import okhttp3.RequestBody
 import retrofit2.Call
@@ -220,7 +221,7 @@
             e.printStackTrace()
         }
         var uri = Uri.parse(file.absolutePath)
-        var fileUri = RequestBody.create(MediaType.parse("image/*"),file)
+        var fileUri = RequestBody.create("image/*".toMediaTypeOrNull(),file)
         //Log.d("fileUri",fileUri.toString())
         var fileToUpload = MultipartBody.Part.createFormData("fileToUpload",file.name,fileUri)
         var niK = RequestBody.create(MultipartBody.FORM, niknya!!)
@@ -231,64 +232,65 @@
         var lng = RequestBody.create(MultipartBody.FORM, LNG)
         var lupa_absen = RequestBody.create(MultipartBody.FORM,"")
         var face_id = RequestBody.create(MultipartBody.FORM, id.toString())
-        //API
-        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
-        val call = apiEndPoint.uploadImage(
-            fileToUpload,
-            niK,
-            tanggal,
-            jam_absen,
-            status_absen,
-            face_id,lupa_absen,lat,lng)
-        call?.enqueue(object : Callback<ImageResponse?> {
-            override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {
+            //API
+            val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
+            val call = apiEndPoint.uploadImage(
+                fileToUpload,
+                niK,
+                tanggal,
+                jam_absen,
+                status_absen,
+                face_id,lupa_absen,lat,lng)
+            call?.enqueue(object : Callback<ImageResponse?> {
+                override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {
 
-            }
-            override fun onResponse(
-                call: Call<ImageResponse?>,
-                response: Response<ImageResponse?>
-            ) {
-                val imageResponse = response.body()
-                if (imageResponse != null) {
-                    Log.d("Tidak dikenal",imageResponse.tidak_dikenal.toString())
-                    if(imageResponse.tidak_dikenal!=null) {
-                        if (imageResponse.tidak_dikenal) {
-                            file.delete()
-                            btn_detect.visibility = View.VISIBLE
-                            btnBack.visibility = View.GONE
-                            waitingDialog.dismiss()
-                            camera_view.start()
-                            graphic_overlay.clear()
-                            Toasty.info(
-                                this@PulangActivity,
-                                "Wajah Tidak Dikenal!",
-                                Toasty.LENGTH_SHORT
-                            ).show()
-                        } else {
-                            file.delete()
-                            btn_detect.visibility = View.GONE
-                            btnBack.visibility = View.VISIBLE
-                            waitingDialog.dismiss()
-                            Toasty.info(
-                                this@PulangActivity,
-                                "Wajah di kenali, Absen di daftar!",
-                                Toasty.LENGTH_SHORT
-                            ).show()
-                        }
-                    }else{
-                        file.delete()
-                        btn_detect.visibility=View.VISIBLE
-                        btnBack.visibility=View.GONE
-                        waitingDialog.dismiss()
-                        camera_view.start()
-                        graphic_overlay.clear()
-                        Toasty.info(this@PulangActivity,"Wajah Tidak Dikenal!", Toasty.LENGTH_SHORT).show()
+                }
+                override fun onResponse(
+                    call: Call<ImageResponse?>,
+                    response: Response<ImageResponse?>
+                ) {
+                    val imageResponse = response.body()
+                    if (imageResponse != null) {
+                        Log.d("Tidak dikenal",imageResponse.tidak_dikenal.toString())
+                        if(imageResponse.tidak_dikenal!=null) {
+                            if (imageResponse.tidak_dikenal) {
+                                file.delete()
+                                btn_detect.visibility = View.VISIBLE
+                                btnBack.visibility = View.GONE
+                                waitingDialog.dismiss()
+                                camera_view.start()
+                                graphic_overlay.clear()
+                                Toasty.info(
+                                    this@PulangActivity,
+                                    "Wajah Tidak Dikenal!",
+                                    Toasty.LENGTH_SHORT
+                                ).show()
+                            } else {
+                                file.delete()
+                                btn_detect.visibility = View.GONE
+                                btnBack.visibility = View.VISIBLE
+                                waitingDialog.dismiss()
+                                Toasty.info(
+                                    this@PulangActivity,
+                                    "Wajah di kenali, Absen di daftar!",
+                                    Toasty.LENGTH_SHORT
+                                ).show()
+                            }
+                        }else{
+                            file.delete()
+                            btn_detect.visibility=View.VISIBLE
+                            btnBack.visibility=View.GONE
+                            waitingDialog.dismiss()
+                            camera_view.start()
+                            graphic_overlay.clear()
+                            Toasty.info(this@PulangActivity,"Wajah Tidak Dikenal!", Toasty.LENGTH_SHORT).show()
 
-                    }
-                }
-            }
-        })
-        //API
+                        }
+                    }
+                }
+            })
+            //API
+
         return uri
     }
 
Index: app/src/main/java/com/misit/faceidchecklogptabp/LihatAbsenActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.View\r\nimport android.widget.LinearLayout\r\nimport android.widget.RelativeLayout\r\nimport androidx.appcompat.widget.SearchView\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\nimport com.google.android.gms.ads.AdListener\r\nimport com.google.android.gms.ads.AdRequest\r\nimport com.google.android.gms.ads.AdView\r\nimport com.google.android.gms.ads.MobileAds\r\nimport com.google.android.material.tabs.TabLayout\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Adapter.AbsenAdapter\r\nimport com.misit.faceidchecklogptabp.Response.DataItem\r\nimport com.misit.faceidchecklogptabp.Response.ListAbsenResponse\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_index.*\r\nimport kotlinx.android.synthetic.main.activity_lihat_absen.*\r\nimport org.joda.time.LocalDate\r\nimport org.joda.time.format.DateTimeFormat\r\nimport org.joda.time.format.DateTimeFormatter\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\nimport kotlin.math.abs\r\n\r\nclass LihatAbsenActivity : AppCompatActivity(), AbsenAdapter.OnItemClickListener {\r\n    private var adapter: AbsenAdapter? = null\r\n    private var absenList: MutableList<DataItem>? = null\r\n    private var absenListFilter: MutableList<DataItem>? = null\r\n    private var nik: String? = null\r\n    private var page : Int=1\r\n    private var visibleItem : Int=0\r\n    private var loading : Boolean=false\r\n    private var total : Int=0\r\n    private var pastVisibleItem : Int=0\r\n    lateinit var rvLoading:RelativeLayout\r\n    lateinit var rvListAbsen: RecyclerView\r\n    var curentPosition: Int=0\r\n    lateinit var swipeRefreshLayout: SwipeRefreshLayout\r\n    lateinit var mAdView : AdView\r\n    private var mFirebaseAnalytics: FirebaseAnalytics? = null\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        title = \"Lihat Data Telah Absen\"\r\n        setContentView(R.layout.activity_lihat_absen)\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        swipeRefreshLayout = findViewById(R.id.lihatPullRefresh) as SwipeRefreshLayout\r\n        ABSEN=\"Masuk\"\r\n        nik = intent.getStringExtra(NIK)\r\n        absenList = ArrayList()\r\n        absenListFilter = ArrayList()\r\n        adapter= AbsenAdapter(this,absenList!!)\r\n        rvLoading = findViewById(R.id.relativeLoading)\r\n        rvListAbsen = findViewById(R.id.rvListAbsen)\r\n        rvListAbsen.layoutManager = GridLayoutManager(this,2)\r\n        rvListAbsen.adapter= adapter\r\n        adapter?.setListener(this)\r\n        swipeRefreshLayout.setOnRefreshListener(object :SwipeRefreshLayout.OnRefreshListener{\r\n            override fun onRefresh() {\r\n                page=1\r\n                absenListFilter!!.clear()\r\n                absenList!!.clear()\r\n                loadAbsen(page, ABSEN)\r\n            }\r\n\r\n        })\r\n        MobileAds.initialize(this) {}\r\n\r\n        val tabLayout =  findViewById<View>(R.id.tabs) as TabLayout\r\n        tabLayout.addOnTabSelectedListener(object :TabLayout.OnTabSelectedListener{\r\n            override fun onTabReselected(p0: TabLayout.Tab?) {\r\n            }\r\n\r\n            override fun onTabUnselected(p0: TabLayout.Tab?) {\r\n            }\r\n\r\n            override fun onTabSelected(p0: TabLayout.Tab?) {\r\n                page=1\r\n                absenList?.clear()\r\n                absenListFilter?.clear()\r\n                if(p0!!.position==0){\r\n                    ABSEN=\"Masuk\"\r\n                    loadAbsen(page, ABSEN)\r\n                }else if(p0!!.position==1){\r\n                    ABSEN=\"Pulang\"\r\n                    loadAbsen(page, ABSEN)\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    override fun onResume() {\r\n        loadAbsen(page, ABSEN)\r\n        MobileAds.initialize(this) {}\r\n        mAdView = findViewById(R.id.adViewLIHATABSEN)\r\n        val adRequest = AdRequest.Builder().build()\r\n        mAdView.loadAd(adRequest)\r\n\r\n        mAdView.adListener = object: AdListener() {\r\n            override fun onAdLoaded() {\r\n                // Code to be executed when an ad finishes loading.\r\n            }\r\n\r\n            override fun onAdFailedToLoad(errorCode : Int) {\r\n                Log.d(\"errorCode\",errorCode.toString())\r\n                // Code to be executed when an ad request fails.\r\n            }\r\n\r\n            override fun onAdOpened() {\r\n                // Code to be executed when an ad opens an overlay that\r\n                // covers the screen.\r\n            }\r\n\r\n            override fun onAdClicked() {\r\n                // Code to be executed when the user clicks on an ad.\r\n            }\r\n\r\n            override fun onAdLeftApplication() {\r\n                // Code to be executed when the user has left the app.\r\n            }\r\n\r\n            override fun onAdClosed() {\r\n                // Code to be executed when the user is about to return\r\n                // to the app after tapping on an ad.\r\n            }\r\n        }\r\n\r\n        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);\r\n        super.onResume()\r\n    }\r\n    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\r\n        menuInflater.inflate(R.menu.menu_search,menu)\r\n        val menuItem = menu!!.findItem(R.id.searchAbsen)\r\n        val searchView = menuItem.actionView as SearchView\r\n\r\n        searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener{\r\n            override fun onQueryTextSubmit(query: String?): Boolean {\r\n                return true\r\n            }\r\n\r\n            override fun onQueryTextChange(newText: String?): Boolean {\r\n                newText.let {\r\n                    filter(it!!.toLowerCase())\r\n                }\r\n                return true\r\n            }\r\n        })\r\n        return super.onCreateOptionsMenu(menu)\r\n    }\r\n    private fun filter(search: String) {\r\n        if (search.isNotEmpty()){\r\n            absenList?.clear()\r\n            absenListFilter?.forEach {\r\n                var tanggal = LocalDate.parse(it.tanggal)\r\n                var fmt: DateTimeFormatter = DateTimeFormat.forPattern(\"d MMMM yyyy\")\r\n                var tgl = tanggal?.toString(fmt)?.toLowerCase(Locale.getDefault())\r\n                if(tgl!!.contains(search)){\r\n                    absenList?.add(it)\r\n                }\r\n                rvListAbsen.adapter?.notifyDataSetChanged()\r\n            }\r\n        }else{\r\n            absenList?.clear()\r\n            absenList?.addAll(absenListFilter!!)\r\n            rvListAbsen.adapter?.notifyDataSetChanged()\r\n        }\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return super.onSupportNavigateUp()\r\n    }\r\n    private fun loadAbsen(hal:Int,absen:String) {\r\n        swipeRefreshLayout.isRefreshing=true\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        val call = apiEndPoint.getAbsen(nik!!, absen,hal)\r\n        call?.enqueue(object : Callback<ListAbsenResponse?> {\r\n            override fun onFailure(call: Call<ListAbsenResponse?>, t: Throwable) {\r\n                swipeRefreshLayout.isRefreshing=false\r\n\r\n            }\r\n            override fun onResponse(\r\n                call: Call<ListAbsenResponse?>,\r\n                response: Response<ListAbsenResponse?>\r\n            ) {\r\n                val absenRes = response.body()\r\n                if(absenRes!=null){\r\n                    swipeRefreshLayout.isRefreshing=false\r\n                    rvLoading.visibility=View.GONE\r\n                    loading=true\r\n                    if(absenList?.size==0){\r\n                        absenRes.listAbsen?.data?.forEach {\r\n                            if(it!!.status== absen){\r\n                                absenListFilter?.add(it!!)\r\n                                absenList?.add(it!!)\r\n                            }\r\n                        }\r\n\r\n                        adapter?.notifyDataSetChanged()\r\n                    }else{\r\n                        curentPosition = (rvListAbsen.layoutManager as GridLayoutManager).findLastVisibleItemPosition()\r\n                        absenRes.listAbsen?.data?.forEach {\r\n                            if(it!!.status==absen){\r\n                                absenListFilter?.add(it!!)\r\n                                absenList?.add(it!!)\r\n                            }\r\n                        }\r\n                        adapter?.notifyDataSetChanged()\r\n                    }\r\n                    rvListAbsen.addOnScrollListener(object:RecyclerView.OnScrollListener(){\r\n                        override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {\r\n                            super.onScrolled(recyclerView, dx, dy)\r\n                            if(dy>0){\r\n                                visibleItem = (recyclerView.layoutManager as GridLayoutManager).childCount\r\n                                total=(recyclerView.layoutManager as GridLayoutManager).itemCount\r\n                                pastVisibleItem=(recyclerView.layoutManager as GridLayoutManager).findFirstVisibleItemPosition()\r\n                                if(loading) {\r\n                                    if ((visibleItem + pastVisibleItem) >= total) {\r\n                                        //Toasty.info(this@LihatAbsenActivity,visibleItem.toString(),Toasty.LENGTH_SHORT).show()\r\n                                        //rvLoading.visibility=View.VISIBLE\r\n\r\n                                        if (page < absenRes.listAbsen?.lastPage!!){\r\n                                            loading = false\r\n                                            page++\r\n                                            loadAbsen(page, ABSEN)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    override fun onItemClick(nik: String?,nama: String?,gambar: String?,tgl: String?,jam: String?,status: String?,lat: String?,lng: String?) {\r\n        var intent = Intent(this@LihatAbsenActivity,ViewImageActivity::class.java)\r\n        intent.putExtra(ViewImageActivity.NIK,nik)\r\n        intent.putExtra(ViewImageActivity.GAMBAR,gambar)\r\n        intent.putExtra(ViewImageActivity.NAMA,nama)\r\n        intent.putExtra(ViewImageActivity.TGL,tgl)\r\n        intent.putExtra(ViewImageActivity.JAM,jam)\r\n        intent.putExtra(ViewImageActivity.STATUS,status)\r\n        intent.putExtra(ViewImageActivity.LAT,lat)\r\n        intent.putExtra(ViewImageActivity.LNG,lng)\r\n        startActivity(intent)\r\n    }\r\n\r\n    companion object{\r\n        var NIK = \"NIK\"\r\n        var ABSEN = \"Masuk\"\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/LihatAbsenActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/LihatAbsenActivity.kt	(date 1633069960326)
@@ -190,68 +190,69 @@
         return super.onSupportNavigateUp()
     }
     private fun loadAbsen(hal:Int,absen:String) {
-        swipeRefreshLayout.isRefreshing=true
-        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
-        val call = apiEndPoint.getAbsen(nik!!, absen,hal)
-        call?.enqueue(object : Callback<ListAbsenResponse?> {
-            override fun onFailure(call: Call<ListAbsenResponse?>, t: Throwable) {
-                swipeRefreshLayout.isRefreshing=false
+            swipeRefreshLayout.isRefreshing=true
+            val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
+            val call = apiEndPoint.getAbsen(nik!!, absen,hal)
+            call?.enqueue(object : Callback<ListAbsenResponse?> {
+                override fun onFailure(call: Call<ListAbsenResponse?>, t: Throwable) {
+                    swipeRefreshLayout.isRefreshing=false
 
-            }
-            override fun onResponse(
-                call: Call<ListAbsenResponse?>,
-                response: Response<ListAbsenResponse?>
-            ) {
-                val absenRes = response.body()
-                if(absenRes!=null){
-                    swipeRefreshLayout.isRefreshing=false
-                    rvLoading.visibility=View.GONE
-                    loading=true
-                    if(absenList?.size==0){
-                        absenRes.listAbsen?.data?.forEach {
-                            if(it!!.status== absen){
-                                absenListFilter?.add(it!!)
-                                absenList?.add(it!!)
-                            }
-                        }
+                }
+                override fun onResponse(
+                    call: Call<ListAbsenResponse?>,
+                    response: Response<ListAbsenResponse?>
+                ) {
+                    val absenRes = response.body()
+                    if(absenRes!=null){
+                        swipeRefreshLayout.isRefreshing=false
+                        rvLoading.visibility=View.GONE
+                        loading=true
+                        if(absenList?.size==0){
+                            absenRes.listAbsen?.data?.forEach {
+                                if(it!!.status== absen){
+                                    absenListFilter?.add(it!!)
+                                    absenList?.add(it!!)
+                                }
+                            }
 
-                        adapter?.notifyDataSetChanged()
-                    }else{
-                        curentPosition = (rvListAbsen.layoutManager as GridLayoutManager).findLastVisibleItemPosition()
-                        absenRes.listAbsen?.data?.forEach {
-                            if(it!!.status==absen){
-                                absenListFilter?.add(it!!)
-                                absenList?.add(it!!)
-                            }
-                        }
-                        adapter?.notifyDataSetChanged()
-                    }
-                    rvListAbsen.addOnScrollListener(object:RecyclerView.OnScrollListener(){
-                        override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {
-                            super.onScrolled(recyclerView, dx, dy)
-                            if(dy>0){
-                                visibleItem = (recyclerView.layoutManager as GridLayoutManager).childCount
-                                total=(recyclerView.layoutManager as GridLayoutManager).itemCount
-                                pastVisibleItem=(recyclerView.layoutManager as GridLayoutManager).findFirstVisibleItemPosition()
-                                if(loading) {
-                                    if ((visibleItem + pastVisibleItem) >= total) {
-                                        //Toasty.info(this@LihatAbsenActivity,visibleItem.toString(),Toasty.LENGTH_SHORT).show()
-                                        //rvLoading.visibility=View.VISIBLE
+                            adapter?.notifyDataSetChanged()
+                        }else{
+                            curentPosition = (rvListAbsen.layoutManager as GridLayoutManager).findLastVisibleItemPosition()
+                            absenRes.listAbsen?.data?.forEach {
+                                if(it!!.status==absen){
+                                    absenListFilter?.add(it!!)
+                                    absenList?.add(it!!)
+                                }
+                            }
+                            adapter?.notifyDataSetChanged()
+                        }
+                        rvListAbsen.addOnScrollListener(object:RecyclerView.OnScrollListener(){
+                            override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {
+                                super.onScrolled(recyclerView, dx, dy)
+                                if(dy>0){
+                                    visibleItem = (recyclerView.layoutManager as GridLayoutManager).childCount
+                                    total=(recyclerView.layoutManager as GridLayoutManager).itemCount
+                                    pastVisibleItem=(recyclerView.layoutManager as GridLayoutManager).findFirstVisibleItemPosition()
+                                    if(loading) {
+                                        if ((visibleItem + pastVisibleItem) >= total) {
+                                            //Toasty.info(this@LihatAbsenActivity,visibleItem.toString(),Toasty.LENGTH_SHORT).show()
+                                            //rvLoading.visibility=View.VISIBLE
 
-                                        if (page < absenRes.listAbsen?.lastPage!!){
-                                            loading = false
-                                            page++
-                                            loadAbsen(page, ABSEN)
-                                        }
-                                    }
-                                }
-                            }
-                        }
-                    })
-                }
-            }
+                                            if (page < absenRes.listAbsen?.lastPage!!){
+                                                loading = false
+                                                page++
+                                                loadAbsen(page, ABSEN)
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        })
+                    }
+                }
 
-        })
+            })
+
     }
 
     override fun onItemClick(nik: String?,nama: String?,gambar: String?,tgl: String?,jam: String?,status: String?,lat: String?,lng: String?) {
Index: app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/DaftarWajahActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp.Absen.v1\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.ContextWrapper\r\nimport android.graphics.Bitmap\r\nimport android.graphics.PointF\r\nimport android.location.Location\r\nimport android.location.LocationManager\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.google.mlkit.vision.common.InputImage\r\nimport com.google.mlkit.vision.face.*\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Helper.RectOverlay\r\nimport com.misit.faceidchecklogptabp.R\r\nimport com.misit.faceidchecklogptabp.Response.ImageResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport com.wonderkiln.camerakit.*\r\nimport dmax.dialog.SpotsDialog\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_daftar_wajah.*\r\nimport okhttp3.MediaType\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.io.IOException\r\nimport java.io.OutputStream\r\nimport java.util.*\r\n\r\n\r\nclass DaftarWajahActivity : AppCompatActivity() {\r\n\r\n    lateinit var waitingDialog: AlertDialog\r\n    private var bitmap: Bitmap?=null\r\n    private var bitmap1: Bitmap?=null\r\n    private var niknya:String?=null\r\n    lateinit var  rectOverlay: RectOverlay\r\n    lateinit var mouthPos:MutableList<PointF>\r\n    private var mLocationManager : LocationManager?=null\r\n    private var mLocation : Location?= null\r\n    private var minScan = 1\r\n    private var maxScan = 3\r\n    private var filename = \"\"\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_daftar_wajah)\r\n        mouthPos = ArrayList()\r\n\r\n        waitingDialog = SpotsDialog.Builder().setContext(this)\r\n            .setMessage(\"Please Wait...\")\r\n            .setCancelable(false)\r\n            .build()\r\n//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n//            getWindow().setFlags(\r\n//                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,\r\n//                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS)\r\n//        }\r\n        minScan=1\r\n        btn_detect.setOnClickListener{\r\n            camera_view.captureImage()\r\n            btn_detect.isEnabled=false\r\n//            btn_detect.isClickable=false\r\n            //btnSave.visibility= View.GONE\r\n\r\n        }\r\n        btn_active_camera.setOnClickListener {\r\n            btn_detect.isEnabled=true\r\n            btn_detect.isClickable=true\r\n            camera_view.start()\r\n            graphic_overlay.clear()\r\n            btn_active_camera.visibility= View.GONE\r\n            btn_detect.visibility=View.VISIBLE\r\n        }\r\n\r\n        btnToggle.setOnClickListener {\r\n            //            if(camera_view.isFacingBack) {\r\n//                btnToggle.text=\"Camera Belakang\"\r\n//            }else{\r\n//                btnToggle.text=\"Camera Depan\"\r\n//            }\r\n            camera_view.toggleFacing()\r\n        }\r\n        btnBack.setOnClickListener {\r\n            onBackPressed()\r\n        }\r\n        camera_view.addCameraKitListener(object: CameraKitEventListener {\r\n            override fun onVideo(p0: CameraKitVideo?) {\r\n\r\n            }\r\n\r\n            override fun onEvent(p0: CameraKitEvent?) {\r\n            }\r\n\r\n            override fun onImage(p0: CameraKitImage?) {\r\n\r\n                waitingDialog.show()\r\n\r\n                bitmap = p0!!.bitmap\r\n                bitmap1 = Bitmap.createScaledBitmap(bitmap!!,240,240,false)\r\n\r\n                camera_view.stop()\r\n                runFaceDetectorNew(bitmap1)\r\n            }\r\n\r\n            override fun onError(p0: CameraKitError?) {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    override fun onResume() {\r\n        super.onResume()\r\n        PrefsUtil.initInstance(this)\r\n        if(PrefsUtil.getInstance().getBooleanState(PrefsUtil.IS_LOGGED_IN,true)){\r\n            NIK = PrefsUtil.getInstance().getStringState(PrefsUtil.NIK,\"\")\r\n        }\r\n        niknya = NIK\r\n        camera_view.start()\r\n        if(minScan<=maxScan){\r\n            btn_detect.isClickable=true\r\n            btn_detect.isEnabled=true\r\n            btn_detect.text = \"Scan Wajah \"+minScan.toString()\r\n            filename = \"wajah_\"+minScan\r\n            graphic_overlay.clear()\r\n            btnBack.visibility= View.GONE\r\n            btn_detect.visibility =View.VISIBLE\r\n        }else{\r\n            filename = \"\"\r\n            btn_detect.text = \"Wajah Sudah Di Daftarkan\"\r\n            btn_detect.isClickable=false\r\n            btn_detect.isEnabled=false\r\n            btn_detect.visibility =View.GONE\r\n            btnBack.visibility= View.VISIBLE\r\n            graphic_overlay.clear()\r\n        }\r\n        if(camera_view.isFacingBack){\r\n            camera_view.toggleFacing()\r\n//            btnToggle.text=\"Camera Belakang\"\r\n        }else{\r\n//            btnToggle.text=\"Camera Depan\"\r\n        }\r\n    }\r\n    override fun onPause() {\r\n        super.onPause()\r\n        camera_view.stop()\r\n    }\r\n    private fun saveImageToInternalStorage(bitmap: Bitmap?,id:Int): Uri {\r\n\r\n        val wrapper = ContextWrapper(applicationContext)\r\n        var file = wrapper.getDir(\"images\", Context.MODE_PRIVATE)\r\n        file = File(file, \"${filename}.jpg\")\r\n        try {\r\n            // Get the file output stream\r\n            val stream: OutputStream = FileOutputStream(file)\r\n            //var uri = Uri.parse(file.absolutePath)\r\n            // Compress bitmap\r\n\r\n            bitmap!!.compress(Bitmap.CompressFormat.JPEG, 100, stream)\r\n            // Flush the stream\r\n            stream.flush()\r\n            // Close stream\r\n            stream.close()\r\n        } catch (e: IOException){ // Catch the exception\r\n            e.printStackTrace()\r\n        }\r\n        var uri = Uri.parse(file.absolutePath)\r\n        var fileUri = RequestBody.create(MediaType.parse(\"image/*\"),file)\r\n        var niK = RequestBody.create(MultipartBody.FORM, niknya!!)\r\n        var fileToUpload = MultipartBody.Part.createFormData(\"fileToUpload\",file.name,fileUri)\r\n\r\n\r\n        //API\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        val call = apiEndPoint.daftarkanWajah(\r\n            fileToUpload,\r\n            niK\r\n        )\r\n        call.enqueue(object : Callback<ImageResponse?> {\r\n                override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {\r\n                    Toasty.info(this@DaftarWajahActivity,\"$t\", Toasty.LENGTH_SHORT).show()\r\n                }\r\n                override fun onResponse(\r\n                    call: Call<ImageResponse?>,\r\n                    response: Response<ImageResponse?>\r\n                ) {\r\n                    val imageResponse = response.body()\r\n                    if (imageResponse != null) {\r\n                        file.delete()\r\n//                        btn_detect.visibility=View.GONE\r\n//                        btnBack.visibility=View.VISIBLE\r\n                        waitingDialog.dismiss()\r\n                        Toasty.info(this@DaftarWajahActivity,\"Wajah ${minScan} di daftar!\", Toasty.LENGTH_SHORT).show()\r\n                        minScan++\r\n                        camera_view.start()\r\n                        if(minScan<=maxScan){\r\n                            btn_detect.isClickable=true\r\n                            btn_detect.isEnabled=true\r\n                            btn_detect.text = \"Scan Wajah \"+minScan.toString()\r\n                            filename = \"wajah_\"+minScan\r\n                            graphic_overlay.clear()\r\n                        }else{\r\n                            filename = \"\"\r\n                            btn_detect.text = \"Wajah Sudah Di Daftarkan\"\r\n                            btn_detect.isClickable=false\r\n                            btn_detect.isEnabled=false\r\n                            graphic_overlay.clear()\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        //API\r\n        return uri\r\n    }\r\n    private fun runFaceDetectorNew(bitmap: Bitmap?) {\r\n        val image = InputImage.fromBitmap(bitmap, 0)\r\n        val realTimeOpts = FaceDetectorOptions.Builder()\r\n            .setContourMode(FaceDetectorOptions.CONTOUR_MODE_ALL)\r\n            .build()\r\n        val detector = FaceDetection.getClient(realTimeOpts)\r\n\r\n        val result = detector.process(image!!)\r\n            .addOnSuccessListener { result ->\r\n                // Task completed successfully\r\n                // ...\r\n                progressResult(result)\r\n\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Task failed with an exception\r\n                // ...\r\n                Toast.makeText(this@DaftarWajahActivity,e.message, Toast.LENGTH_SHORT).show()\r\n            }\r\n    }\r\n    fun progressResult(result:List<Face>){\r\n        var count=0\r\n        var id=0\r\n        for (face in result){\r\n            val bounds = face.boundingBox\r\n\r\n            val leftEar = face.getLandmark(FaceLandmark.LEFT_EAR)\r\n            leftEar?.let {\r\n                //val leftEarPos = leftEar.position\r\n            }\r\n\r\n            if (face.smilingProbability != null) {\r\n            }\r\n            if (face.rightEyeOpenProbability != null) {\r\n            }\r\n            val upperLipBottomContour = face.getContour(FaceContour.UPPER_LIP_BOTTOM).points\r\n\r\n            upperLipBottomContour.let {\r\n                mouthPos.addAll(it)\r\n            }\r\n\r\n            if (face.trackingId!= null) {\r\n                id=face.trackingId\r\n            }\r\n\r\n            rectOverlay = RectOverlay(graphic_overlay,bounds)\r\n//            graphic_overlay.add(rectOverlay)\r\n            count++\r\n        }\r\n        if(count>0){\r\n            //btnSave.visibility= View.VISIBLE\r\n            //Toast.makeText(this,\"$uri\",Toast.LENGTH_SHORT).show()\r\n            waitingDialog.dismiss()\r\n            if(mouthPos.isNotEmpty()){\r\n                saveImageToInternalStorage(bitmap1,id)\r\n                graphic_overlay.add(rectOverlay)\r\n//                Toast.makeText(this@PulangActivity,String.format(\" ${mouth_bottomPos}\"),Toast.LENGTH_LONG).show()\r\n            }else{\r\n                Toasty.error(this@DaftarWajahActivity,\r\n                    \"Wajah Tidak Terdeteksi! \" +\r\n                            \"Harap Membuka Masker atau \" +\r\n                            \"Pelindung Wajah dan \" +\r\n                            \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                    .show()\r\n                btn_active_camera.visibility=View.VISIBLE\r\n                btn_detect.visibility=View.GONE\r\n                waitingDialog.dismiss()\r\n\r\n\r\n            }\r\n        }else{\r\n            waitingDialog.dismiss()\r\n            Toasty.error(this@DaftarWajahActivity,\r\n                \"Wajah Tidak Terdeteksi! \" +\r\n                        \"Harap Membuka Masker atau \" +\r\n                        \"Pelindung Wajah dan \" +\r\n                        \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                .show()\r\n//            waitingDialog.dismiss()\r\n            btn_active_camera.visibility=View.VISIBLE\r\n            btn_detect.visibility=View.GONE\r\n//            Toasty.info(this@MasukActivity,\"Wajah Tidak Terdeteksi\", Toasty.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n    companion object{\r\n        var NIK = \"NIK\"\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/DaftarWajahActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/DaftarWajahActivity.kt	(date 1633075735212)
@@ -25,6 +25,7 @@
 import es.dmoral.toasty.Toasty
 import kotlinx.android.synthetic.main.activity_daftar_wajah.*
 import okhttp3.MediaType
+import okhttp3.MediaType.Companion.toMediaTypeOrNull
 import okhttp3.MultipartBody
 import okhttp3.RequestBody
 import retrofit2.Call
@@ -173,7 +174,7 @@
             e.printStackTrace()
         }
         var uri = Uri.parse(file.absolutePath)
-        var fileUri = RequestBody.create(MediaType.parse("image/*"),file)
+        var fileUri = RequestBody.create("image/*".toMediaTypeOrNull(),file)
         var niK = RequestBody.create(MultipartBody.FORM, niknya!!)
         var fileToUpload = MultipartBody.Part.createFormData("fileToUpload",file.name,fileUri)
 
Index: app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/LupaPulangActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp.Absen.v1\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.ContextWrapper\r\nimport android.graphics.Bitmap\r\nimport android.graphics.PointF\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.google.android.gms.ads.AdView\r\nimport com.google.mlkit.vision.common.InputImage\r\nimport com.google.mlkit.vision.face.*\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Helper.RectOverlay\r\nimport com.misit.faceidchecklogptabp.R\r\nimport com.misit.faceidchecklogptabp.Response.ImageResponse\r\nimport com.misit.faceidchecklogptabp.Utils.PrefsUtil\r\nimport com.wonderkiln.camerakit.*\r\nimport dmax.dialog.SpotsDialog\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_lupa_pulang.*\r\nimport kotlinx.android.synthetic.main.activity_lupa_pulang.btnBack\r\nimport kotlinx.android.synthetic.main.activity_lupa_pulang.btnToggle\r\nimport kotlinx.android.synthetic.main.activity_lupa_pulang.btn_active_camera\r\nimport kotlinx.android.synthetic.main.activity_lupa_pulang.btn_detect\r\nimport kotlinx.android.synthetic.main.activity_lupa_pulang.camera_view\r\nimport kotlinx.android.synthetic.main.activity_lupa_pulang.graphic_overlay\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.io.IOException\r\nimport java.io.OutputStream\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\nimport okhttp3.MediaType\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\n\r\nclass LupaPulangActivity : AppCompatActivity() {\r\n\r\n    lateinit var waitingDialog: AlertDialog\r\n    private var bitmap: Bitmap?=null\r\n    private var niknya:String?=null\r\n    lateinit var  rectOverlay: RectOverlay\r\n    private var tglLupaAbsen:String?=null\r\n    lateinit var mouthPos:MutableList<PointF>\r\n    lateinit var leftEarPos:PointF\r\n    lateinit var leftEyPos:MutableList<PointF>\r\n    lateinit var rightEarPos:PointF\r\n    lateinit var mAdView : AdView\r\n    var count=0\r\n    var id=0\r\n    var smileProb=0f\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_lupa_pulang)\r\n\r\n        PrefsUtil.initInstance(this)\r\n        if(PrefsUtil.getInstance().getBooleanState(PrefsUtil.IS_LOGGED_IN,true)) {\r\n            niknya = PrefsUtil.getInstance().getStringState(PrefsUtil.NIK,\"\")\r\n        }\r\n        LAT = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LAT,\"\")\r\n        LNG = PrefsUtil.getInstance()\r\n            .getStringState(PrefsUtil.CURRENT_LNG,\"\")\r\n\r\n//        Toasty.info(this,\"Lat : ${MasukActivity.LAT}, Lng : ${MasukActivity.LNG}\",Toasty.LENGTH_LONG).show()\r\n\r\n        tglLupaAbsen = intent.getStringExtra(TGL_LUPA_ABSEN)\r\n\r\n        //        SystemUtils.fullscreen(window,actionBar!!)\r\n        waitingDialog = SpotsDialog.Builder().setContext(this)\r\n            .setMessage(\"Please Wait...\")\r\n            .setCancelable(false)\r\n            .build()\r\n        mouthPos = ArrayList()\r\n        leftEyPos = ArrayList()\r\n\r\n//        leftEyPos=ArrayList()\r\n//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n////            getWindow().setFlags(\r\n////                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,\r\n////                WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS)\r\n//            window.decorView.apply {\r\n//                // Hide both the navigation bar and the status bar.\r\n//                // SYSTEM_UI_FLAG_FULLSCREEN is only available on Android 4.1 and higher, but as\r\n//                // a general rule, you should design your app to hide the status bar whenever you\r\n//                // hide the navigation bar.\r\n//                systemUiVisibility = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\r\n////                or View.SYSTEM_UI_FLAG_FULLSCREEN\r\n//            }\r\n//\r\n//        }\r\n//        niknya = intent.getStringExtra(NIK)\r\n        btn_detect.setOnClickListener{\r\n            camera_view.captureImage()\r\n            btn_detect.isEnabled=false\r\n            btn_detect.isClickable=false\r\n//            btnSave.visibility= View.GONE\r\n        }\r\n        btn_active_camera.setOnClickListener {\r\n            btn_detect.isEnabled=true\r\n            btn_detect.isClickable=true\r\n            camera_view.start()\r\n            graphic_overlay.clear()\r\n            btn_active_camera.visibility=View.GONE\r\n            btn_detect.visibility=View.VISIBLE\r\n\r\n        }\r\n        btnToggle.setOnClickListener {\r\n            //            if(camera_view.isFacingBack) {\r\n//                btnToggle.text=\"Camera Belakang\"\r\n//            }else{\r\n//                btnToggle.text=\"Camera Depan\"\r\n//            }\r\n            camera_view.toggleFacing()\r\n        }\r\n\r\n        btnBack.setOnClickListener {\r\n            onBackPressed()\r\n        }\r\n        camera_view.addCameraKitListener(object: CameraKitEventListener {\r\n            override fun onVideo(p0: CameraKitVideo?) {\r\n\r\n            }\r\n\r\n            override fun onEvent(p0: CameraKitEvent?) {\r\n            }\r\n\r\n            override fun onImage(p0: CameraKitImage?) {\r\n\r\n                waitingDialog.show()\r\n\r\n                bitmap = p0!!.bitmap\r\n                var bitmap1 = Bitmap.createScaledBitmap(bitmap!!,camera_view.width,camera_view.height,false)\r\n\r\n                camera_view.stop()\r\n                runFaceDetectorNew(bitmap1)\r\n            }\r\n\r\n            override fun onError(p0: CameraKitError?) {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        camera_view.start()\r\n        if(camera_view.isFacingBack){\r\n            camera_view.toggleFacing()\r\n//            btnToggle.text=\"Camera Belakang\"\r\n        }else{\r\n//            btnToggle.text=\"Camera Depan\"\r\n        }\r\n    }\r\n    override fun onPause() {\r\n        super.onPause()\r\n        camera_view.stop()\r\n    }\r\n    private fun saveImageToInternalStorage(bitmap: Bitmap?,id:Int): Uri {\r\n        var waktu = Date()\r\n        val cal = Calendar.getInstance()\r\n        cal.time = waktu\r\n        val simpleFormat = SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault())\r\n        var tgl = \"${simpleFormat.format(cal.time)}\"\r\n        var jam = \"${cal.get(Calendar.HOUR_OF_DAY)}${cal.get(Calendar.MINUTE)}${cal.get(Calendar.SECOND)}\"\r\n        var pukul = \"${cal.get(Calendar.HOUR_OF_DAY)}:${cal.get(Calendar.MINUTE)}:${cal.get(Calendar.SECOND)}\"\r\n        val wrapper = ContextWrapper(applicationContext)\r\n        var file = wrapper.getDir(\"images\", Context.MODE_PRIVATE)\r\n        file = File(file, niknya+\"_Pulang_${tgl}__${jam}.jpg\")\r\n        try {\r\n            // Get the file output stream\r\n            val stream: OutputStream = FileOutputStream(file)\r\n            //var uri = Uri.parse(file.absolutePath)\r\n            // Compress bitmap\r\n            bitmap!!.compress(Bitmap.CompressFormat.JPEG, 20, stream)\r\n            // Flush the stream\r\n            stream.flush()\r\n            // Close stream\r\n            stream.close()\r\n        } catch (e: IOException){ // Catch the exception\r\n            e.printStackTrace()\r\n        }\r\n        var uri = Uri.parse(file.absolutePath)\r\n        var fileUri = RequestBody.create(MediaType.parse(\"image/*\"),file)\r\n        //Log.d(\"fileUri\",fileUri.toString())\r\n        var fileToUpload = MultipartBody.Part.createFormData(\"fileToUpload\",file.name,fileUri)\r\n        var niK = RequestBody.create(MultipartBody.FORM, niknya!!)\r\n        var tanggal = RequestBody.create(MultipartBody.FORM, tglLupaAbsen!!)\r\n        var jam_absen = RequestBody.create(MultipartBody.FORM, pukul)\r\n        var status_absen = RequestBody.create(MultipartBody.FORM, \"Pulang\")\r\n        var lat = RequestBody.create(MultipartBody.FORM, LAT)\r\n        var lng = RequestBody.create(MultipartBody.FORM, LNG)\r\n        var lupa_absen = RequestBody.create(MultipartBody.FORM,\"Lupa Absen Pulang\")\r\n        var face_id = RequestBody.create(MultipartBody.FORM, id.toString())\r\n        //API\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        val call = apiEndPoint.uploadImage(\r\n            fileToUpload,\r\n            niK,\r\n            tanggal,\r\n            jam_absen,\r\n            status_absen,\r\n            face_id,lupa_absen,lat,lng)\r\n        call.enqueue(object : Callback<ImageResponse?> {\r\n            override fun onFailure(call: Call<ImageResponse?>, t: Throwable) {\r\n\r\n            }\r\n            override fun onResponse(\r\n                call: Call<ImageResponse?>,\r\n                response: Response<ImageResponse?>\r\n            ) {\r\n                val imageResponse = response.body()\r\n                if (imageResponse != null) {\r\n                    if(imageResponse.tidak_dikenal){\r\n                        file.delete()\r\n                        btn_detect.visibility=View.VISIBLE\r\n                        btnBack.visibility=View.GONE\r\n                        waitingDialog.dismiss()\r\n                        camera_view.start()\r\n                        graphic_overlay.clear()\r\n                        Toasty.info(this@LupaPulangActivity,\"Wajah Tidak Dikenal!\", Toasty.LENGTH_SHORT).show()\r\n                    }else{\r\n                        file.delete()\r\n                        btn_detect.visibility=View.GONE\r\n                        btnBack.visibility=View.VISIBLE\r\n                        waitingDialog.dismiss()\r\n                        Toasty.info(this@LupaPulangActivity,\"Wajah di kenali, Absen di daftar!\", Toasty.LENGTH_SHORT).show()\r\n                    }\r\n               }\r\n            }\r\n        })\r\n        //API\r\n        return uri\r\n    }\r\n\r\n    private fun runFaceDetectorNew(bitmap: Bitmap?) {\r\n        val image = InputImage.fromBitmap(bitmap, 0)\r\n        val realTimeOpts = FaceDetectorOptions.Builder()\r\n            .setContourMode(FaceDetectorOptions.CONTOUR_MODE_ALL)\r\n            .build()\r\n        val detector = FaceDetection.getClient(realTimeOpts)\r\n\r\n        val result = detector.process(image!!)\r\n            .addOnSuccessListener { result ->\r\n                // Task completed successfully\r\n                // ...\r\n                progressResult(result)\r\n\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Task failed with an exception\r\n                // ...\r\n                Toast.makeText(this@LupaPulangActivity,e.message, Toast.LENGTH_SHORT).show()\r\n            }\r\n    }\r\n    fun progressResult(result:List<Face>){\r\n\r\n        mouthPos.clear()\r\n//        leftEyPos.clear()\r\n        for (face in result){\r\n\r\n            val bounds = face.boundingBox\r\n//            val rotY = face.headEulerAngleY // Head is rotated to the right rotY degrees\r\n//            val rotZ = face.headEulerAngleZ // Head is tilted sideways rotZ degrees\r\n\r\n            // If landmark detection was enabled (mouth, ears, eyes, cheeks, and\r\n            // nose available):\r\n            val leftEar = face.getLandmark(FaceLandmark.LEFT_EAR)\r\n            val rightEar = face.getLandmark(FaceLandmark.RIGHT_EAR)\r\n            leftEar?.let {\r\n//                leftEarPos = leftEar.position\r\n            }\r\n            rightEar?.let {\r\n//                rightEarPos = rightEar.position\r\n            }\r\n            val mouth_bottom = face.getLandmark(FaceLandmark.MOUTH_BOTTOM)\r\n            mouth_bottom?.let {\r\n                //mouth_bottomPos = mouth_bottom!!.position!!\r\n\r\n            }\r\n            // If contour detection was enabled:\r\n            val leftEyeContour = face.getContour(FaceContour.LEFT_EYE).points\r\n            leftEyeContour.let {\r\n//                leftEyPos.addAll(it)\r\n            }\r\n//            val rightEyeContour = face.getContour(FirebaseVisionFaceContour.RIGHT_EYE).points\r\n            val upperLipBottomContour = face.getContour(FaceContour.UPPER_LIP_BOTTOM).points\r\n            upperLipBottomContour.let {\r\n                mouthPos.addAll(it)\r\n            }\r\n            // If classification was enabled:\r\n            if (face.smilingProbability != null) {\r\n                smileProb = face.smilingProbability\r\n            }\r\n            if (face.rightEyeOpenProbability != null) {\r\n//                val rightEyeOpenProb = face.rightEyeOpenProbability\r\n            }\r\n\r\n            // If face tracking was enabled:\r\n            if (face.trackingId != null) {\r\n                id = face.trackingId\r\n//                saveImageToInternalStorage(bitmap,id)\r\n            }\r\n            rectOverlay = RectOverlay(graphic_overlay,bounds)\r\n\r\n            count++\r\n        }\r\n        if(count>0){\r\n            //btnSave.visibility= View.VISIBLE\r\n            //btnSave.visibility= View.VISIBLE\r\n\r\n            waitingDialog.dismiss()\r\n            if(mouthPos.isNotEmpty()){\r\n                saveImageToInternalStorage(bitmap,id)\r\n                graphic_overlay.add(rectOverlay)\r\n//                Toasty.info(this@PulangActivity,\" LEFT: ${leftEarPos.toString()} \" +\r\n//                        \"|\" +\r\n//                        \" RIGHT: ${rightEarPos.toString()}\", Toasty.LENGTH_SHORT).show()\r\n//                Toasty.info(this@PulangActivity,\" ${leftEarPos.toString()}\", Toasty.LENGTH_SHORT).show()\r\n\r\n//                Toast.makeText(this@PulangActivity,String.format(\" ${leftEarPos}\"),Toast.LENGTH_LONG).show()\r\n            }else{\r\n                Toasty.error(this@LupaPulangActivity,\r\n                    \"Wajah Tidak Terdeteksi! \" +\r\n                            \"Harap Membuka Masker atau \" +\r\n                            \"Pelindung Wajah dan \" +\r\n                            \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                    .show()\r\n\r\n                btn_active_camera.visibility=View.VISIBLE\r\n                btn_detect.visibility=View.GONE\r\n                waitingDialog.dismiss()\r\n            }\r\n\r\n            //Toast.makeText(this,\"$uri\",Toast.LENGTH_SHORT).show()\r\n        }else{\r\n            waitingDialog.dismiss()\r\n            Toasty.error(this@LupaPulangActivity,\r\n                \"Wajah Tidak Terdeteksi! \" +\r\n                        \"Harap Membuka Masker atau \" +\r\n                        \"Pelindung Wajah dan \" +\r\n                        \"Tidak Boleh Lebih dari satu Wajah .!\")\r\n                .show()\r\n\r\n            btn_active_camera.visibility= View.VISIBLE\r\n            btn_detect.visibility=View.GONE\r\n//            Toasty.info(this@PulangActivity,\"Wajah Tidak Terdeteksi\", Toasty.LENGTH_SHORT).show()\r\n        }\r\n\r\n    }\r\n\r\n    companion object{\r\n        var NIK = \"NIK\"\r\n        var TGL_LUPA_ABSEN = \"TGL_LUPA_ABSEN\"\r\n        var LAT = \"\"\r\n        var LNG = \"\"\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/LupaPulangActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/Absen/v1/LupaPulangActivity.kt	(date 1633075831306)
@@ -37,6 +37,7 @@
 import java.util.*
 import kotlin.collections.ArrayList
 import okhttp3.MediaType
+import okhttp3.MediaType.Companion.toMediaTypeOrNull
 import okhttp3.MultipartBody
 import okhttp3.RequestBody
 import retrofit2.Call
@@ -192,7 +193,7 @@
             e.printStackTrace()
         }
         var uri = Uri.parse(file.absolutePath)
-        var fileUri = RequestBody.create(MediaType.parse("image/*"),file)
+        var fileUri = RequestBody.create("image/*".toMediaTypeOrNull(),file)
         //Log.d("fileUri",fileUri.toString())
         var fileToUpload = MultipartBody.Part.createFormData("fileToUpload",file.name,fileUri)
         var niK = RequestBody.create(MultipartBody.FORM, niknya!!)
Index: app/src/main/java/com/misit/faceidchecklogptabp/ListAbsenActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.misit.faceidchecklogptabp\r\n\r\nimport android.app.DatePickerDialog\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.View\r\nimport android.widget.DatePicker\r\nimport android.widget.EditText\r\nimport android.widget.RelativeLayout\r\nimport android.widget.Toast\r\nimport androidx.appcompat.widget.SearchView\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\nimport com.google.android.gms.ads.AdListener\r\nimport com.google.android.gms.ads.AdRequest\r\nimport com.google.android.gms.ads.AdView\r\nimport com.google.android.gms.ads.MobileAds\r\nimport com.google.android.material.tabs.TabLayout\r\nimport com.google.android.material.textfield.TextInputEditText\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\nimport com.misit.abpenergy.api.ApiClient\r\nimport com.misit.abpenergy.api.ApiEndPoint\r\nimport com.misit.faceidchecklogptabp.Adapter.ListAbsenAdapter\r\nimport com.misit.faceidchecklogptabp.Response.Absen.AllAbsenResponse\r\nimport com.misit.faceidchecklogptabp.Response.Absen.DataItems\r\nimport es.dmoral.toasty.Toasty\r\nimport kotlinx.android.synthetic.main.activity_list_absen.*\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass ListAbsenActivity : AppCompatActivity(),View.OnClickListener, ListAbsenAdapter.OnItemClickListener {\r\n    private var adapter: ListAbsenAdapter? = null\r\n    private var absenList: MutableList<DataItems>? = null\r\n    private var absenListFilter: MutableList<DataItems>? = null\r\n    private var nik: String? = null\r\n    private var page : Int=1\r\n    private var visibleItem : Int=0\r\n    private var loading : Boolean=false\r\n    private var total : Int=0\r\n    private var pastVisibleItem : Int=0\r\n    lateinit var rvLoading: RelativeLayout\r\n    lateinit var rvListAbsen: RecyclerView\r\n    lateinit var swipeRefreshLayout: SwipeRefreshLayout\r\n    lateinit var now :Calendar\r\n    var curentPosition: Int=0\r\n    lateinit var mAdView : AdView\r\n    private var mFirebaseAnalytics: FirebaseAnalytics? = null\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_list_absen)\r\n        now = Calendar.getInstance()\r\n        TANGGAL = SimpleDateFormat(\"dd MMMM yyyy\").format(now.time)\r\n        title = \"Lihat Data Telah Absen\"\r\n        ABSEN=\"Masuk\"\r\n        swipeRefreshLayout = findViewById(R.id.listPullRefresh) as SwipeRefreshLayout\r\n\r\n        var actionBar = supportActionBar\r\n        actionBar?.setDisplayHomeAsUpEnabled(true)\r\n        nik = intent.getStringExtra(NIK)\r\n        absenList = ArrayList()\r\n        absenListFilter = ArrayList()\r\n        adapter= ListAbsenAdapter(this,absenList!!)\r\n        rvLoading = findViewById(R.id.relativeLoading)\r\n        rvListAbsen = findViewById(R.id.rvListAbsen)\r\n        rvListAbsen.layoutManager = GridLayoutManager(this,2)\r\n        rvListAbsen.adapter= adapter\r\n        adapter?.setListener(this)\r\n        pilihTanggal.setText(TANGGAL)\r\n        pilihTanggal.setOnClickListener(this)\r\n        loadAbsen(page,TANGGAL, ABSEN)\r\n        val tabLayout =  findViewById<View>(R.id.tabs) as TabLayout\r\n        tabLayout.addOnTabSelectedListener(object :TabLayout.OnTabSelectedListener{\r\n            override fun onTabReselected(p0: TabLayout.Tab?) {\r\n            }\r\n\r\n            override fun onTabUnselected(p0: TabLayout.Tab?) {\r\n            }\r\n\r\n            override fun onTabSelected(p0: TabLayout.Tab?) {\r\n                page=1\r\n                absenList?.clear()\r\n                absenListFilter?.clear()\r\n                if(p0!!.position==0){\r\n                    ABSEN=\"Masuk\"\r\n                    loadAbsen(page,TANGGAL, ABSEN)\r\n                }else if(p0!!.position==1){\r\n                    ABSEN=\"Pulang\"\r\n                    loadAbsen(page,TANGGAL, ABSEN)\r\n                }\r\n            }\r\n\r\n        })\r\n        swipeRefreshLayout.setOnRefreshListener(object :SwipeRefreshLayout.OnRefreshListener{\r\n            override fun onRefresh() {\r\n                page=1\r\n                absenList?.clear()\r\n                absenListFilter?.clear()\r\n                loadAbsen(page,TANGGAL, ABSEN)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    override fun onResume() {\r\n        MobileAds.initialize(this) {}\r\n        mAdView = findViewById(R.id.adViewLIHATABSEN)\r\n        val adRequest = AdRequest.Builder().build()\r\n        mAdView.loadAd(adRequest)\r\n\r\n        mAdView.adListener = object: AdListener() {\r\n            override fun onAdLoaded() {\r\n                // Code to be executed when an ad finishes loading.\r\n            }\r\n\r\n            override fun onAdFailedToLoad(errorCode : Int) {\r\n                Log.d(\"errorCode\",errorCode.toString())\r\n                // Code to be executed when an ad request fails.\r\n            }\r\n\r\n            override fun onAdOpened() {\r\n                // Code to be executed when an ad opens an overlay that\r\n                // covers the screen.\r\n            }\r\n\r\n            override fun onAdClicked() {\r\n                // Code to be executed when the user clicks on an ad.\r\n            }\r\n\r\n            override fun onAdLeftApplication() {\r\n                // Code to be executed when the user has left the app.\r\n            }\r\n\r\n            override fun onAdClosed() {\r\n                // Code to be executed when the user is about to return\r\n                // to the app after tapping on an ad.\r\n            }\r\n        }\r\n        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);\r\n\r\n        super.onResume()\r\n    }\r\n    fun showDialogTgl(context: Context,inTgl: EditText,callback:Boolean){\r\n        val datePicker  = DatePickerDialog.OnDateSetListener{\r\n                view: DatePicker?, year: Int, month: Int, dayOfMonth: Int ->\r\n            now.set(Calendar.YEAR,year)\r\n            now.set(Calendar.MONTH,month)\r\n            now.set(Calendar.DAY_OF_MONTH,dayOfMonth)\r\n            TANGGAL=SimpleDateFormat(\"dd MMMM yyyy\").format(now.time)\r\n            inTgl.setText(TANGGAL)\r\n            if(callback){\r\n                absenList?.clear()\r\n                absenListFilter?.clear()\r\n                loadAbsen(page,TANGGAL, ABSEN)\r\n            }\r\n        }\r\n        DatePickerDialog(context,\r\n            datePicker,\r\n            now.get(Calendar.YEAR),\r\n            now.get(Calendar.MONTH),\r\n            now.get(Calendar.DAY_OF_MONTH)\r\n        ).show()\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\r\n        menuInflater.inflate(R.menu.menu_search,menu)\r\n        val menuItem = menu!!.findItem(R.id.searchAbsen)\r\n        val searchView = menuItem.actionView as SearchView\r\n\r\n        searchView.setOnQueryTextListener(object :SearchView.OnQueryTextListener{\r\n            override fun onQueryTextSubmit(query: String?): Boolean {\r\n                return true\r\n            }\r\n\r\n            override fun onQueryTextChange(newText: String?): Boolean {\r\n                newText.let {\r\n                    filter(it!!.toLowerCase())\r\n                }\r\n                return true\r\n            }\r\n        })\r\n\r\n        return super.onCreateOptionsMenu(menu)\r\n    }\r\n\r\n    private fun filter(search: String) {\r\n        if (search.isNotEmpty()){\r\n            absenList?.clear()\r\n            absenListFilter?.forEach {\r\n                if(it.nik?.toLowerCase(Locale.getDefault())!!.contains(search) ||\r\n                    it.nama?.toLowerCase(Locale.getDefault())!!.contains(search)\r\n                        ){\r\nabsenList?.add(it)\r\n                }\r\n                rvListAbsen.adapter?.notifyDataSetChanged()\r\n            }\r\n        }else{\r\nabsenList?.clear()\r\nabsenList?.addAll(absenListFilter!!)\r\n        rvListAbsen.adapter?.notifyDataSetChanged()\r\n        }\r\n    }\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return super.onSupportNavigateUp()\r\n    }\r\n    private fun loadAbsen(hal:Int?,tanggal:String,absen:String) {\r\n        swipeRefreshLayout.isRefreshing=true\r\n        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)\r\n        val call = apiEndPoint.listAllAbsen(tanggal,absen,hal)\r\n        call?.enqueue(object : Callback<AllAbsenResponse?> {\r\n            override fun onFailure(call: Call<AllAbsenResponse?>, t: Throwable) {\r\n                swipeRefreshLayout.isRefreshing=false\r\n            }\r\n            override fun onResponse(\r\n                call: Call<AllAbsenResponse?>,\r\n                response: Response<AllAbsenResponse?>\r\n            ) {\r\n                val absenRes = response.body()\r\n                if(absenRes!=null){\r\n                    swipeRefreshLayout.isRefreshing=false\r\n                    rvLoading.visibility= View.GONE\r\n                    loading=true\r\n                    if(absenList?.size==0){\r\n                        absenRes.data!!.forEach {\r\n                            if(it.status==absen){\r\n                                absenListFilter?.add(it!!)\r\n                                absenList?.add(it!!)\r\n                            }\r\n                        }\r\n                        adapter?.notifyDataSetChanged()\r\n                    }else{\r\n                        curentPosition = (rvListAbsen.layoutManager as GridLayoutManager).findLastVisibleItemPosition()\r\n                        absenRes.data!!.forEach {\r\n                            if(it.status==absen){\r\n                                absenListFilter?.add(it!!)\r\n                                absenList?.add(it!!)\r\n                            }\r\n                        }\r\n                        adapter?.notifyDataSetChanged()\r\n                    }\r\n                    rvListAbsen.addOnScrollListener(object: RecyclerView.OnScrollListener(){\r\n                        override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {\r\n                            super.onScrolled(recyclerView, dx, dy)\r\n                            if(dy>0){\r\n                                visibleItem = (recyclerView.layoutManager as GridLayoutManager).childCount\r\n                                total=(recyclerView.layoutManager as GridLayoutManager).itemCount\r\n                                pastVisibleItem=(recyclerView.layoutManager as GridLayoutManager).findFirstVisibleItemPosition()\r\n                                if(loading) {\r\n                                    if ((visibleItem + pastVisibleItem) >= total) {\r\n                                        //Toasty.info(this@LihatAbsenActivity,visibleItem.toString(),Toasty.LENGTH_SHORT).show()\r\n                                        //rvLoading.visibility=View.VISIBLE\r\n                                        if (page < absenRes.lastPage!!){\r\n                                            loading = false\r\n                                            page++\r\n                                            loadAbsen(page, TANGGAL, ABSEN)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n    override fun onItemClick(\r\n        nik: String?,\r\n        nama: String?,\r\n        gambar: String?,\r\n        tgl: String?,\r\n        jam: String?,\r\n        status: String?,\r\n        lat: String?,\r\n        lng: String?) {\r\n        var intent = Intent(this@ListAbsenActivity,ViewImageActivity::class.java)\r\n        intent.putExtra(ViewImageActivity.NIK,nik)\r\n        intent.putExtra(ViewImageActivity.GAMBAR,gambar)\r\n        intent.putExtra(ViewImageActivity.NAMA,nama)\r\n        intent.putExtra(ViewImageActivity.TGL,tgl)\r\n        intent.putExtra(ViewImageActivity.JAM,jam)\r\n        intent.putExtra(ViewImageActivity.STATUS,status)\r\n        intent.putExtra(ViewImageActivity.LAT,lat)\r\n        intent.putExtra(ViewImageActivity.LNG,lng)\r\n        startActivity(intent)\r\n    }\r\n    companion object{\r\n\r\n        var TIPE = \"TIPE\"\r\n        var NIK = \"NIK\"\r\n        var NAMA = \"NAMA\"\r\n        var TANGGAL = \"\"\r\n        var ABSEN = \"Masuk\"\r\n    }\r\n\r\n    override fun onClick(v: View?) {\r\n        if(v!!.id==R.id.pilihTanggal){\r\n            showDialogTgl(this@ListAbsenActivity,pilihTanggal,true)\r\n        }\r\n//        else if(v!!.id==R.id.tabMasuk){\r\n//\r\n//        }\r\n//        else if(v!!.id==R.id.tabPulang){\r\n//            ABSEN=\"Pulang\"\r\n//            loadAbsen(page,TANGGAL, ABSEN)\r\n//\r\n//        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/misit/faceidchecklogptabp/ListAbsenActivity.kt	(revision dc4f0e4641c20c1ebb8a0e115686e2cb61f3b5fa)
+++ app/src/main/java/com/misit/faceidchecklogptabp/ListAbsenActivity.kt	(date 1633069960344)
@@ -213,65 +213,66 @@
         return super.onSupportNavigateUp()
     }
     private fun loadAbsen(hal:Int?,tanggal:String,absen:String) {
-        swipeRefreshLayout.isRefreshing=true
-        val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
-        val call = apiEndPoint.listAllAbsen(tanggal,absen,hal)
-        call?.enqueue(object : Callback<AllAbsenResponse?> {
-            override fun onFailure(call: Call<AllAbsenResponse?>, t: Throwable) {
-                swipeRefreshLayout.isRefreshing=false
-            }
-            override fun onResponse(
-                call: Call<AllAbsenResponse?>,
-                response: Response<AllAbsenResponse?>
-            ) {
-                val absenRes = response.body()
-                if(absenRes!=null){
-                    swipeRefreshLayout.isRefreshing=false
-                    rvLoading.visibility= View.GONE
-                    loading=true
-                    if(absenList?.size==0){
-                        absenRes.data!!.forEach {
-                            if(it.status==absen){
-                                absenListFilter?.add(it!!)
-                                absenList?.add(it!!)
-                            }
-                        }
-                        adapter?.notifyDataSetChanged()
-                    }else{
-                        curentPosition = (rvListAbsen.layoutManager as GridLayoutManager).findLastVisibleItemPosition()
-                        absenRes.data!!.forEach {
-                            if(it.status==absen){
-                                absenListFilter?.add(it!!)
-                                absenList?.add(it!!)
-                            }
-                        }
-                        adapter?.notifyDataSetChanged()
-                    }
-                    rvListAbsen.addOnScrollListener(object: RecyclerView.OnScrollListener(){
-                        override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {
-                            super.onScrolled(recyclerView, dx, dy)
-                            if(dy>0){
-                                visibleItem = (recyclerView.layoutManager as GridLayoutManager).childCount
-                                total=(recyclerView.layoutManager as GridLayoutManager).itemCount
-                                pastVisibleItem=(recyclerView.layoutManager as GridLayoutManager).findFirstVisibleItemPosition()
-                                if(loading) {
-                                    if ((visibleItem + pastVisibleItem) >= total) {
-                                        //Toasty.info(this@LihatAbsenActivity,visibleItem.toString(),Toasty.LENGTH_SHORT).show()
-                                        //rvLoading.visibility=View.VISIBLE
-                                        if (page < absenRes.lastPage!!){
-                                            loading = false
-                                            page++
-                                            loadAbsen(page, TANGGAL, ABSEN)
-                                        }
-                                    }
-                                }
-                            }
-                        }
-                    })
-                }
-            }
+            swipeRefreshLayout.isRefreshing=true
+            val apiEndPoint = ApiClient.getClient(this)!!.create(ApiEndPoint::class.java)
+            val call = apiEndPoint.listAllAbsen(tanggal,absen,hal)
+            call?.enqueue(object : Callback<AllAbsenResponse?> {
+                override fun onFailure(call: Call<AllAbsenResponse?>, t: Throwable) {
+                    swipeRefreshLayout.isRefreshing=false
+                }
+                override fun onResponse(
+                    call: Call<AllAbsenResponse?>,
+                    response: Response<AllAbsenResponse?>
+                ) {
+                    val absenRes = response.body()
+                    if(absenRes!=null){
+                        swipeRefreshLayout.isRefreshing=false
+                        rvLoading.visibility= View.GONE
+                        loading=true
+                        if(absenList?.size==0){
+                            absenRes.data!!.forEach {
+                                if(it.status==absen){
+                                    absenListFilter?.add(it!!)
+                                    absenList?.add(it!!)
+                                }
+                            }
+                            adapter?.notifyDataSetChanged()
+                        }else{
+                            curentPosition = (rvListAbsen.layoutManager as GridLayoutManager).findLastVisibleItemPosition()
+                            absenRes.data!!.forEach {
+                                if(it.status==absen){
+                                    absenListFilter?.add(it!!)
+                                    absenList?.add(it!!)
+                                }
+                            }
+                            adapter?.notifyDataSetChanged()
+                        }
+                        rvListAbsen.addOnScrollListener(object: RecyclerView.OnScrollListener(){
+                            override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {
+                                super.onScrolled(recyclerView, dx, dy)
+                                if(dy>0){
+                                    visibleItem = (recyclerView.layoutManager as GridLayoutManager).childCount
+                                    total=(recyclerView.layoutManager as GridLayoutManager).itemCount
+                                    pastVisibleItem=(recyclerView.layoutManager as GridLayoutManager).findFirstVisibleItemPosition()
+                                    if(loading) {
+                                        if ((visibleItem + pastVisibleItem) >= total) {
+                                            //Toasty.info(this@LihatAbsenActivity,visibleItem.toString(),Toasty.LENGTH_SHORT).show()
+                                            //rvLoading.visibility=View.VISIBLE
+                                            if (page < absenRes.lastPage!!){
+                                                loading = false
+                                                page++
+                                                loadAbsen(page, TANGGAL, ABSEN)
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        })
+                    }
+                }
 
-        })
+            })
+
     }
     override fun onItemClick(
         nik: String?,
